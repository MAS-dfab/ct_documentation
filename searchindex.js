Search.setIndex({"alltitles": {"API Reference": [[0, null]], "Actor": [[699, null]], "Actor.get_name": [[700, null]], "Attributes": [[774, null]], "BTLx Contribution Guide": [[773, null]], "BTLxPart": [[460, null]], "BTLxPart.et_point_vals": [[461, null]], "BTLxPart.ref_side_from_face": [[462, null]], "BTLxProcessing": [[463, null]], "BTLxProcessing.ToString": [[464, null]], "BTLxProcessing.add_subprocessing": [[465, null]], "BTLxProcessing.copy": [[466, null]], "BTLxProcessing.from_json": [[467, null]], "BTLxProcessing.from_jsonstring": [[468, null]], "BTLxProcessing.sha256": [[469, null]], "BTLxProcessing.to_json": [[470, null]], "BTLxProcessing.to_jsonstring": [[471, null]], "BTLxProcessing.validate_data": [[472, null]], "BTLxWriter": [[473, null]], "BTLxWriter.model_to_xml": [[474, null]], "BTLxWriter.write": [[475, null]], "Bake with BoxMap": [[783, "bake-with-boxmap"]], "BallNodeJoint": [[10, null]], "BallNodeJoint.ToString": [[11, null]], "BallNodeJoint.add_extensions": [[12, null]], "BallNodeJoint.add_features": [[13, null]], "BallNodeJoint.check_elements_compatibility": [[14, null]], "BallNodeJoint.copy": [[15, null]], "BallNodeJoint.create": [[16, null]], "BallNodeJoint.element_count_complies": [[17, null]], "BallNodeJoint.from_json": [[18, null]], "BallNodeJoint.from_jsonstring": [[19, null]], "BallNodeJoint.get_face_most_ortho_to_beam": [[20, null]], "BallNodeJoint.get_face_most_towards_beam": [[21, null]], "BallNodeJoint.restore_beams_from_keys": [[22, null]], "BallNodeJoint.sha256": [[23, null]], "BallNodeJoint.to_json": [[24, null]], "BallNodeJoint.to_jsonstring": [[25, null]], "BallNodeJoint.validate_data": [[26, null]], "Beam": [[343, null]], "Beam.ToString": [[344, null]], "Beam.add_blank_extension": [[345, null]], "Beam.add_feature": [[346, null]], "Beam.add_features": [[347, null]], "Beam.compute_aabb": [[348, null]], "Beam.compute_collision_mesh": [[349, null]], "Beam.compute_geometry": [[350, null]], "Beam.compute_obb": [[351, null]], "Beam.compute_worldtransformation": [[352, null]], "Beam.copy": [[353, null]], "Beam.endpoint_closest_to_point": [[354, null]], "Beam.extension_to_plane": [[355, null]], "Beam.from_centerline": [[356, null]], "Beam.from_endpoints": [[357, null]], "Beam.from_json": [[358, null]], "Beam.from_jsonstring": [[359, null]], "Beam.opposing_side_index": [[360, null]], "Beam.remove_blank_extension": [[361, null]], "Beam.remove_features": [[362, null]], "Beam.reset": [[363, null]], "Beam.sha256": [[364, null]], "Beam.side_as_surface": [[365, null]], "Beam.to_json": [[366, null]], "Beam.to_jsonstring": [[367, null]], "Beam.transform": [[368, null]], "Beam.transformed": [[369, null]], "Beam.validate_data": [[370, null]], "BeamJoinningError": [[457, null]], "Beams": [[775, null]], "Brep Drill Hole Feature": [[779, "brep-drill-hole-feature"]], "Brep Subtraction Feature": [[779, "brep-subtraction-feature"]], "BuildingPlan": [[701, null]], "BuildingPlan.ToString": [[702, null]], "BuildingPlan.add_step": [[703, null]], "BuildingPlan.copy": [[704, null]], "BuildingPlan.from_json": [[705, null]], "BuildingPlan.from_jsonstring": [[706, null]], "BuildingPlan.sha256": [[707, null]], "BuildingPlan.to_json": [[708, null]], "BuildingPlan.to_jsonstring": [[709, null]], "BuildingPlan.validate_data": [[710, null]], "BuildingPlanParser": [[711, null]], "BuildingPlanParser.parse": [[712, null]], "BuildingPlanParser.serialize": [[713, null]], "COMPAS Timber Documentation": [[769, null]], "Category Joint Rules": [[780, "category-joint-rules"]], "CategoryRule": [[284, null]], "CategoryRule.ToString": [[285, null]], "CategoryRule.comply": [[286, null]], "CategoryRule.get_category_rules": [[287, null]], "CategoryRule.get_direct_rules": [[288, null]], "CategoryRule.get_topology_rules": [[289, null]], "CategoryRule.joints_from_beams_and_rules": [[290, null]], "CategoryRule.reorder": [[291, null]], "Check Attributes": [[774, "check-attributes"]], "Citing": [[766, null]], "Classes": [[1, "classes"], [2, "classes"], [3, "classes"], [4, "classes"], [5, "classes"], [7, "classes"], [8, "classes"]], "ConnectionSolver": [[27, null]], "ConnectionSolver.find_intersecting_pairs": [[28, null]], "ConnectionSolver.find_topology": [[29, null]], "Create Joint": [[768, null]], "Custom Attributes": [[774, "custom-attributes"]], "Custom Beam Dimensions": [[776, "custom-beam-dimensions"]], "DebugInfomation": [[292, null]], "DebugInfomation.ToString": [[293, null]], "DebugInfomation.add_fastener_error": [[294, null]], "DebugInfomation.add_feature_error": [[295, null]], "DebugInfomation.add_joint_error": [[296, null]], "DecomposeBeam": [[775, "decomposebeam"]], "Default Joint Rules": [[780, "default-joint-rules"]], "Delete Attributes": [[774, "delete-attributes"]], "Dependencies": [[769, "dependencies"]], "Design": [[776, null]], "Development": [[770, "development"]], "Direct Joint Rules": [[780, "direct-joint-rules"]], "DirectRule": [[297, null]], "DirectRule.ToString": [[298, null]], "DirectRule.comply": [[299, null]], "DirectRule.get_category_rules": [[300, null]], "DirectRule.get_direct_rules": [[301, null]], "DirectRule.get_topology_rules": [[302, null]], "DirectRule.joints_from_beams_and_rules": [[303, null]], "DoubleCut": [[476, null]], "DoubleCut.ToString": [[477, null]], "DoubleCut.add_subprocessing": [[478, null]], "DoubleCut.apply": [[479, null]], "DoubleCut.copy": [[480, null]], "DoubleCut.from_json": [[481, null]], "DoubleCut.from_jsonstring": [[482, null]], "DoubleCut.from_planes_and_beam": [[483, null]], "DoubleCut.planes_from_params_and_beam": [[484, null]], "DoubleCut.sha256": [[485, null]], "DoubleCut.to_json": [[486, null]], "DoubleCut.to_jsonstring": [[487, null]], "DoubleCut.validate_data": [[488, null]], "DovetailMortise": [[489, null]], "DovetailMortise.ToString": [[490, null]], "DovetailMortise.add_subprocessing": [[491, null]], "DovetailMortise.apply": [[492, null]], "DovetailMortise.copy": [[493, null]], "DovetailMortise.define_dovetail_tool": [[494, null]], "DovetailMortise.dovetail_cutting_frames_from_params_and_beam": [[495, null]], "DovetailMortise.dovetail_volume_from_params_and_beam": [[496, null]], "DovetailMortise.frame_from_params_and_beam": [[497, null]], "DovetailMortise.from_frame_and_beam": [[498, null]], "DovetailMortise.from_json": [[499, null]], "DovetailMortise.from_jsonstring": [[500, null]], "DovetailMortise.sha256": [[501, null]], "DovetailMortise.to_json": [[502, null]], "DovetailMortise.to_jsonstring": [[503, null]], "DovetailMortise.validate_data": [[504, null]], "DovetailTenon": [[505, null]], "DovetailTenon.ToString": [[506, null]], "DovetailTenon.add_subprocessing": [[507, null]], "DovetailTenon.apply": [[508, null]], "DovetailTenon.copy": [[509, null]], "DovetailTenon.define_dovetail_tool": [[510, null]], "DovetailTenon.dovetail_cutting_frames_from_params_and_beam": [[511, null]], "DovetailTenon.dovetail_volume_from_params_and_beam": [[512, null]], "DovetailTenon.frame_from_params_and_beam": [[513, null]], "DovetailTenon.from_json": [[514, null]], "DovetailTenon.from_jsonstring": [[515, null]], "DovetailTenon.from_plane_and_beam": [[516, null]], "DovetailTenon.sha256": [[517, null]], "DovetailTenon.to_json": [[518, null]], "DovetailTenon.to_jsonstring": [[519, null]], "DovetailTenon.validate_data": [[520, null]], "Drilling": [[521, null]], "Drilling.ToString": [[522, null]], "Drilling.add_subprocessing": [[523, null]], "Drilling.apply": [[524, null]], "Drilling.copy": [[525, null]], "Drilling.cylinder_from_params_and_beam": [[526, null]], "Drilling.from_json": [[527, null]], "Drilling.from_jsonstring": [[528, null]], "Drilling.from_line_and_beam": [[529, null]], "Drilling.sha256": [[530, null]], "Drilling.to_json": [[531, null]], "Drilling.to_jsonstring": [[532, null]], "Drilling.validate_data": [[533, null]], "EdgePositionType": [[534, null]], "Examples": [[767, null], [777, null]], "Exceptions": [[1, "exceptions"]], "Fabrication": [[778, null]], "Fastener": [[371, null]], "Fastener.ToString": [[372, null]], "Fastener.add_feature": [[373, null]], "Fastener.compute_aabb": [[374, null]], "Fastener.compute_collision_mesh": [[375, null]], "Fastener.compute_geometry": [[376, null]], "Fastener.compute_obb": [[377, null]], "Fastener.compute_worldtransformation": [[378, null]], "Fastener.copy": [[379, null]], "Fastener.from_json": [[380, null]], "Fastener.from_jsonstring": [[381, null]], "Fastener.reset": [[382, null]], "Fastener.sha256": [[383, null]], "Fastener.to_json": [[384, null]], "Fastener.to_jsonstring": [[385, null]], "Fastener.transform": [[386, null]], "Fastener.transformed": [[387, null]], "Fastener.validate_data": [[388, null]], "FastenerApplicationError": [[458, null]], "FastenerTimberInterface": [[389, null]], "FastenerTimberInterface.ToString": [[390, null]], "FastenerTimberInterface.copy": [[391, null]], "FastenerTimberInterface.from_json": [[392, null]], "FastenerTimberInterface.from_jsonstring": [[393, null]], "FastenerTimberInterface.get_features": [[394, null]], "FastenerTimberInterface.sha256": [[395, null]], "FastenerTimberInterface.to_json": [[396, null]], "FastenerTimberInterface.to_jsonstring": [[397, null]], "FastenerTimberInterface.validate_data": [[398, null]], "FeatureApplicationError": [[459, null]], "FeatureDefinition": [[304, null]], "FeatureDefinition.ToString": [[305, null]], "Features": [[779, null]], "FindBeamByRhinoGuid": [[775, "findbeambyrhinoguid"]], "French Ridge Lap": [[780, "french-ridge-lap"]], "FrenchRidgeLap": [[535, null]], "FrenchRidgeLap.ToString": [[536, null]], "FrenchRidgeLap.add_subprocessing": [[537, null]], "FrenchRidgeLap.apply": [[538, null]], "FrenchRidgeLap.copy": [[539, null]], "FrenchRidgeLap.frame_from_params_and_beam": [[540, null]], "FrenchRidgeLap.from_beam_beam_and_plane": [[541, null]], "FrenchRidgeLap.from_json": [[542, null]], "FrenchRidgeLap.from_jsonstring": [[543, null]], "FrenchRidgeLap.lap_volume_from_params_and_beam": [[544, null]], "FrenchRidgeLap.sha256": [[545, null]], "FrenchRidgeLap.to_json": [[546, null]], "FrenchRidgeLap.to_jsonstring": [[547, null]], "FrenchRidgeLap.validate_data": [[548, null]], "Functions": [[1, "functions"], [2, "functions"], [6, "functions"]], "Grasshopper plugin": [[772, null]], "Indices and tables": [[769, "indices-and-tables"]], "Install with conda": [[770, "install-with-conda"]], "Installation": [[770, null]], "Instruction": [[714, null]], "Instruction.ToString": [[715, null]], "Instruction.copy": [[716, null]], "Instruction.from_json": [[717, null]], "Instruction.from_jsonstring": [[718, null]], "Instruction.sha256": [[719, null]], "Instruction.to_json": [[720, null]], "Instruction.to_jsonstring": [[721, null]], "Instruction.transform": [[722, null]], "Instruction.validate_data": [[723, null]], "JackRafterCut": [[549, null]], "JackRafterCut.ToString": [[550, null]], "JackRafterCut.add_subprocessing": [[551, null]], "JackRafterCut.apply": [[552, null]], "JackRafterCut.copy": [[553, null]], "JackRafterCut.from_json": [[554, null]], "JackRafterCut.from_jsonstring": [[555, null]], "JackRafterCut.from_plane_and_beam": [[556, null]], "JackRafterCut.plane_from_params_and_beam": [[557, null]], "JackRafterCut.sha256": [[558, null]], "JackRafterCut.to_json": [[559, null]], "JackRafterCut.to_jsonstring": [[560, null]], "JackRafterCut.validate_data": [[561, null]], "Joint": [[30, null]], "Joint Rules": [[780, null]], "Joint Rules Components": [[780, "joint-rules-components"]], "Joint Types": [[780, "joint-types"]], "Joint.ToString": [[31, null]], "Joint.add_extensions": [[32, null]], "Joint.add_features": [[33, null]], "Joint.check_elements_compatibility": [[34, null]], "Joint.copy": [[35, null]], "Joint.create": [[36, null]], "Joint.element_count_complies": [[37, null]], "Joint.from_json": [[38, null]], "Joint.from_jsonstring": [[39, null]], "Joint.get_face_most_ortho_to_beam": [[40, null]], "Joint.get_face_most_towards_beam": [[41, null]], "Joint.restore_beams_from_keys": [[42, null]], "Joint.sha256": [[43, null]], "Joint.to_json": [[44, null]], "Joint.to_jsonstring": [[45, null]], "Joint.validate_data": [[46, null]], "JointDefinition": [[306, null]], "JointDefinition.ToString": [[307, null]], "JointDefinition.is_identical": [[308, null]], "JointDefinition.match": [[309, null]], "JointRule": [[310, null]], "JointRule.comply": [[311, null]], "JointRule.get_category_rules": [[312, null]], "JointRule.get_direct_rules": [[313, null]], "JointRule.get_topology_rules": [[314, null]], "JointRule.joints_from_beams_and_rules": [[315, null]], "JointTopology": [[47, null]], "JointTopology.get_name": [[48, null]], "L-Butt": [[780, "l-butt"]], "L-HalfLap": [[780, "l-halflap"]], "L-Miter": [[780, "l-miter"]], "LButtJoint": [[49, null]], "LButtJoint.ToString": [[50, null]], "LButtJoint.add_extensions": [[51, null]], "LButtJoint.add_features": [[52, null]], "LButtJoint.check_elements_compatibility": [[53, null]], "LButtJoint.copy": [[54, null]], "LButtJoint.create": [[55, null]], "LButtJoint.element_count_complies": [[56, null]], "LButtJoint.from_json": [[57, null]], "LButtJoint.from_jsonstring": [[58, null]], "LButtJoint.get_face_most_ortho_to_beam": [[59, null]], "LButtJoint.get_face_most_towards_beam": [[60, null]], "LButtJoint.restore_beams_from_keys": [[61, null]], "LButtJoint.sha256": [[62, null]], "LButtJoint.to_json": [[63, null]], "LButtJoint.to_jsonstring": [[64, null]], "LButtJoint.update_beam_roles": [[65, null]], "LButtJoint.validate_data": [[66, null]], "LFrenchRidgeLapJoint": [[67, null]], "LFrenchRidgeLapJoint.ToString": [[68, null]], "LFrenchRidgeLapJoint.add_extensions": [[69, null]], "LFrenchRidgeLapJoint.add_features": [[70, null]], "LFrenchRidgeLapJoint.check_elements_compatibility": [[71, null]], "LFrenchRidgeLapJoint.copy": [[72, null]], "LFrenchRidgeLapJoint.create": [[73, null]], "LFrenchRidgeLapJoint.element_count_complies": [[74, null]], "LFrenchRidgeLapJoint.from_json": [[75, null]], "LFrenchRidgeLapJoint.from_jsonstring": [[76, null]], "LFrenchRidgeLapJoint.get_face_most_ortho_to_beam": [[77, null]], "LFrenchRidgeLapJoint.get_face_most_towards_beam": [[78, null]], "LFrenchRidgeLapJoint.restore_beams_from_keys": [[79, null]], "LFrenchRidgeLapJoint.sha256": [[80, null]], "LFrenchRidgeLapJoint.to_json": [[81, null]], "LFrenchRidgeLapJoint.to_jsonstring": [[82, null]], "LFrenchRidgeLapJoint.validate_data": [[83, null]], "LHalfLapJoint": [[84, null]], "LHalfLapJoint.ToString": [[85, null]], "LHalfLapJoint.add_extensions": [[86, null]], "LHalfLapJoint.add_features": [[87, null]], "LHalfLapJoint.check_elements_compatibility": [[88, null]], "LHalfLapJoint.copy": [[89, null]], "LHalfLapJoint.create": [[90, null]], "LHalfLapJoint.element_count_complies": [[91, null]], "LHalfLapJoint.from_json": [[92, null]], "LHalfLapJoint.from_jsonstring": [[93, null]], "LHalfLapJoint.get_cross_cutting_frame": [[94, null]], "LHalfLapJoint.get_face_most_ortho_to_beam": [[95, null]], "LHalfLapJoint.get_face_most_towards_beam": [[96, null]], "LHalfLapJoint.get_main_cutting_frame": [[97, null]], "LHalfLapJoint.restore_beams_from_keys": [[98, null]], "LHalfLapJoint.sha256": [[99, null]], "LHalfLapJoint.to_json": [[100, null]], "LHalfLapJoint.to_jsonstring": [[101, null]], "LHalfLapJoint.validate_data": [[102, null]], "LMiterJoint": [[103, null]], "LMiterJoint.ToString": [[104, null]], "LMiterJoint.add_extensions": [[105, null]], "LMiterJoint.add_features": [[106, null]], "LMiterJoint.check_elements_compatibility": [[107, null]], "LMiterJoint.copy": [[108, null]], "LMiterJoint.create": [[109, null]], "LMiterJoint.element_count_complies": [[110, null]], "LMiterJoint.from_json": [[111, null]], "LMiterJoint.from_jsonstring": [[112, null]], "LMiterJoint.get_cutting_planes": [[113, null]], "LMiterJoint.get_face_most_ortho_to_beam": [[114, null]], "LMiterJoint.get_face_most_towards_beam": [[115, null]], "LMiterJoint.restore_beams_from_keys": [[116, null]], "LMiterJoint.sha256": [[117, null]], "LMiterJoint.to_json": [[118, null]], "LMiterJoint.to_jsonstring": [[119, null]], "LMiterJoint.validate_data": [[120, null]], "Lap": [[562, null]], "Lap.ToString": [[563, null]], "Lap.add_subprocessing": [[564, null]], "Lap.apply": [[565, null]], "Lap.copy": [[566, null]], "Lap.from_beam_and_beam": [[567, null]], "Lap.from_json": [[568, null]], "Lap.from_jsonstring": [[569, null]], "Lap.from_plane_and_beam": [[570, null]], "Lap.sha256": [[571, null]], "Lap.to_json": [[572, null]], "Lap.to_jsonstring": [[573, null]], "Lap.validate_data": [[574, null]], "Lap.volume_from_params_and_beam": [[575, null]], "LapJoint": [[121, null]], "LapJoint.ToString": [[122, null]], "LapJoint.add_extensions": [[123, null]], "LapJoint.add_features": [[124, null]], "LapJoint.check_elements_compatibility": [[125, null]], "LapJoint.copy": [[126, null]], "LapJoint.create": [[127, null]], "LapJoint.element_count_complies": [[128, null]], "LapJoint.from_json": [[129, null]], "LapJoint.from_jsonstring": [[130, null]], "LapJoint.get_cross_cutting_frame": [[131, null]], "LapJoint.get_face_most_ortho_to_beam": [[132, null]], "LapJoint.get_face_most_towards_beam": [[133, null]], "LapJoint.get_main_cutting_frame": [[134, null]], "LapJoint.restore_beams_from_keys": [[135, null]], "LapJoint.sha256": [[136, null]], "LapJoint.to_json": [[137, null]], "LapJoint.to_jsonstring": [[138, null]], "LapJoint.validate_data": [[139, null]], "License": [[771, null]], "LinearDimension": [[724, null]], "LinearDimension.ToString": [[725, null]], "LinearDimension.copy": [[726, null]], "LinearDimension.from_json": [[727, null]], "LinearDimension.from_jsonstring": [[728, null]], "LinearDimension.sha256": [[729, null]], "LinearDimension.to_json": [[730, null]], "LinearDimension.to_jsonstring": [[731, null]], "LinearDimension.transform": [[732, null]], "LinearDimension.validate_data": [[733, null]], "Model": [[781, null]], "Model3d": [[734, null]], "Model3d.ToString": [[735, null]], "Model3d.copy": [[736, null]], "Model3d.from_json": [[737, null]], "Model3d.from_jsonstring": [[738, null]], "Model3d.sha256": [[739, null]], "Model3d.to_json": [[740, null]], "Model3d.to_jsonstring": [[741, null]], "Model3d.transform": [[742, null]], "Model3d.validate_data": [[743, null]], "Mortise": [[576, null]], "Mortise.ToString": [[577, null]], "Mortise.add_subprocessing": [[578, null]], "Mortise.apply": [[579, null]], "Mortise.copy": [[580, null]], "Mortise.frame_from_params_and_beam": [[581, null]], "Mortise.from_frame_and_beam": [[582, null]], "Mortise.from_json": [[583, null]], "Mortise.from_jsonstring": [[584, null]], "Mortise.sha256": [[585, null]], "Mortise.to_json": [[586, null]], "Mortise.to_jsonstring": [[587, null]], "Mortise.validate_data": [[588, null]], "Mortise.volume_from_params_and_beam": [[589, null]], "NullJoint": [[140, null]], "NullJoint.ToString": [[141, null]], "NullJoint.add_extensions": [[142, null]], "NullJoint.add_features": [[143, null]], "NullJoint.check_elements_compatibility": [[144, null]], "NullJoint.copy": [[145, null]], "NullJoint.create": [[146, null]], "NullJoint.element_count_complies": [[147, null]], "NullJoint.from_json": [[148, null]], "NullJoint.from_jsonstring": [[149, null]], "NullJoint.get_face_most_ortho_to_beam": [[150, null]], "NullJoint.get_face_most_towards_beam": [[151, null]], "NullJoint.restore_beams_from_keys": [[152, null]], "NullJoint.sha256": [[153, null]], "NullJoint.to_json": [[154, null]], "NullJoint.to_jsonstring": [[155, null]], "NullJoint.validate_data": [[156, null]], "OrientationType": [[590, null]], "Packages": [[0, "packages"]], "Plate": [[399, null]], "Plate.ToString": [[400, null]], "Plate.add_feature": [[401, null]], "Plate.add_features": [[402, null]], "Plate.compute_aabb": [[403, null]], "Plate.compute_collision_mesh": [[404, null]], "Plate.compute_geometry": [[405, null]], "Plate.compute_obb": [[406, null]], "Plate.compute_worldtransformation": [[407, null]], "Plate.copy": [[408, null]], "Plate.from_json": [[409, null]], "Plate.from_jsonstring": [[410, null]], "Plate.remove_features": [[411, null]], "Plate.reset": [[412, null]], "Plate.set_frame_and_outline": [[413, null]], "Plate.sha256": [[414, null]], "Plate.to_json": [[415, null]], "Plate.to_jsonstring": [[416, null]], "Plate.transform": [[417, null]], "Plate.transformed": [[418, null]], "Plate.validate_data": [[419, null]], "Plugins": [[9, "plugins"]], "Show": [[782, null]], "Show Beam Face Index": [[782, "show-beam-face-index"]], "Show Beam Index": [[782, "show-beam-index"]], "Show Feature Errors": [[782, "show-feature-errors"]], "Show Joining Errors": [[782, "show-joining-errors"]], "Show Joint Types": [[782, "show-joint-types"]], "Show Surface Model Beam Types": [[782, "show-surface-model-beam-types"]], "Show Topology Types": [[782, "show-topology-types"]], "SimpleSequenceGenerator": [[744, null]], "Slot": [[591, null]], "Slot.ToString": [[592, null]], "Slot.add_subprocessing": [[593, null]], "Slot.apply": [[594, null]], "Slot.copy": [[595, null]], "Slot.from_json": [[596, null]], "Slot.from_jsonstring": [[597, null]], "Slot.from_plane_and_beam": [[598, null]], "Slot.sha256": [[599, null]], "Slot.to_json": [[600, null]], "Slot.to_jsonstring": [[601, null]], "Slot.validate_data": [[602, null]], "Stable": [[770, "stable"]], "Standard Attributes": [[774, "standard-attributes"]], "Step": [[745, null]], "Step.ToString": [[746, null]], "Step.copy": [[747, null]], "Step.from_json": [[748, null]], "Step.from_jsonstring": [[749, null]], "Step.sha256": [[750, null]], "Step.to_json": [[751, null]], "Step.to_jsonstring": [[752, null]], "Step.transform": [[753, null]], "Step.validate_data": [[754, null]], "StepJoint": [[603, null]], "StepJoint.ToString": [[604, null]], "StepJoint.add_subprocessing": [[605, null]], "StepJoint.add_tenon": [[606, null]], "StepJoint.apply": [[607, null]], "StepJoint.copy": [[608, null]], "StepJoint.from_json": [[609, null]], "StepJoint.from_jsonstring": [[610, null]], "StepJoint.from_plane_and_beam": [[611, null]], "StepJoint.planes_from_params_and_beam": [[612, null]], "StepJoint.sha256": [[613, null]], "StepJoint.tenon_volume_from_params_and_beam": [[614, null]], "StepJoint.to_json": [[615, null]], "StepJoint.to_jsonstring": [[616, null]], "StepJoint.validate_data": [[617, null]], "StepJointNotch": [[618, null]], "StepJointNotch.ToString": [[619, null]], "StepJointNotch.add_mortise": [[620, null]], "StepJointNotch.add_subprocessing": [[621, null]], "StepJointNotch.apply": [[622, null]], "StepJointNotch.copy": [[623, null]], "StepJointNotch.from_json": [[624, null]], "StepJointNotch.from_jsonstring": [[625, null]], "StepJointNotch.from_plane_and_beam": [[626, null]], "StepJointNotch.mortise_volume_from_params_and_beam": [[627, null]], "StepJointNotch.planes_from_params_and_beam": [[628, null]], "StepJointNotch.sha256": [[629, null]], "StepJointNotch.to_json": [[630, null]], "StepJointNotch.to_jsonstring": [[631, null]], "StepJointNotch.validate_data": [[632, null]], "Summary Table": [[780, "summary-table"]], "Surface Model": [[776, "surface-model"]], "Surface Model Joint Override": [[780, "surface-model-joint-override"]], "Surface Model Options": [[776, "surface-model-options"]], "SurfaceModel": [[316, null]], "SurfaceModel.beam_category_names": [[317, null]], "SurfaceModel.create_model": [[318, null]], "SurfaceModel.cull_overlaps": [[319, null]], "SurfaceModel.distance_between_elements": [[320, null]], "SurfaceModel.generate_frame": [[321, null]], "SurfaceModel.generate_perimeter_beams": [[322, null]], "SurfaceModel.generate_plates": [[323, null]], "SurfaceModel.generate_stud_lines": [[324, null]], "SurfaceModel.generate_studs": [[325, null]], "SurfaceModel.generate_windows": [[326, null]], "SurfaceModel.get_beam_intersections": [[327, null]], "SurfaceModel.get_interior_segment_indices": [[328, null]], "SurfaceModel.offset_elements": [[329, null]], "SurfaceModel.parse_loops": [[330, null]], "SurfaceModel.trim_jack_studs": [[331, null]], "SurfaceModel.trim_king_studs": [[332, null]], "SurfaceModel.trim_studs": [[333, null]], "T-Butt": [[780, "t-butt"]], "T-HalfLap": [[780, "t-halflap"]], "TBirdsmouthJoint": [[157, null]], "TBirdsmouthJoint.ToString": [[158, null]], "TBirdsmouthJoint.add_extensions": [[159, null]], "TBirdsmouthJoint.add_features": [[160, null]], "TBirdsmouthJoint.check_elements_compatibility": [[161, null]], "TBirdsmouthJoint.copy": [[162, null]], "TBirdsmouthJoint.create": [[163, null]], "TBirdsmouthJoint.element_count_complies": [[164, null]], "TBirdsmouthJoint.from_json": [[165, null]], "TBirdsmouthJoint.from_jsonstring": [[166, null]], "TBirdsmouthJoint.get_face_most_ortho_to_beam": [[167, null]], "TBirdsmouthJoint.get_face_most_towards_beam": [[168, null]], "TBirdsmouthJoint.restore_beams_from_keys": [[169, null]], "TBirdsmouthJoint.sha256": [[170, null]], "TBirdsmouthJoint.to_json": [[171, null]], "TBirdsmouthJoint.to_jsonstring": [[172, null]], "TBirdsmouthJoint.validate_data": [[173, null]], "TButtJoint": [[174, null]], "TButtJoint.ToString": [[175, null]], "TButtJoint.add_extensions": [[176, null]], "TButtJoint.add_features": [[177, null]], "TButtJoint.check_elements_compatibility": [[178, null]], "TButtJoint.copy": [[179, null]], "TButtJoint.create": [[180, null]], "TButtJoint.element_count_complies": [[181, null]], "TButtJoint.from_json": [[182, null]], "TButtJoint.from_jsonstring": [[183, null]], "TButtJoint.get_face_most_ortho_to_beam": [[184, null]], "TButtJoint.get_face_most_towards_beam": [[185, null]], "TButtJoint.restore_beams_from_keys": [[186, null]], "TButtJoint.sha256": [[187, null]], "TButtJoint.to_json": [[188, null]], "TButtJoint.to_jsonstring": [[189, null]], "TButtJoint.validate_data": [[190, null]], "TDovetailJoint": [[191, null]], "TDovetailJoint.ToString": [[192, null]], "TDovetailJoint.add_extensions": [[193, null]], "TDovetailJoint.add_features": [[194, null]], "TDovetailJoint.check_elements_compatibility": [[195, null]], "TDovetailJoint.copy": [[196, null]], "TDovetailJoint.create": [[197, null]], "TDovetailJoint.define_dovetail_tool": [[198, null]], "TDovetailJoint.element_count_complies": [[199, null]], "TDovetailJoint.from_json": [[200, null]], "TDovetailJoint.from_jsonstring": [[201, null]], "TDovetailJoint.get_face_most_ortho_to_beam": [[202, null]], "TDovetailJoint.get_face_most_towards_beam": [[203, null]], "TDovetailJoint.restore_beams_from_keys": [[204, null]], "TDovetailJoint.sha256": [[205, null]], "TDovetailJoint.to_json": [[206, null]], "TDovetailJoint.to_jsonstring": [[207, null]], "TDovetailJoint.validate_data": [[208, null]], "THalfLapJoint": [[209, null]], "THalfLapJoint.ToString": [[210, null]], "THalfLapJoint.add_extensions": [[211, null]], "THalfLapJoint.add_features": [[212, null]], "THalfLapJoint.check_elements_compatibility": [[213, null]], "THalfLapJoint.copy": [[214, null]], "THalfLapJoint.create": [[215, null]], "THalfLapJoint.element_count_complies": [[216, null]], "THalfLapJoint.from_json": [[217, null]], "THalfLapJoint.from_jsonstring": [[218, null]], "THalfLapJoint.get_cross_cutting_frame": [[219, null]], "THalfLapJoint.get_face_most_ortho_to_beam": [[220, null]], "THalfLapJoint.get_face_most_towards_beam": [[221, null]], "THalfLapJoint.get_main_cutting_frame": [[222, null]], "THalfLapJoint.restore_beams_from_keys": [[223, null]], "THalfLapJoint.sha256": [[224, null]], "THalfLapJoint.to_json": [[225, null]], "THalfLapJoint.to_jsonstring": [[226, null]], "THalfLapJoint.validate_data": [[227, null]], "TStepJoint": [[228, null]], "TStepJoint.ToString": [[229, null]], "TStepJoint.add_extensions": [[230, null]], "TStepJoint.add_features": [[231, null]], "TStepJoint.check_elements_compatibility": [[232, null]], "TStepJoint.copy": [[233, null]], "TStepJoint.create": [[234, null]], "TStepJoint.element_count_complies": [[235, null]], "TStepJoint.from_json": [[236, null]], "TStepJoint.from_jsonstring": [[237, null]], "TStepJoint.get_face_most_ortho_to_beam": [[238, null]], "TStepJoint.get_face_most_towards_beam": [[239, null]], "TStepJoint.restore_beams_from_keys": [[240, null]], "TStepJoint.set_step_depths": [[241, null]], "TStepJoint.sha256": [[242, null]], "TStepJoint.to_json": [[243, null]], "TStepJoint.to_jsonstring": [[244, null]], "TStepJoint.validate_data": [[245, null]], "Table of Contents": [[769, "table-of-contents"]], "Tenon": [[633, null]], "Tenon.ToString": [[634, null]], "Tenon.add_subprocessing": [[635, null]], "Tenon.apply": [[636, null]], "Tenon.copy": [[637, null]], "Tenon.frame_from_params_and_beam": [[638, null]], "Tenon.from_json": [[639, null]], "Tenon.from_jsonstring": [[640, null]], "Tenon.from_plane_and_beam": [[641, null]], "Tenon.sha256": [[642, null]], "Tenon.to_json": [[643, null]], "Tenon.to_jsonstring": [[644, null]], "Tenon.validate_data": [[645, null]], "Tenon.volume_from_params_and_beam": [[646, null]], "TenonMortiseJoint": [[246, null]], "TenonMortiseJoint.ToString": [[247, null]], "TenonMortiseJoint.add_extensions": [[248, null]], "TenonMortiseJoint.add_features": [[249, null]], "TenonMortiseJoint.check_elements_compatibility": [[250, null]], "TenonMortiseJoint.copy": [[251, null]], "TenonMortiseJoint.create": [[252, null]], "TenonMortiseJoint.element_count_complies": [[253, null]], "TenonMortiseJoint.from_json": [[254, null]], "TenonMortiseJoint.from_jsonstring": [[255, null]], "TenonMortiseJoint.get_face_most_ortho_to_beam": [[256, null]], "TenonMortiseJoint.get_face_most_towards_beam": [[257, null]], "TenonMortiseJoint.restore_beams_from_keys": [[258, null]], "TenonMortiseJoint.set_default_values": [[259, null]], "TenonMortiseJoint.sha256": [[260, null]], "TenonMortiseJoint.to_json": [[261, null]], "TenonMortiseJoint.to_jsonstring": [[262, null]], "TenonMortiseJoint.validate_data": [[263, null]], "TenonShapeType": [[647, null]], "Text3d": [[755, null]], "Text3d.ToString": [[756, null]], "Text3d.copy": [[757, null]], "Text3d.from_json": [[758, null]], "Text3d.from_jsonstring": [[759, null]], "Text3d.sha256": [[760, null]], "Text3d.to_json": [[761, null]], "Text3d.to_jsonstring": [[762, null]], "Text3d.transform": [[763, null]], "Text3d.validate_data": [[764, null]], "Timber Assembly Examples": [[767, "timber-assembly-examples"]], "TimberElement": [[420, null]], "TimberElement.ToString": [[421, null]], "TimberElement.add_feature": [[422, null]], "TimberElement.compute_aabb": [[423, null]], "TimberElement.compute_collision_mesh": [[424, null]], "TimberElement.compute_geometry": [[425, null]], "TimberElement.compute_obb": [[426, null]], "TimberElement.compute_worldtransformation": [[427, null]], "TimberElement.copy": [[428, null]], "TimberElement.from_json": [[429, null]], "TimberElement.from_jsonstring": [[430, null]], "TimberElement.reset": [[431, null]], "TimberElement.sha256": [[432, null]], "TimberElement.to_json": [[433, null]], "TimberElement.to_jsonstring": [[434, null]], "TimberElement.transform": [[435, null]], "TimberElement.transformed": [[436, null]], "TimberElement.validate_data": [[437, null]], "TimberModel": [[655, null]], "TimberModel.ToString": [[656, null]], "TimberModel.add_element": [[657, null]], "TimberModel.add_elements": [[658, null]], "TimberModel.add_group": [[659, null]], "TimberModel.add_group_element": [[660, null]], "TimberModel.add_interaction": [[661, null]], "TimberModel.add_joint": [[662, null]], "TimberModel.add_material": [[663, null]], "TimberModel.assign_material": [[664, null]], "TimberModel.compute_aabb": [[665, null]], "TimberModel.compute_obb": [[666, null]], "TimberModel.copy": [[667, null]], "TimberModel.element_by_guid": [[668, null]], "TimberModel.elements": [[669, null]], "TimberModel.elements_connected_by": [[670, null]], "TimberModel.from_json": [[671, null]], "TimberModel.from_jsonstring": [[672, null]], "TimberModel.get_elements_in_group": [[673, null]], "TimberModel.has_element": [[674, null]], "TimberModel.has_group": [[675, null]], "TimberModel.has_interaction": [[676, null]], "TimberModel.has_material": [[677, null]], "TimberModel.interactions": [[678, null]], "TimberModel.materials": [[679, null]], "TimberModel.process_joinery": [[680, null]], "TimberModel.remove_element": [[681, null]], "TimberModel.remove_interaction": [[682, null]], "TimberModel.remove_joint": [[683, null]], "TimberModel.rotate": [[684, null]], "TimberModel.rotated": [[685, null]], "TimberModel.scale": [[686, null]], "TimberModel.scaled": [[687, null]], "TimberModel.set_topologies": [[688, null]], "TimberModel.sha256": [[689, null]], "TimberModel.to_json": [[690, null]], "TimberModel.to_jsonstring": [[691, null]], "TimberModel.transform": [[692, null]], "TimberModel.transform_numpy": [[693, null]], "TimberModel.transformed": [[694, null]], "TimberModel.transformed_numpy": [[695, null]], "TimberModel.translate": [[696, null]], "TimberModel.translated": [[697, null]], "TimberModel.validate_data": [[698, null]], "Topological Joint Rules": [[780, "topological-joint-rules"]], "TopologyRule": [[334, null]], "TopologyRule.ToString": [[335, null]], "TopologyRule.comply": [[336, null]], "TopologyRule.get_category_rules": [[337, null]], "TopologyRule.get_direct_rules": [[338, null]], "TopologyRule.get_topology_rules": [[339, null]], "TopologyRule.joints_from_beams_and_rules": [[340, null]], "Trim Feature": [[779, "trim-feature"]], "Utils": [[783, null]], "Wall": [[438, null]], "Wall.ToString": [[439, null]], "Wall.add_feature": [[440, null]], "Wall.compute_aabb": [[441, null]], "Wall.compute_collision_mesh": [[442, null]], "Wall.compute_geometry": [[443, null]], "Wall.compute_obb": [[444, null]], "Wall.compute_worldtransformation": [[445, null]], "Wall.copy": [[446, null]], "Wall.from_box": [[447, null]], "Wall.from_json": [[448, null]], "Wall.from_jsonstring": [[449, null]], "Wall.reset": [[450, null]], "Wall.sha256": [[451, null]], "Wall.to_json": [[452, null]], "Wall.to_jsonstring": [[453, null]], "Wall.transform": [[454, null]], "Wall.transformed": [[455, null]], "Wall.validate_data": [[456, null]], "Workflow": [[784, null]], "Write BTLx": [[778, "write-btlx"]], "X-HalfLap": [[780, "x-halflap"]], "XHalfLapJoint": [[264, null]], "XHalfLapJoint.ToString": [[265, null]], "XHalfLapJoint.add_extensions": [[266, null]], "XHalfLapJoint.add_features": [[267, null]], "XHalfLapJoint.check_elements_compatibility": [[268, null]], "XHalfLapJoint.copy": [[269, null]], "XHalfLapJoint.create": [[270, null]], "XHalfLapJoint.element_count_complies": [[271, null]], "XHalfLapJoint.from_json": [[272, null]], "XHalfLapJoint.from_jsonstring": [[273, null]], "XHalfLapJoint.get_cross_cutting_frame": [[274, null]], "XHalfLapJoint.get_face_most_ortho_to_beam": [[275, null]], "XHalfLapJoint.get_face_most_towards_beam": [[276, null]], "XHalfLapJoint.get_main_cutting_frame": [[277, null]], "XHalfLapJoint.restore_beams_from_keys": [[278, null]], "XHalfLapJoint.sha256": [[279, null]], "XHalfLapJoint.to_json": [[280, null]], "XHalfLapJoint.to_jsonstring": [[281, null]], "XHalfLapJoint.validate_data": [[282, null]], "add_gh_param": [[648, null]], "clear_gh_params": [[649, null]], "compas_timber.connections": [[1, null]], "compas_timber.design": [[2, null]], "compas_timber.elements": [[3, null]], "compas_timber.errors": [[4, null]], "compas_timber.fabrication": [[5, null]], "compas_timber.ghpython": [[6, null]], "compas_timber.model": [[7, null]], "compas_timber.planning": [[8, null]], "compas_timber.rhino": [[9, null]], "find_neighboring_beams": [[283, null], [765, null]], "get_leaf_subclasses": [[650, null]], "guess_joint_topology_2beams": [[341, null]], "item_input_valid": [[651, null]], "list_input_valid": [[652, null]], "manage_dynamic_params": [[653, null]], "rename_gh_input": [[654, null]], "set_default_joints": [[342, null]]}, "docnames": ["api", "api/compas_timber.connections", "api/compas_timber.design", "api/compas_timber.elements", "api/compas_timber.errors", "api/compas_timber.fabrication", "api/compas_timber.ghpython", "api/compas_timber.model", "api/compas_timber.planning", "api/compas_timber.rhino", "api/generated/compas_timber.connections.BallNodeJoint", "api/generated/compas_timber.connections.BallNodeJoint.ToString", "api/generated/compas_timber.connections.BallNodeJoint.add_extensions", "api/generated/compas_timber.connections.BallNodeJoint.add_features", "api/generated/compas_timber.connections.BallNodeJoint.check_elements_compatibility", "api/generated/compas_timber.connections.BallNodeJoint.copy", "api/generated/compas_timber.connections.BallNodeJoint.create", "api/generated/compas_timber.connections.BallNodeJoint.element_count_complies", "api/generated/compas_timber.connections.BallNodeJoint.from_json", "api/generated/compas_timber.connections.BallNodeJoint.from_jsonstring", "api/generated/compas_timber.connections.BallNodeJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.BallNodeJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.BallNodeJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.BallNodeJoint.sha256", "api/generated/compas_timber.connections.BallNodeJoint.to_json", "api/generated/compas_timber.connections.BallNodeJoint.to_jsonstring", "api/generated/compas_timber.connections.BallNodeJoint.validate_data", "api/generated/compas_timber.connections.ConnectionSolver", "api/generated/compas_timber.connections.ConnectionSolver.find_intersecting_pairs", "api/generated/compas_timber.connections.ConnectionSolver.find_topology", "api/generated/compas_timber.connections.Joint", "api/generated/compas_timber.connections.Joint.ToString", "api/generated/compas_timber.connections.Joint.add_extensions", "api/generated/compas_timber.connections.Joint.add_features", "api/generated/compas_timber.connections.Joint.check_elements_compatibility", "api/generated/compas_timber.connections.Joint.copy", "api/generated/compas_timber.connections.Joint.create", "api/generated/compas_timber.connections.Joint.element_count_complies", "api/generated/compas_timber.connections.Joint.from_json", "api/generated/compas_timber.connections.Joint.from_jsonstring", "api/generated/compas_timber.connections.Joint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.Joint.get_face_most_towards_beam", "api/generated/compas_timber.connections.Joint.restore_beams_from_keys", "api/generated/compas_timber.connections.Joint.sha256", "api/generated/compas_timber.connections.Joint.to_json", "api/generated/compas_timber.connections.Joint.to_jsonstring", "api/generated/compas_timber.connections.Joint.validate_data", "api/generated/compas_timber.connections.JointTopology", "api/generated/compas_timber.connections.JointTopology.get_name", "api/generated/compas_timber.connections.LButtJoint", "api/generated/compas_timber.connections.LButtJoint.ToString", "api/generated/compas_timber.connections.LButtJoint.add_extensions", "api/generated/compas_timber.connections.LButtJoint.add_features", "api/generated/compas_timber.connections.LButtJoint.check_elements_compatibility", "api/generated/compas_timber.connections.LButtJoint.copy", "api/generated/compas_timber.connections.LButtJoint.create", "api/generated/compas_timber.connections.LButtJoint.element_count_complies", "api/generated/compas_timber.connections.LButtJoint.from_json", "api/generated/compas_timber.connections.LButtJoint.from_jsonstring", "api/generated/compas_timber.connections.LButtJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.LButtJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.LButtJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LButtJoint.sha256", "api/generated/compas_timber.connections.LButtJoint.to_json", "api/generated/compas_timber.connections.LButtJoint.to_jsonstring", "api/generated/compas_timber.connections.LButtJoint.update_beam_roles", "api/generated/compas_timber.connections.LButtJoint.validate_data", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.ToString", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.add_extensions", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.add_features", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.check_elements_compatibility", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.copy", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.create", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.element_count_complies", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.from_json", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.from_jsonstring", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.sha256", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.to_json", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.to_jsonstring", "api/generated/compas_timber.connections.LFrenchRidgeLapJoint.validate_data", "api/generated/compas_timber.connections.LHalfLapJoint", "api/generated/compas_timber.connections.LHalfLapJoint.ToString", "api/generated/compas_timber.connections.LHalfLapJoint.add_extensions", "api/generated/compas_timber.connections.LHalfLapJoint.add_features", "api/generated/compas_timber.connections.LHalfLapJoint.check_elements_compatibility", "api/generated/compas_timber.connections.LHalfLapJoint.copy", "api/generated/compas_timber.connections.LHalfLapJoint.create", "api/generated/compas_timber.connections.LHalfLapJoint.element_count_complies", "api/generated/compas_timber.connections.LHalfLapJoint.from_json", "api/generated/compas_timber.connections.LHalfLapJoint.from_jsonstring", "api/generated/compas_timber.connections.LHalfLapJoint.get_cross_cutting_frame", "api/generated/compas_timber.connections.LHalfLapJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.LHalfLapJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.LHalfLapJoint.get_main_cutting_frame", "api/generated/compas_timber.connections.LHalfLapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LHalfLapJoint.sha256", "api/generated/compas_timber.connections.LHalfLapJoint.to_json", "api/generated/compas_timber.connections.LHalfLapJoint.to_jsonstring", "api/generated/compas_timber.connections.LHalfLapJoint.validate_data", "api/generated/compas_timber.connections.LMiterJoint", "api/generated/compas_timber.connections.LMiterJoint.ToString", "api/generated/compas_timber.connections.LMiterJoint.add_extensions", "api/generated/compas_timber.connections.LMiterJoint.add_features", "api/generated/compas_timber.connections.LMiterJoint.check_elements_compatibility", "api/generated/compas_timber.connections.LMiterJoint.copy", "api/generated/compas_timber.connections.LMiterJoint.create", "api/generated/compas_timber.connections.LMiterJoint.element_count_complies", "api/generated/compas_timber.connections.LMiterJoint.from_json", "api/generated/compas_timber.connections.LMiterJoint.from_jsonstring", "api/generated/compas_timber.connections.LMiterJoint.get_cutting_planes", "api/generated/compas_timber.connections.LMiterJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.LMiterJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.LMiterJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LMiterJoint.sha256", "api/generated/compas_timber.connections.LMiterJoint.to_json", "api/generated/compas_timber.connections.LMiterJoint.to_jsonstring", "api/generated/compas_timber.connections.LMiterJoint.validate_data", "api/generated/compas_timber.connections.LapJoint", "api/generated/compas_timber.connections.LapJoint.ToString", "api/generated/compas_timber.connections.LapJoint.add_extensions", "api/generated/compas_timber.connections.LapJoint.add_features", "api/generated/compas_timber.connections.LapJoint.check_elements_compatibility", "api/generated/compas_timber.connections.LapJoint.copy", "api/generated/compas_timber.connections.LapJoint.create", "api/generated/compas_timber.connections.LapJoint.element_count_complies", "api/generated/compas_timber.connections.LapJoint.from_json", "api/generated/compas_timber.connections.LapJoint.from_jsonstring", "api/generated/compas_timber.connections.LapJoint.get_cross_cutting_frame", "api/generated/compas_timber.connections.LapJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.LapJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.LapJoint.get_main_cutting_frame", "api/generated/compas_timber.connections.LapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.LapJoint.sha256", "api/generated/compas_timber.connections.LapJoint.to_json", "api/generated/compas_timber.connections.LapJoint.to_jsonstring", "api/generated/compas_timber.connections.LapJoint.validate_data", "api/generated/compas_timber.connections.NullJoint", "api/generated/compas_timber.connections.NullJoint.ToString", "api/generated/compas_timber.connections.NullJoint.add_extensions", "api/generated/compas_timber.connections.NullJoint.add_features", "api/generated/compas_timber.connections.NullJoint.check_elements_compatibility", "api/generated/compas_timber.connections.NullJoint.copy", "api/generated/compas_timber.connections.NullJoint.create", "api/generated/compas_timber.connections.NullJoint.element_count_complies", "api/generated/compas_timber.connections.NullJoint.from_json", "api/generated/compas_timber.connections.NullJoint.from_jsonstring", "api/generated/compas_timber.connections.NullJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.NullJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.NullJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.NullJoint.sha256", "api/generated/compas_timber.connections.NullJoint.to_json", "api/generated/compas_timber.connections.NullJoint.to_jsonstring", "api/generated/compas_timber.connections.NullJoint.validate_data", "api/generated/compas_timber.connections.TBirdsmouthJoint", "api/generated/compas_timber.connections.TBirdsmouthJoint.ToString", "api/generated/compas_timber.connections.TBirdsmouthJoint.add_extensions", "api/generated/compas_timber.connections.TBirdsmouthJoint.add_features", "api/generated/compas_timber.connections.TBirdsmouthJoint.check_elements_compatibility", "api/generated/compas_timber.connections.TBirdsmouthJoint.copy", "api/generated/compas_timber.connections.TBirdsmouthJoint.create", "api/generated/compas_timber.connections.TBirdsmouthJoint.element_count_complies", "api/generated/compas_timber.connections.TBirdsmouthJoint.from_json", "api/generated/compas_timber.connections.TBirdsmouthJoint.from_jsonstring", "api/generated/compas_timber.connections.TBirdsmouthJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.TBirdsmouthJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.TBirdsmouthJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.TBirdsmouthJoint.sha256", "api/generated/compas_timber.connections.TBirdsmouthJoint.to_json", "api/generated/compas_timber.connections.TBirdsmouthJoint.to_jsonstring", "api/generated/compas_timber.connections.TBirdsmouthJoint.validate_data", "api/generated/compas_timber.connections.TButtJoint", "api/generated/compas_timber.connections.TButtJoint.ToString", "api/generated/compas_timber.connections.TButtJoint.add_extensions", "api/generated/compas_timber.connections.TButtJoint.add_features", "api/generated/compas_timber.connections.TButtJoint.check_elements_compatibility", "api/generated/compas_timber.connections.TButtJoint.copy", "api/generated/compas_timber.connections.TButtJoint.create", "api/generated/compas_timber.connections.TButtJoint.element_count_complies", "api/generated/compas_timber.connections.TButtJoint.from_json", "api/generated/compas_timber.connections.TButtJoint.from_jsonstring", "api/generated/compas_timber.connections.TButtJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.TButtJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.TButtJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.TButtJoint.sha256", "api/generated/compas_timber.connections.TButtJoint.to_json", "api/generated/compas_timber.connections.TButtJoint.to_jsonstring", "api/generated/compas_timber.connections.TButtJoint.validate_data", "api/generated/compas_timber.connections.TDovetailJoint", "api/generated/compas_timber.connections.TDovetailJoint.ToString", "api/generated/compas_timber.connections.TDovetailJoint.add_extensions", "api/generated/compas_timber.connections.TDovetailJoint.add_features", "api/generated/compas_timber.connections.TDovetailJoint.check_elements_compatibility", "api/generated/compas_timber.connections.TDovetailJoint.copy", "api/generated/compas_timber.connections.TDovetailJoint.create", "api/generated/compas_timber.connections.TDovetailJoint.define_dovetail_tool", "api/generated/compas_timber.connections.TDovetailJoint.element_count_complies", "api/generated/compas_timber.connections.TDovetailJoint.from_json", "api/generated/compas_timber.connections.TDovetailJoint.from_jsonstring", "api/generated/compas_timber.connections.TDovetailJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.TDovetailJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.TDovetailJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.TDovetailJoint.sha256", "api/generated/compas_timber.connections.TDovetailJoint.to_json", "api/generated/compas_timber.connections.TDovetailJoint.to_jsonstring", "api/generated/compas_timber.connections.TDovetailJoint.validate_data", "api/generated/compas_timber.connections.THalfLapJoint", "api/generated/compas_timber.connections.THalfLapJoint.ToString", "api/generated/compas_timber.connections.THalfLapJoint.add_extensions", "api/generated/compas_timber.connections.THalfLapJoint.add_features", "api/generated/compas_timber.connections.THalfLapJoint.check_elements_compatibility", "api/generated/compas_timber.connections.THalfLapJoint.copy", "api/generated/compas_timber.connections.THalfLapJoint.create", "api/generated/compas_timber.connections.THalfLapJoint.element_count_complies", "api/generated/compas_timber.connections.THalfLapJoint.from_json", "api/generated/compas_timber.connections.THalfLapJoint.from_jsonstring", "api/generated/compas_timber.connections.THalfLapJoint.get_cross_cutting_frame", "api/generated/compas_timber.connections.THalfLapJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.THalfLapJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.THalfLapJoint.get_main_cutting_frame", "api/generated/compas_timber.connections.THalfLapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.THalfLapJoint.sha256", "api/generated/compas_timber.connections.THalfLapJoint.to_json", "api/generated/compas_timber.connections.THalfLapJoint.to_jsonstring", "api/generated/compas_timber.connections.THalfLapJoint.validate_data", "api/generated/compas_timber.connections.TStepJoint", "api/generated/compas_timber.connections.TStepJoint.ToString", "api/generated/compas_timber.connections.TStepJoint.add_extensions", "api/generated/compas_timber.connections.TStepJoint.add_features", "api/generated/compas_timber.connections.TStepJoint.check_elements_compatibility", "api/generated/compas_timber.connections.TStepJoint.copy", "api/generated/compas_timber.connections.TStepJoint.create", "api/generated/compas_timber.connections.TStepJoint.element_count_complies", "api/generated/compas_timber.connections.TStepJoint.from_json", "api/generated/compas_timber.connections.TStepJoint.from_jsonstring", "api/generated/compas_timber.connections.TStepJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.TStepJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.TStepJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.TStepJoint.set_step_depths", "api/generated/compas_timber.connections.TStepJoint.sha256", "api/generated/compas_timber.connections.TStepJoint.to_json", "api/generated/compas_timber.connections.TStepJoint.to_jsonstring", "api/generated/compas_timber.connections.TStepJoint.validate_data", "api/generated/compas_timber.connections.TenonMortiseJoint", "api/generated/compas_timber.connections.TenonMortiseJoint.ToString", "api/generated/compas_timber.connections.TenonMortiseJoint.add_extensions", "api/generated/compas_timber.connections.TenonMortiseJoint.add_features", "api/generated/compas_timber.connections.TenonMortiseJoint.check_elements_compatibility", "api/generated/compas_timber.connections.TenonMortiseJoint.copy", "api/generated/compas_timber.connections.TenonMortiseJoint.create", "api/generated/compas_timber.connections.TenonMortiseJoint.element_count_complies", "api/generated/compas_timber.connections.TenonMortiseJoint.from_json", "api/generated/compas_timber.connections.TenonMortiseJoint.from_jsonstring", "api/generated/compas_timber.connections.TenonMortiseJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.TenonMortiseJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.TenonMortiseJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.TenonMortiseJoint.set_default_values", "api/generated/compas_timber.connections.TenonMortiseJoint.sha256", "api/generated/compas_timber.connections.TenonMortiseJoint.to_json", "api/generated/compas_timber.connections.TenonMortiseJoint.to_jsonstring", "api/generated/compas_timber.connections.TenonMortiseJoint.validate_data", "api/generated/compas_timber.connections.XHalfLapJoint", "api/generated/compas_timber.connections.XHalfLapJoint.ToString", "api/generated/compas_timber.connections.XHalfLapJoint.add_extensions", "api/generated/compas_timber.connections.XHalfLapJoint.add_features", "api/generated/compas_timber.connections.XHalfLapJoint.check_elements_compatibility", "api/generated/compas_timber.connections.XHalfLapJoint.copy", "api/generated/compas_timber.connections.XHalfLapJoint.create", "api/generated/compas_timber.connections.XHalfLapJoint.element_count_complies", "api/generated/compas_timber.connections.XHalfLapJoint.from_json", "api/generated/compas_timber.connections.XHalfLapJoint.from_jsonstring", "api/generated/compas_timber.connections.XHalfLapJoint.get_cross_cutting_frame", "api/generated/compas_timber.connections.XHalfLapJoint.get_face_most_ortho_to_beam", "api/generated/compas_timber.connections.XHalfLapJoint.get_face_most_towards_beam", "api/generated/compas_timber.connections.XHalfLapJoint.get_main_cutting_frame", "api/generated/compas_timber.connections.XHalfLapJoint.restore_beams_from_keys", "api/generated/compas_timber.connections.XHalfLapJoint.sha256", "api/generated/compas_timber.connections.XHalfLapJoint.to_json", "api/generated/compas_timber.connections.XHalfLapJoint.to_jsonstring", "api/generated/compas_timber.connections.XHalfLapJoint.validate_data", "api/generated/compas_timber.connections.find_neighboring_beams", "api/generated/compas_timber.design.CategoryRule", "api/generated/compas_timber.design.CategoryRule.ToString", "api/generated/compas_timber.design.CategoryRule.comply", "api/generated/compas_timber.design.CategoryRule.get_category_rules", "api/generated/compas_timber.design.CategoryRule.get_direct_rules", "api/generated/compas_timber.design.CategoryRule.get_topology_rules", "api/generated/compas_timber.design.CategoryRule.joints_from_beams_and_rules", "api/generated/compas_timber.design.CategoryRule.reorder", "api/generated/compas_timber.design.DebugInfomation", "api/generated/compas_timber.design.DebugInfomation.ToString", "api/generated/compas_timber.design.DebugInfomation.add_fastener_error", "api/generated/compas_timber.design.DebugInfomation.add_feature_error", "api/generated/compas_timber.design.DebugInfomation.add_joint_error", "api/generated/compas_timber.design.DirectRule", "api/generated/compas_timber.design.DirectRule.ToString", "api/generated/compas_timber.design.DirectRule.comply", "api/generated/compas_timber.design.DirectRule.get_category_rules", "api/generated/compas_timber.design.DirectRule.get_direct_rules", "api/generated/compas_timber.design.DirectRule.get_topology_rules", "api/generated/compas_timber.design.DirectRule.joints_from_beams_and_rules", "api/generated/compas_timber.design.FeatureDefinition", "api/generated/compas_timber.design.FeatureDefinition.ToString", "api/generated/compas_timber.design.JointDefinition", "api/generated/compas_timber.design.JointDefinition.ToString", "api/generated/compas_timber.design.JointDefinition.is_identical", "api/generated/compas_timber.design.JointDefinition.match", "api/generated/compas_timber.design.JointRule", "api/generated/compas_timber.design.JointRule.comply", "api/generated/compas_timber.design.JointRule.get_category_rules", "api/generated/compas_timber.design.JointRule.get_direct_rules", "api/generated/compas_timber.design.JointRule.get_topology_rules", "api/generated/compas_timber.design.JointRule.joints_from_beams_and_rules", "api/generated/compas_timber.design.SurfaceModel", "api/generated/compas_timber.design.SurfaceModel.beam_category_names", "api/generated/compas_timber.design.SurfaceModel.create_model", "api/generated/compas_timber.design.SurfaceModel.cull_overlaps", "api/generated/compas_timber.design.SurfaceModel.distance_between_elements", "api/generated/compas_timber.design.SurfaceModel.generate_frame", "api/generated/compas_timber.design.SurfaceModel.generate_perimeter_beams", "api/generated/compas_timber.design.SurfaceModel.generate_plates", "api/generated/compas_timber.design.SurfaceModel.generate_stud_lines", "api/generated/compas_timber.design.SurfaceModel.generate_studs", "api/generated/compas_timber.design.SurfaceModel.generate_windows", "api/generated/compas_timber.design.SurfaceModel.get_beam_intersections", "api/generated/compas_timber.design.SurfaceModel.get_interior_segment_indices", "api/generated/compas_timber.design.SurfaceModel.offset_elements", "api/generated/compas_timber.design.SurfaceModel.parse_loops", "api/generated/compas_timber.design.SurfaceModel.trim_jack_studs", "api/generated/compas_timber.design.SurfaceModel.trim_king_studs", "api/generated/compas_timber.design.SurfaceModel.trim_studs", "api/generated/compas_timber.design.TopologyRule", "api/generated/compas_timber.design.TopologyRule.ToString", "api/generated/compas_timber.design.TopologyRule.comply", "api/generated/compas_timber.design.TopologyRule.get_category_rules", "api/generated/compas_timber.design.TopologyRule.get_direct_rules", "api/generated/compas_timber.design.TopologyRule.get_topology_rules", "api/generated/compas_timber.design.TopologyRule.joints_from_beams_and_rules", "api/generated/compas_timber.design.guess_joint_topology_2beams", "api/generated/compas_timber.design.set_default_joints", "api/generated/compas_timber.elements.Beam", "api/generated/compas_timber.elements.Beam.ToString", "api/generated/compas_timber.elements.Beam.add_blank_extension", "api/generated/compas_timber.elements.Beam.add_feature", "api/generated/compas_timber.elements.Beam.add_features", "api/generated/compas_timber.elements.Beam.compute_aabb", "api/generated/compas_timber.elements.Beam.compute_collision_mesh", "api/generated/compas_timber.elements.Beam.compute_geometry", "api/generated/compas_timber.elements.Beam.compute_obb", "api/generated/compas_timber.elements.Beam.compute_worldtransformation", "api/generated/compas_timber.elements.Beam.copy", "api/generated/compas_timber.elements.Beam.endpoint_closest_to_point", "api/generated/compas_timber.elements.Beam.extension_to_plane", "api/generated/compas_timber.elements.Beam.from_centerline", "api/generated/compas_timber.elements.Beam.from_endpoints", "api/generated/compas_timber.elements.Beam.from_json", "api/generated/compas_timber.elements.Beam.from_jsonstring", "api/generated/compas_timber.elements.Beam.opposing_side_index", "api/generated/compas_timber.elements.Beam.remove_blank_extension", "api/generated/compas_timber.elements.Beam.remove_features", "api/generated/compas_timber.elements.Beam.reset", "api/generated/compas_timber.elements.Beam.sha256", "api/generated/compas_timber.elements.Beam.side_as_surface", "api/generated/compas_timber.elements.Beam.to_json", "api/generated/compas_timber.elements.Beam.to_jsonstring", "api/generated/compas_timber.elements.Beam.transform", "api/generated/compas_timber.elements.Beam.transformed", "api/generated/compas_timber.elements.Beam.validate_data", "api/generated/compas_timber.elements.Fastener", "api/generated/compas_timber.elements.Fastener.ToString", "api/generated/compas_timber.elements.Fastener.add_feature", "api/generated/compas_timber.elements.Fastener.compute_aabb", "api/generated/compas_timber.elements.Fastener.compute_collision_mesh", "api/generated/compas_timber.elements.Fastener.compute_geometry", "api/generated/compas_timber.elements.Fastener.compute_obb", "api/generated/compas_timber.elements.Fastener.compute_worldtransformation", "api/generated/compas_timber.elements.Fastener.copy", "api/generated/compas_timber.elements.Fastener.from_json", "api/generated/compas_timber.elements.Fastener.from_jsonstring", "api/generated/compas_timber.elements.Fastener.reset", "api/generated/compas_timber.elements.Fastener.sha256", "api/generated/compas_timber.elements.Fastener.to_json", "api/generated/compas_timber.elements.Fastener.to_jsonstring", "api/generated/compas_timber.elements.Fastener.transform", "api/generated/compas_timber.elements.Fastener.transformed", "api/generated/compas_timber.elements.Fastener.validate_data", "api/generated/compas_timber.elements.FastenerTimberInterface", "api/generated/compas_timber.elements.FastenerTimberInterface.ToString", "api/generated/compas_timber.elements.FastenerTimberInterface.copy", "api/generated/compas_timber.elements.FastenerTimberInterface.from_json", "api/generated/compas_timber.elements.FastenerTimberInterface.from_jsonstring", "api/generated/compas_timber.elements.FastenerTimberInterface.get_features", "api/generated/compas_timber.elements.FastenerTimberInterface.sha256", "api/generated/compas_timber.elements.FastenerTimberInterface.to_json", "api/generated/compas_timber.elements.FastenerTimberInterface.to_jsonstring", "api/generated/compas_timber.elements.FastenerTimberInterface.validate_data", "api/generated/compas_timber.elements.Plate", "api/generated/compas_timber.elements.Plate.ToString", "api/generated/compas_timber.elements.Plate.add_feature", "api/generated/compas_timber.elements.Plate.add_features", "api/generated/compas_timber.elements.Plate.compute_aabb", "api/generated/compas_timber.elements.Plate.compute_collision_mesh", "api/generated/compas_timber.elements.Plate.compute_geometry", "api/generated/compas_timber.elements.Plate.compute_obb", "api/generated/compas_timber.elements.Plate.compute_worldtransformation", "api/generated/compas_timber.elements.Plate.copy", "api/generated/compas_timber.elements.Plate.from_json", "api/generated/compas_timber.elements.Plate.from_jsonstring", "api/generated/compas_timber.elements.Plate.remove_features", "api/generated/compas_timber.elements.Plate.reset", "api/generated/compas_timber.elements.Plate.set_frame_and_outline", "api/generated/compas_timber.elements.Plate.sha256", "api/generated/compas_timber.elements.Plate.to_json", "api/generated/compas_timber.elements.Plate.to_jsonstring", "api/generated/compas_timber.elements.Plate.transform", "api/generated/compas_timber.elements.Plate.transformed", "api/generated/compas_timber.elements.Plate.validate_data", "api/generated/compas_timber.elements.TimberElement", "api/generated/compas_timber.elements.TimberElement.ToString", "api/generated/compas_timber.elements.TimberElement.add_feature", "api/generated/compas_timber.elements.TimberElement.compute_aabb", "api/generated/compas_timber.elements.TimberElement.compute_collision_mesh", "api/generated/compas_timber.elements.TimberElement.compute_geometry", "api/generated/compas_timber.elements.TimberElement.compute_obb", "api/generated/compas_timber.elements.TimberElement.compute_worldtransformation", "api/generated/compas_timber.elements.TimberElement.copy", "api/generated/compas_timber.elements.TimberElement.from_json", "api/generated/compas_timber.elements.TimberElement.from_jsonstring", "api/generated/compas_timber.elements.TimberElement.reset", "api/generated/compas_timber.elements.TimberElement.sha256", "api/generated/compas_timber.elements.TimberElement.to_json", "api/generated/compas_timber.elements.TimberElement.to_jsonstring", "api/generated/compas_timber.elements.TimberElement.transform", "api/generated/compas_timber.elements.TimberElement.transformed", "api/generated/compas_timber.elements.TimberElement.validate_data", "api/generated/compas_timber.elements.Wall", "api/generated/compas_timber.elements.Wall.ToString", "api/generated/compas_timber.elements.Wall.add_feature", "api/generated/compas_timber.elements.Wall.compute_aabb", "api/generated/compas_timber.elements.Wall.compute_collision_mesh", "api/generated/compas_timber.elements.Wall.compute_geometry", "api/generated/compas_timber.elements.Wall.compute_obb", "api/generated/compas_timber.elements.Wall.compute_worldtransformation", "api/generated/compas_timber.elements.Wall.copy", "api/generated/compas_timber.elements.Wall.from_box", "api/generated/compas_timber.elements.Wall.from_json", "api/generated/compas_timber.elements.Wall.from_jsonstring", "api/generated/compas_timber.elements.Wall.reset", "api/generated/compas_timber.elements.Wall.sha256", "api/generated/compas_timber.elements.Wall.to_json", "api/generated/compas_timber.elements.Wall.to_jsonstring", "api/generated/compas_timber.elements.Wall.transform", "api/generated/compas_timber.elements.Wall.transformed", "api/generated/compas_timber.elements.Wall.validate_data", "api/generated/compas_timber.errors.BeamJoinningError", "api/generated/compas_timber.errors.FastenerApplicationError", "api/generated/compas_timber.errors.FeatureApplicationError", "api/generated/compas_timber.fabrication.BTLxPart", "api/generated/compas_timber.fabrication.BTLxPart.et_point_vals", "api/generated/compas_timber.fabrication.BTLxPart.ref_side_from_face", "api/generated/compas_timber.fabrication.BTLxProcessing", "api/generated/compas_timber.fabrication.BTLxProcessing.ToString", "api/generated/compas_timber.fabrication.BTLxProcessing.add_subprocessing", "api/generated/compas_timber.fabrication.BTLxProcessing.copy", "api/generated/compas_timber.fabrication.BTLxProcessing.from_json", "api/generated/compas_timber.fabrication.BTLxProcessing.from_jsonstring", "api/generated/compas_timber.fabrication.BTLxProcessing.sha256", "api/generated/compas_timber.fabrication.BTLxProcessing.to_json", "api/generated/compas_timber.fabrication.BTLxProcessing.to_jsonstring", "api/generated/compas_timber.fabrication.BTLxProcessing.validate_data", "api/generated/compas_timber.fabrication.BTLxWriter", "api/generated/compas_timber.fabrication.BTLxWriter.model_to_xml", "api/generated/compas_timber.fabrication.BTLxWriter.write", "api/generated/compas_timber.fabrication.DoubleCut", "api/generated/compas_timber.fabrication.DoubleCut.ToString", "api/generated/compas_timber.fabrication.DoubleCut.add_subprocessing", "api/generated/compas_timber.fabrication.DoubleCut.apply", "api/generated/compas_timber.fabrication.DoubleCut.copy", "api/generated/compas_timber.fabrication.DoubleCut.from_json", "api/generated/compas_timber.fabrication.DoubleCut.from_jsonstring", "api/generated/compas_timber.fabrication.DoubleCut.from_planes_and_beam", "api/generated/compas_timber.fabrication.DoubleCut.planes_from_params_and_beam", "api/generated/compas_timber.fabrication.DoubleCut.sha256", "api/generated/compas_timber.fabrication.DoubleCut.to_json", "api/generated/compas_timber.fabrication.DoubleCut.to_jsonstring", "api/generated/compas_timber.fabrication.DoubleCut.validate_data", "api/generated/compas_timber.fabrication.DovetailMortise", "api/generated/compas_timber.fabrication.DovetailMortise.ToString", "api/generated/compas_timber.fabrication.DovetailMortise.add_subprocessing", "api/generated/compas_timber.fabrication.DovetailMortise.apply", "api/generated/compas_timber.fabrication.DovetailMortise.copy", "api/generated/compas_timber.fabrication.DovetailMortise.define_dovetail_tool", "api/generated/compas_timber.fabrication.DovetailMortise.dovetail_cutting_frames_from_params_and_beam", "api/generated/compas_timber.fabrication.DovetailMortise.dovetail_volume_from_params_and_beam", "api/generated/compas_timber.fabrication.DovetailMortise.frame_from_params_and_beam", "api/generated/compas_timber.fabrication.DovetailMortise.from_frame_and_beam", "api/generated/compas_timber.fabrication.DovetailMortise.from_json", "api/generated/compas_timber.fabrication.DovetailMortise.from_jsonstring", "api/generated/compas_timber.fabrication.DovetailMortise.sha256", "api/generated/compas_timber.fabrication.DovetailMortise.to_json", "api/generated/compas_timber.fabrication.DovetailMortise.to_jsonstring", "api/generated/compas_timber.fabrication.DovetailMortise.validate_data", "api/generated/compas_timber.fabrication.DovetailTenon", "api/generated/compas_timber.fabrication.DovetailTenon.ToString", "api/generated/compas_timber.fabrication.DovetailTenon.add_subprocessing", "api/generated/compas_timber.fabrication.DovetailTenon.apply", "api/generated/compas_timber.fabrication.DovetailTenon.copy", "api/generated/compas_timber.fabrication.DovetailTenon.define_dovetail_tool", "api/generated/compas_timber.fabrication.DovetailTenon.dovetail_cutting_frames_from_params_and_beam", "api/generated/compas_timber.fabrication.DovetailTenon.dovetail_volume_from_params_and_beam", "api/generated/compas_timber.fabrication.DovetailTenon.frame_from_params_and_beam", "api/generated/compas_timber.fabrication.DovetailTenon.from_json", "api/generated/compas_timber.fabrication.DovetailTenon.from_jsonstring", "api/generated/compas_timber.fabrication.DovetailTenon.from_plane_and_beam", "api/generated/compas_timber.fabrication.DovetailTenon.sha256", "api/generated/compas_timber.fabrication.DovetailTenon.to_json", "api/generated/compas_timber.fabrication.DovetailTenon.to_jsonstring", "api/generated/compas_timber.fabrication.DovetailTenon.validate_data", "api/generated/compas_timber.fabrication.Drilling", "api/generated/compas_timber.fabrication.Drilling.ToString", "api/generated/compas_timber.fabrication.Drilling.add_subprocessing", "api/generated/compas_timber.fabrication.Drilling.apply", "api/generated/compas_timber.fabrication.Drilling.copy", "api/generated/compas_timber.fabrication.Drilling.cylinder_from_params_and_beam", "api/generated/compas_timber.fabrication.Drilling.from_json", "api/generated/compas_timber.fabrication.Drilling.from_jsonstring", "api/generated/compas_timber.fabrication.Drilling.from_line_and_beam", "api/generated/compas_timber.fabrication.Drilling.sha256", "api/generated/compas_timber.fabrication.Drilling.to_json", "api/generated/compas_timber.fabrication.Drilling.to_jsonstring", "api/generated/compas_timber.fabrication.Drilling.validate_data", "api/generated/compas_timber.fabrication.EdgePositionType", "api/generated/compas_timber.fabrication.FrenchRidgeLap", "api/generated/compas_timber.fabrication.FrenchRidgeLap.ToString", "api/generated/compas_timber.fabrication.FrenchRidgeLap.add_subprocessing", "api/generated/compas_timber.fabrication.FrenchRidgeLap.apply", "api/generated/compas_timber.fabrication.FrenchRidgeLap.copy", "api/generated/compas_timber.fabrication.FrenchRidgeLap.frame_from_params_and_beam", "api/generated/compas_timber.fabrication.FrenchRidgeLap.from_beam_beam_and_plane", "api/generated/compas_timber.fabrication.FrenchRidgeLap.from_json", "api/generated/compas_timber.fabrication.FrenchRidgeLap.from_jsonstring", "api/generated/compas_timber.fabrication.FrenchRidgeLap.lap_volume_from_params_and_beam", "api/generated/compas_timber.fabrication.FrenchRidgeLap.sha256", "api/generated/compas_timber.fabrication.FrenchRidgeLap.to_json", "api/generated/compas_timber.fabrication.FrenchRidgeLap.to_jsonstring", "api/generated/compas_timber.fabrication.FrenchRidgeLap.validate_data", "api/generated/compas_timber.fabrication.JackRafterCut", "api/generated/compas_timber.fabrication.JackRafterCut.ToString", "api/generated/compas_timber.fabrication.JackRafterCut.add_subprocessing", "api/generated/compas_timber.fabrication.JackRafterCut.apply", "api/generated/compas_timber.fabrication.JackRafterCut.copy", "api/generated/compas_timber.fabrication.JackRafterCut.from_json", "api/generated/compas_timber.fabrication.JackRafterCut.from_jsonstring", "api/generated/compas_timber.fabrication.JackRafterCut.from_plane_and_beam", "api/generated/compas_timber.fabrication.JackRafterCut.plane_from_params_and_beam", "api/generated/compas_timber.fabrication.JackRafterCut.sha256", "api/generated/compas_timber.fabrication.JackRafterCut.to_json", "api/generated/compas_timber.fabrication.JackRafterCut.to_jsonstring", "api/generated/compas_timber.fabrication.JackRafterCut.validate_data", "api/generated/compas_timber.fabrication.Lap", "api/generated/compas_timber.fabrication.Lap.ToString", "api/generated/compas_timber.fabrication.Lap.add_subprocessing", "api/generated/compas_timber.fabrication.Lap.apply", "api/generated/compas_timber.fabrication.Lap.copy", "api/generated/compas_timber.fabrication.Lap.from_beam_and_beam", "api/generated/compas_timber.fabrication.Lap.from_json", "api/generated/compas_timber.fabrication.Lap.from_jsonstring", "api/generated/compas_timber.fabrication.Lap.from_plane_and_beam", "api/generated/compas_timber.fabrication.Lap.sha256", "api/generated/compas_timber.fabrication.Lap.to_json", "api/generated/compas_timber.fabrication.Lap.to_jsonstring", "api/generated/compas_timber.fabrication.Lap.validate_data", "api/generated/compas_timber.fabrication.Lap.volume_from_params_and_beam", "api/generated/compas_timber.fabrication.Mortise", "api/generated/compas_timber.fabrication.Mortise.ToString", "api/generated/compas_timber.fabrication.Mortise.add_subprocessing", "api/generated/compas_timber.fabrication.Mortise.apply", "api/generated/compas_timber.fabrication.Mortise.copy", "api/generated/compas_timber.fabrication.Mortise.frame_from_params_and_beam", "api/generated/compas_timber.fabrication.Mortise.from_frame_and_beam", "api/generated/compas_timber.fabrication.Mortise.from_json", "api/generated/compas_timber.fabrication.Mortise.from_jsonstring", "api/generated/compas_timber.fabrication.Mortise.sha256", "api/generated/compas_timber.fabrication.Mortise.to_json", "api/generated/compas_timber.fabrication.Mortise.to_jsonstring", "api/generated/compas_timber.fabrication.Mortise.validate_data", "api/generated/compas_timber.fabrication.Mortise.volume_from_params_and_beam", "api/generated/compas_timber.fabrication.OrientationType", "api/generated/compas_timber.fabrication.Slot", "api/generated/compas_timber.fabrication.Slot.ToString", "api/generated/compas_timber.fabrication.Slot.add_subprocessing", "api/generated/compas_timber.fabrication.Slot.apply", "api/generated/compas_timber.fabrication.Slot.copy", "api/generated/compas_timber.fabrication.Slot.from_json", "api/generated/compas_timber.fabrication.Slot.from_jsonstring", "api/generated/compas_timber.fabrication.Slot.from_plane_and_beam", "api/generated/compas_timber.fabrication.Slot.sha256", "api/generated/compas_timber.fabrication.Slot.to_json", "api/generated/compas_timber.fabrication.Slot.to_jsonstring", "api/generated/compas_timber.fabrication.Slot.validate_data", "api/generated/compas_timber.fabrication.StepJoint", "api/generated/compas_timber.fabrication.StepJoint.ToString", "api/generated/compas_timber.fabrication.StepJoint.add_subprocessing", "api/generated/compas_timber.fabrication.StepJoint.add_tenon", "api/generated/compas_timber.fabrication.StepJoint.apply", "api/generated/compas_timber.fabrication.StepJoint.copy", "api/generated/compas_timber.fabrication.StepJoint.from_json", "api/generated/compas_timber.fabrication.StepJoint.from_jsonstring", "api/generated/compas_timber.fabrication.StepJoint.from_plane_and_beam", "api/generated/compas_timber.fabrication.StepJoint.planes_from_params_and_beam", "api/generated/compas_timber.fabrication.StepJoint.sha256", "api/generated/compas_timber.fabrication.StepJoint.tenon_volume_from_params_and_beam", "api/generated/compas_timber.fabrication.StepJoint.to_json", "api/generated/compas_timber.fabrication.StepJoint.to_jsonstring", "api/generated/compas_timber.fabrication.StepJoint.validate_data", "api/generated/compas_timber.fabrication.StepJointNotch", "api/generated/compas_timber.fabrication.StepJointNotch.ToString", "api/generated/compas_timber.fabrication.StepJointNotch.add_mortise", "api/generated/compas_timber.fabrication.StepJointNotch.add_subprocessing", "api/generated/compas_timber.fabrication.StepJointNotch.apply", "api/generated/compas_timber.fabrication.StepJointNotch.copy", "api/generated/compas_timber.fabrication.StepJointNotch.from_json", "api/generated/compas_timber.fabrication.StepJointNotch.from_jsonstring", "api/generated/compas_timber.fabrication.StepJointNotch.from_plane_and_beam", "api/generated/compas_timber.fabrication.StepJointNotch.mortise_volume_from_params_and_beam", "api/generated/compas_timber.fabrication.StepJointNotch.planes_from_params_and_beam", "api/generated/compas_timber.fabrication.StepJointNotch.sha256", "api/generated/compas_timber.fabrication.StepJointNotch.to_json", "api/generated/compas_timber.fabrication.StepJointNotch.to_jsonstring", "api/generated/compas_timber.fabrication.StepJointNotch.validate_data", "api/generated/compas_timber.fabrication.Tenon", "api/generated/compas_timber.fabrication.Tenon.ToString", "api/generated/compas_timber.fabrication.Tenon.add_subprocessing", "api/generated/compas_timber.fabrication.Tenon.apply", "api/generated/compas_timber.fabrication.Tenon.copy", "api/generated/compas_timber.fabrication.Tenon.frame_from_params_and_beam", "api/generated/compas_timber.fabrication.Tenon.from_json", "api/generated/compas_timber.fabrication.Tenon.from_jsonstring", "api/generated/compas_timber.fabrication.Tenon.from_plane_and_beam", "api/generated/compas_timber.fabrication.Tenon.sha256", "api/generated/compas_timber.fabrication.Tenon.to_json", "api/generated/compas_timber.fabrication.Tenon.to_jsonstring", "api/generated/compas_timber.fabrication.Tenon.validate_data", "api/generated/compas_timber.fabrication.Tenon.volume_from_params_and_beam", "api/generated/compas_timber.fabrication.TenonShapeType", "api/generated/compas_timber.ghpython.add_gh_param", "api/generated/compas_timber.ghpython.clear_gh_params", "api/generated/compas_timber.ghpython.get_leaf_subclasses", "api/generated/compas_timber.ghpython.item_input_valid", "api/generated/compas_timber.ghpython.list_input_valid", "api/generated/compas_timber.ghpython.manage_dynamic_params", "api/generated/compas_timber.ghpython.rename_gh_input", "api/generated/compas_timber.model.TimberModel", "api/generated/compas_timber.model.TimberModel.ToString", "api/generated/compas_timber.model.TimberModel.add_element", "api/generated/compas_timber.model.TimberModel.add_elements", "api/generated/compas_timber.model.TimberModel.add_group", "api/generated/compas_timber.model.TimberModel.add_group_element", "api/generated/compas_timber.model.TimberModel.add_interaction", "api/generated/compas_timber.model.TimberModel.add_joint", "api/generated/compas_timber.model.TimberModel.add_material", "api/generated/compas_timber.model.TimberModel.assign_material", "api/generated/compas_timber.model.TimberModel.compute_aabb", "api/generated/compas_timber.model.TimberModel.compute_obb", "api/generated/compas_timber.model.TimberModel.copy", "api/generated/compas_timber.model.TimberModel.element_by_guid", "api/generated/compas_timber.model.TimberModel.elements", "api/generated/compas_timber.model.TimberModel.elements_connected_by", "api/generated/compas_timber.model.TimberModel.from_json", "api/generated/compas_timber.model.TimberModel.from_jsonstring", "api/generated/compas_timber.model.TimberModel.get_elements_in_group", "api/generated/compas_timber.model.TimberModel.has_element", "api/generated/compas_timber.model.TimberModel.has_group", "api/generated/compas_timber.model.TimberModel.has_interaction", "api/generated/compas_timber.model.TimberModel.has_material", "api/generated/compas_timber.model.TimberModel.interactions", "api/generated/compas_timber.model.TimberModel.materials", "api/generated/compas_timber.model.TimberModel.process_joinery", "api/generated/compas_timber.model.TimberModel.remove_element", "api/generated/compas_timber.model.TimberModel.remove_interaction", "api/generated/compas_timber.model.TimberModel.remove_joint", "api/generated/compas_timber.model.TimberModel.rotate", "api/generated/compas_timber.model.TimberModel.rotated", "api/generated/compas_timber.model.TimberModel.scale", "api/generated/compas_timber.model.TimberModel.scaled", "api/generated/compas_timber.model.TimberModel.set_topologies", "api/generated/compas_timber.model.TimberModel.sha256", "api/generated/compas_timber.model.TimberModel.to_json", "api/generated/compas_timber.model.TimberModel.to_jsonstring", "api/generated/compas_timber.model.TimberModel.transform", "api/generated/compas_timber.model.TimberModel.transform_numpy", "api/generated/compas_timber.model.TimberModel.transformed", "api/generated/compas_timber.model.TimberModel.transformed_numpy", "api/generated/compas_timber.model.TimberModel.translate", "api/generated/compas_timber.model.TimberModel.translated", "api/generated/compas_timber.model.TimberModel.validate_data", "api/generated/compas_timber.planning.Actor", "api/generated/compas_timber.planning.Actor.get_name", "api/generated/compas_timber.planning.BuildingPlan", "api/generated/compas_timber.planning.BuildingPlan.ToString", "api/generated/compas_timber.planning.BuildingPlan.add_step", "api/generated/compas_timber.planning.BuildingPlan.copy", "api/generated/compas_timber.planning.BuildingPlan.from_json", "api/generated/compas_timber.planning.BuildingPlan.from_jsonstring", "api/generated/compas_timber.planning.BuildingPlan.sha256", "api/generated/compas_timber.planning.BuildingPlan.to_json", "api/generated/compas_timber.planning.BuildingPlan.to_jsonstring", "api/generated/compas_timber.planning.BuildingPlan.validate_data", "api/generated/compas_timber.planning.BuildingPlanParser", "api/generated/compas_timber.planning.BuildingPlanParser.parse", "api/generated/compas_timber.planning.BuildingPlanParser.serialize", "api/generated/compas_timber.planning.Instruction", "api/generated/compas_timber.planning.Instruction.ToString", "api/generated/compas_timber.planning.Instruction.copy", "api/generated/compas_timber.planning.Instruction.from_json", "api/generated/compas_timber.planning.Instruction.from_jsonstring", "api/generated/compas_timber.planning.Instruction.sha256", "api/generated/compas_timber.planning.Instruction.to_json", "api/generated/compas_timber.planning.Instruction.to_jsonstring", "api/generated/compas_timber.planning.Instruction.transform", "api/generated/compas_timber.planning.Instruction.validate_data", "api/generated/compas_timber.planning.LinearDimension", "api/generated/compas_timber.planning.LinearDimension.ToString", "api/generated/compas_timber.planning.LinearDimension.copy", "api/generated/compas_timber.planning.LinearDimension.from_json", "api/generated/compas_timber.planning.LinearDimension.from_jsonstring", "api/generated/compas_timber.planning.LinearDimension.sha256", "api/generated/compas_timber.planning.LinearDimension.to_json", "api/generated/compas_timber.planning.LinearDimension.to_jsonstring", "api/generated/compas_timber.planning.LinearDimension.transform", "api/generated/compas_timber.planning.LinearDimension.validate_data", "api/generated/compas_timber.planning.Model3d", "api/generated/compas_timber.planning.Model3d.ToString", "api/generated/compas_timber.planning.Model3d.copy", "api/generated/compas_timber.planning.Model3d.from_json", "api/generated/compas_timber.planning.Model3d.from_jsonstring", "api/generated/compas_timber.planning.Model3d.sha256", "api/generated/compas_timber.planning.Model3d.to_json", "api/generated/compas_timber.planning.Model3d.to_jsonstring", "api/generated/compas_timber.planning.Model3d.transform", "api/generated/compas_timber.planning.Model3d.validate_data", "api/generated/compas_timber.planning.SimpleSequenceGenerator", "api/generated/compas_timber.planning.Step", "api/generated/compas_timber.planning.Step.ToString", "api/generated/compas_timber.planning.Step.copy", "api/generated/compas_timber.planning.Step.from_json", "api/generated/compas_timber.planning.Step.from_jsonstring", "api/generated/compas_timber.planning.Step.sha256", "api/generated/compas_timber.planning.Step.to_json", "api/generated/compas_timber.planning.Step.to_jsonstring", "api/generated/compas_timber.planning.Step.transform", "api/generated/compas_timber.planning.Step.validate_data", "api/generated/compas_timber.planning.Text3d", "api/generated/compas_timber.planning.Text3d.ToString", "api/generated/compas_timber.planning.Text3d.copy", "api/generated/compas_timber.planning.Text3d.from_json", "api/generated/compas_timber.planning.Text3d.from_jsonstring", "api/generated/compas_timber.planning.Text3d.sha256", "api/generated/compas_timber.planning.Text3d.to_json", "api/generated/compas_timber.planning.Text3d.to_jsonstring", "api/generated/compas_timber.planning.Text3d.transform", "api/generated/compas_timber.planning.Text3d.validate_data", "api/generated/compas_timber.rhino.find_neighboring_beams", "citing", "examples", "examples/create_joint", "index", "installation", "license", "tutorials", "tutorials/BTLx_contribution_guide", "tutorials/grasshopper/attributes", "tutorials/grasshopper/beams", "tutorials/grasshopper/design", "tutorials/grasshopper/examples", "tutorials/grasshopper/fabrication", "tutorials/grasshopper/features", "tutorials/grasshopper/joint_rules", "tutorials/grasshopper/model", "tutorials/grasshopper/show", "tutorials/grasshopper/utils", "tutorials/grasshopper/workflow"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "filenames": ["api.rst", "api\\compas_timber.connections.rst", "api\\compas_timber.design.rst", "api\\compas_timber.elements.rst", "api\\compas_timber.errors.rst", "api\\compas_timber.fabrication.rst", "api\\compas_timber.ghpython.rst", "api\\compas_timber.model.rst", "api\\compas_timber.planning.rst", "api\\compas_timber.rhino.rst", "api\\generated\\compas_timber.connections.BallNodeJoint.rst", "api\\generated\\compas_timber.connections.BallNodeJoint.ToString.rst", "api\\generated\\compas_timber.connections.BallNodeJoint.add_extensions.rst", "api\\generated\\compas_timber.connections.BallNodeJoint.add_features.rst", "api\\generated\\compas_timber.connections.BallNodeJoint.check_elements_compatibility.rst", "api\\generated\\compas_timber.connections.BallNodeJoint.copy.rst", "api\\generated\\compas_timber.connections.BallNodeJoint.create.rst", "api\\generated\\compas_timber.connections.BallNodeJoint.element_count_complies.rst", "api\\generated\\compas_timber.connections.BallNodeJoint.from_json.rst", "api\\generated\\compas_timber.connections.BallNodeJoint.from_jsonstring.rst", "api\\generated\\compas_timber.connections.BallNodeJoint.get_face_most_ortho_to_beam.rst", "api\\generated\\compas_timber.connections.BallNodeJoint.get_face_most_towards_beam.rst", "api\\generated\\compas_timber.connections.BallNodeJoint.restore_beams_from_keys.rst", "api\\generated\\compas_timber.connections.BallNodeJoint.sha256.rst", "api\\generated\\compas_timber.connections.BallNodeJoint.to_json.rst", "api\\generated\\compas_timber.connections.BallNodeJoint.to_jsonstring.rst", "api\\generated\\compas_timber.connections.BallNodeJoint.validate_data.rst", "api\\generated\\compas_timber.connections.ConnectionSolver.rst", "api\\generated\\compas_timber.connections.ConnectionSolver.find_intersecting_pairs.rst", "api\\generated\\compas_timber.connections.ConnectionSolver.find_topology.rst", "api\\generated\\compas_timber.connections.Joint.rst", "api\\generated\\compas_timber.connections.Joint.ToString.rst", "api\\generated\\compas_timber.connections.Joint.add_extensions.rst", "api\\generated\\compas_timber.connections.Joint.add_features.rst", "api\\generated\\compas_timber.connections.Joint.check_elements_compatibility.rst", "api\\generated\\compas_timber.connections.Joint.copy.rst", "api\\generated\\compas_timber.connections.Joint.create.rst", "api\\generated\\compas_timber.connections.Joint.element_count_complies.rst", "api\\generated\\compas_timber.connections.Joint.from_json.rst", "api\\generated\\compas_timber.connections.Joint.from_jsonstring.rst", "api\\generated\\compas_timber.connections.Joint.get_face_most_ortho_to_beam.rst", "api\\generated\\compas_timber.connections.Joint.get_face_most_towards_beam.rst", "api\\generated\\compas_timber.connections.Joint.restore_beams_from_keys.rst", "api\\generated\\compas_timber.connections.Joint.sha256.rst", "api\\generated\\compas_timber.connections.Joint.to_json.rst", "api\\generated\\compas_timber.connections.Joint.to_jsonstring.rst", "api\\generated\\compas_timber.connections.Joint.validate_data.rst", "api\\generated\\compas_timber.connections.JointTopology.rst", "api\\generated\\compas_timber.connections.JointTopology.get_name.rst", "api\\generated\\compas_timber.connections.LButtJoint.rst", "api\\generated\\compas_timber.connections.LButtJoint.ToString.rst", "api\\generated\\compas_timber.connections.LButtJoint.add_extensions.rst", "api\\generated\\compas_timber.connections.LButtJoint.add_features.rst", "api\\generated\\compas_timber.connections.LButtJoint.check_elements_compatibility.rst", "api\\generated\\compas_timber.connections.LButtJoint.copy.rst", "api\\generated\\compas_timber.connections.LButtJoint.create.rst", "api\\generated\\compas_timber.connections.LButtJoint.element_count_complies.rst", "api\\generated\\compas_timber.connections.LButtJoint.from_json.rst", "api\\generated\\compas_timber.connections.LButtJoint.from_jsonstring.rst", "api\\generated\\compas_timber.connections.LButtJoint.get_face_most_ortho_to_beam.rst", "api\\generated\\compas_timber.connections.LButtJoint.get_face_most_towards_beam.rst", "api\\generated\\compas_timber.connections.LButtJoint.restore_beams_from_keys.rst", "api\\generated\\compas_timber.connections.LButtJoint.sha256.rst", "api\\generated\\compas_timber.connections.LButtJoint.to_json.rst", "api\\generated\\compas_timber.connections.LButtJoint.to_jsonstring.rst", "api\\generated\\compas_timber.connections.LButtJoint.update_beam_roles.rst", "api\\generated\\compas_timber.connections.LButtJoint.validate_data.rst", "api\\generated\\compas_timber.connections.LFrenchRidgeLapJoint.rst", "api\\generated\\compas_timber.connections.LFrenchRidgeLapJoint.ToString.rst", "api\\generated\\compas_timber.connections.LFrenchRidgeLapJoint.add_extensions.rst", "api\\generated\\compas_timber.connections.LFrenchRidgeLapJoint.add_features.rst", "api\\generated\\compas_timber.connections.LFrenchRidgeLapJoint.check_elements_compatibility.rst", "api\\generated\\compas_timber.connections.LFrenchRidgeLapJoint.copy.rst", "api\\generated\\compas_timber.connections.LFrenchRidgeLapJoint.create.rst", "api\\generated\\compas_timber.connections.LFrenchRidgeLapJoint.element_count_complies.rst", "api\\generated\\compas_timber.connections.LFrenchRidgeLapJoint.from_json.rst", "api\\generated\\compas_timber.connections.LFrenchRidgeLapJoint.from_jsonstring.rst", "api\\generated\\compas_timber.connections.LFrenchRidgeLapJoint.get_face_most_ortho_to_beam.rst", "api\\generated\\compas_timber.connections.LFrenchRidgeLapJoint.get_face_most_towards_beam.rst", "api\\generated\\compas_timber.connections.LFrenchRidgeLapJoint.restore_beams_from_keys.rst", "api\\generated\\compas_timber.connections.LFrenchRidgeLapJoint.sha256.rst", "api\\generated\\compas_timber.connections.LFrenchRidgeLapJoint.to_json.rst", "api\\generated\\compas_timber.connections.LFrenchRidgeLapJoint.to_jsonstring.rst", "api\\generated\\compas_timber.connections.LFrenchRidgeLapJoint.validate_data.rst", "api\\generated\\compas_timber.connections.LHalfLapJoint.rst", "api\\generated\\compas_timber.connections.LHalfLapJoint.ToString.rst", "api\\generated\\compas_timber.connections.LHalfLapJoint.add_extensions.rst", "api\\generated\\compas_timber.connections.LHalfLapJoint.add_features.rst", "api\\generated\\compas_timber.connections.LHalfLapJoint.check_elements_compatibility.rst", "api\\generated\\compas_timber.connections.LHalfLapJoint.copy.rst", "api\\generated\\compas_timber.connections.LHalfLapJoint.create.rst", "api\\generated\\compas_timber.connections.LHalfLapJoint.element_count_complies.rst", "api\\generated\\compas_timber.connections.LHalfLapJoint.from_json.rst", "api\\generated\\compas_timber.connections.LHalfLapJoint.from_jsonstring.rst", "api\\generated\\compas_timber.connections.LHalfLapJoint.get_cross_cutting_frame.rst", "api\\generated\\compas_timber.connections.LHalfLapJoint.get_face_most_ortho_to_beam.rst", "api\\generated\\compas_timber.connections.LHalfLapJoint.get_face_most_towards_beam.rst", "api\\generated\\compas_timber.connections.LHalfLapJoint.get_main_cutting_frame.rst", "api\\generated\\compas_timber.connections.LHalfLapJoint.restore_beams_from_keys.rst", "api\\generated\\compas_timber.connections.LHalfLapJoint.sha256.rst", "api\\generated\\compas_timber.connections.LHalfLapJoint.to_json.rst", "api\\generated\\compas_timber.connections.LHalfLapJoint.to_jsonstring.rst", "api\\generated\\compas_timber.connections.LHalfLapJoint.validate_data.rst", "api\\generated\\compas_timber.connections.LMiterJoint.rst", "api\\generated\\compas_timber.connections.LMiterJoint.ToString.rst", "api\\generated\\compas_timber.connections.LMiterJoint.add_extensions.rst", "api\\generated\\compas_timber.connections.LMiterJoint.add_features.rst", "api\\generated\\compas_timber.connections.LMiterJoint.check_elements_compatibility.rst", "api\\generated\\compas_timber.connections.LMiterJoint.copy.rst", "api\\generated\\compas_timber.connections.LMiterJoint.create.rst", "api\\generated\\compas_timber.connections.LMiterJoint.element_count_complies.rst", "api\\generated\\compas_timber.connections.LMiterJoint.from_json.rst", "api\\generated\\compas_timber.connections.LMiterJoint.from_jsonstring.rst", "api\\generated\\compas_timber.connections.LMiterJoint.get_cutting_planes.rst", "api\\generated\\compas_timber.connections.LMiterJoint.get_face_most_ortho_to_beam.rst", "api\\generated\\compas_timber.connections.LMiterJoint.get_face_most_towards_beam.rst", "api\\generated\\compas_timber.connections.LMiterJoint.restore_beams_from_keys.rst", "api\\generated\\compas_timber.connections.LMiterJoint.sha256.rst", "api\\generated\\compas_timber.connections.LMiterJoint.to_json.rst", "api\\generated\\compas_timber.connections.LMiterJoint.to_jsonstring.rst", "api\\generated\\compas_timber.connections.LMiterJoint.validate_data.rst", "api\\generated\\compas_timber.connections.LapJoint.rst", "api\\generated\\compas_timber.connections.LapJoint.ToString.rst", "api\\generated\\compas_timber.connections.LapJoint.add_extensions.rst", "api\\generated\\compas_timber.connections.LapJoint.add_features.rst", "api\\generated\\compas_timber.connections.LapJoint.check_elements_compatibility.rst", "api\\generated\\compas_timber.connections.LapJoint.copy.rst", "api\\generated\\compas_timber.connections.LapJoint.create.rst", "api\\generated\\compas_timber.connections.LapJoint.element_count_complies.rst", "api\\generated\\compas_timber.connections.LapJoint.from_json.rst", "api\\generated\\compas_timber.connections.LapJoint.from_jsonstring.rst", "api\\generated\\compas_timber.connections.LapJoint.get_cross_cutting_frame.rst", "api\\generated\\compas_timber.connections.LapJoint.get_face_most_ortho_to_beam.rst", "api\\generated\\compas_timber.connections.LapJoint.get_face_most_towards_beam.rst", "api\\generated\\compas_timber.connections.LapJoint.get_main_cutting_frame.rst", "api\\generated\\compas_timber.connections.LapJoint.restore_beams_from_keys.rst", "api\\generated\\compas_timber.connections.LapJoint.sha256.rst", "api\\generated\\compas_timber.connections.LapJoint.to_json.rst", "api\\generated\\compas_timber.connections.LapJoint.to_jsonstring.rst", "api\\generated\\compas_timber.connections.LapJoint.validate_data.rst", "api\\generated\\compas_timber.connections.NullJoint.rst", "api\\generated\\compas_timber.connections.NullJoint.ToString.rst", "api\\generated\\compas_timber.connections.NullJoint.add_extensions.rst", "api\\generated\\compas_timber.connections.NullJoint.add_features.rst", "api\\generated\\compas_timber.connections.NullJoint.check_elements_compatibility.rst", "api\\generated\\compas_timber.connections.NullJoint.copy.rst", "api\\generated\\compas_timber.connections.NullJoint.create.rst", "api\\generated\\compas_timber.connections.NullJoint.element_count_complies.rst", "api\\generated\\compas_timber.connections.NullJoint.from_json.rst", "api\\generated\\compas_timber.connections.NullJoint.from_jsonstring.rst", "api\\generated\\compas_timber.connections.NullJoint.get_face_most_ortho_to_beam.rst", "api\\generated\\compas_timber.connections.NullJoint.get_face_most_towards_beam.rst", "api\\generated\\compas_timber.connections.NullJoint.restore_beams_from_keys.rst", "api\\generated\\compas_timber.connections.NullJoint.sha256.rst", "api\\generated\\compas_timber.connections.NullJoint.to_json.rst", "api\\generated\\compas_timber.connections.NullJoint.to_jsonstring.rst", "api\\generated\\compas_timber.connections.NullJoint.validate_data.rst", "api\\generated\\compas_timber.connections.TBirdsmouthJoint.rst", "api\\generated\\compas_timber.connections.TBirdsmouthJoint.ToString.rst", "api\\generated\\compas_timber.connections.TBirdsmouthJoint.add_extensions.rst", "api\\generated\\compas_timber.connections.TBirdsmouthJoint.add_features.rst", "api\\generated\\compas_timber.connections.TBirdsmouthJoint.check_elements_compatibility.rst", "api\\generated\\compas_timber.connections.TBirdsmouthJoint.copy.rst", "api\\generated\\compas_timber.connections.TBirdsmouthJoint.create.rst", "api\\generated\\compas_timber.connections.TBirdsmouthJoint.element_count_complies.rst", "api\\generated\\compas_timber.connections.TBirdsmouthJoint.from_json.rst", "api\\generated\\compas_timber.connections.TBirdsmouthJoint.from_jsonstring.rst", "api\\generated\\compas_timber.connections.TBirdsmouthJoint.get_face_most_ortho_to_beam.rst", "api\\generated\\compas_timber.connections.TBirdsmouthJoint.get_face_most_towards_beam.rst", "api\\generated\\compas_timber.connections.TBirdsmouthJoint.restore_beams_from_keys.rst", "api\\generated\\compas_timber.connections.TBirdsmouthJoint.sha256.rst", "api\\generated\\compas_timber.connections.TBirdsmouthJoint.to_json.rst", "api\\generated\\compas_timber.connections.TBirdsmouthJoint.to_jsonstring.rst", "api\\generated\\compas_timber.connections.TBirdsmouthJoint.validate_data.rst", "api\\generated\\compas_timber.connections.TButtJoint.rst", "api\\generated\\compas_timber.connections.TButtJoint.ToString.rst", "api\\generated\\compas_timber.connections.TButtJoint.add_extensions.rst", "api\\generated\\compas_timber.connections.TButtJoint.add_features.rst", "api\\generated\\compas_timber.connections.TButtJoint.check_elements_compatibility.rst", "api\\generated\\compas_timber.connections.TButtJoint.copy.rst", "api\\generated\\compas_timber.connections.TButtJoint.create.rst", "api\\generated\\compas_timber.connections.TButtJoint.element_count_complies.rst", "api\\generated\\compas_timber.connections.TButtJoint.from_json.rst", "api\\generated\\compas_timber.connections.TButtJoint.from_jsonstring.rst", "api\\generated\\compas_timber.connections.TButtJoint.get_face_most_ortho_to_beam.rst", "api\\generated\\compas_timber.connections.TButtJoint.get_face_most_towards_beam.rst", "api\\generated\\compas_timber.connections.TButtJoint.restore_beams_from_keys.rst", "api\\generated\\compas_timber.connections.TButtJoint.sha256.rst", "api\\generated\\compas_timber.connections.TButtJoint.to_json.rst", "api\\generated\\compas_timber.connections.TButtJoint.to_jsonstring.rst", "api\\generated\\compas_timber.connections.TButtJoint.validate_data.rst", "api\\generated\\compas_timber.connections.TDovetailJoint.rst", "api\\generated\\compas_timber.connections.TDovetailJoint.ToString.rst", "api\\generated\\compas_timber.connections.TDovetailJoint.add_extensions.rst", "api\\generated\\compas_timber.connections.TDovetailJoint.add_features.rst", "api\\generated\\compas_timber.connections.TDovetailJoint.check_elements_compatibility.rst", "api\\generated\\compas_timber.connections.TDovetailJoint.copy.rst", "api\\generated\\compas_timber.connections.TDovetailJoint.create.rst", "api\\generated\\compas_timber.connections.TDovetailJoint.define_dovetail_tool.rst", "api\\generated\\compas_timber.connections.TDovetailJoint.element_count_complies.rst", "api\\generated\\compas_timber.connections.TDovetailJoint.from_json.rst", "api\\generated\\compas_timber.connections.TDovetailJoint.from_jsonstring.rst", "api\\generated\\compas_timber.connections.TDovetailJoint.get_face_most_ortho_to_beam.rst", "api\\generated\\compas_timber.connections.TDovetailJoint.get_face_most_towards_beam.rst", "api\\generated\\compas_timber.connections.TDovetailJoint.restore_beams_from_keys.rst", "api\\generated\\compas_timber.connections.TDovetailJoint.sha256.rst", "api\\generated\\compas_timber.connections.TDovetailJoint.to_json.rst", "api\\generated\\compas_timber.connections.TDovetailJoint.to_jsonstring.rst", "api\\generated\\compas_timber.connections.TDovetailJoint.validate_data.rst", "api\\generated\\compas_timber.connections.THalfLapJoint.rst", "api\\generated\\compas_timber.connections.THalfLapJoint.ToString.rst", "api\\generated\\compas_timber.connections.THalfLapJoint.add_extensions.rst", "api\\generated\\compas_timber.connections.THalfLapJoint.add_features.rst", "api\\generated\\compas_timber.connections.THalfLapJoint.check_elements_compatibility.rst", "api\\generated\\compas_timber.connections.THalfLapJoint.copy.rst", "api\\generated\\compas_timber.connections.THalfLapJoint.create.rst", "api\\generated\\compas_timber.connections.THalfLapJoint.element_count_complies.rst", "api\\generated\\compas_timber.connections.THalfLapJoint.from_json.rst", "api\\generated\\compas_timber.connections.THalfLapJoint.from_jsonstring.rst", "api\\generated\\compas_timber.connections.THalfLapJoint.get_cross_cutting_frame.rst", "api\\generated\\compas_timber.connections.THalfLapJoint.get_face_most_ortho_to_beam.rst", "api\\generated\\compas_timber.connections.THalfLapJoint.get_face_most_towards_beam.rst", "api\\generated\\compas_timber.connections.THalfLapJoint.get_main_cutting_frame.rst", "api\\generated\\compas_timber.connections.THalfLapJoint.restore_beams_from_keys.rst", "api\\generated\\compas_timber.connections.THalfLapJoint.sha256.rst", "api\\generated\\compas_timber.connections.THalfLapJoint.to_json.rst", "api\\generated\\compas_timber.connections.THalfLapJoint.to_jsonstring.rst", "api\\generated\\compas_timber.connections.THalfLapJoint.validate_data.rst", "api\\generated\\compas_timber.connections.TStepJoint.rst", "api\\generated\\compas_timber.connections.TStepJoint.ToString.rst", "api\\generated\\compas_timber.connections.TStepJoint.add_extensions.rst", "api\\generated\\compas_timber.connections.TStepJoint.add_features.rst", "api\\generated\\compas_timber.connections.TStepJoint.check_elements_compatibility.rst", "api\\generated\\compas_timber.connections.TStepJoint.copy.rst", "api\\generated\\compas_timber.connections.TStepJoint.create.rst", "api\\generated\\compas_timber.connections.TStepJoint.element_count_complies.rst", "api\\generated\\compas_timber.connections.TStepJoint.from_json.rst", "api\\generated\\compas_timber.connections.TStepJoint.from_jsonstring.rst", "api\\generated\\compas_timber.connections.TStepJoint.get_face_most_ortho_to_beam.rst", "api\\generated\\compas_timber.connections.TStepJoint.get_face_most_towards_beam.rst", "api\\generated\\compas_timber.connections.TStepJoint.restore_beams_from_keys.rst", "api\\generated\\compas_timber.connections.TStepJoint.set_step_depths.rst", "api\\generated\\compas_timber.connections.TStepJoint.sha256.rst", "api\\generated\\compas_timber.connections.TStepJoint.to_json.rst", "api\\generated\\compas_timber.connections.TStepJoint.to_jsonstring.rst", "api\\generated\\compas_timber.connections.TStepJoint.validate_data.rst", "api\\generated\\compas_timber.connections.TenonMortiseJoint.rst", "api\\generated\\compas_timber.connections.TenonMortiseJoint.ToString.rst", "api\\generated\\compas_timber.connections.TenonMortiseJoint.add_extensions.rst", "api\\generated\\compas_timber.connections.TenonMortiseJoint.add_features.rst", "api\\generated\\compas_timber.connections.TenonMortiseJoint.check_elements_compatibility.rst", "api\\generated\\compas_timber.connections.TenonMortiseJoint.copy.rst", "api\\generated\\compas_timber.connections.TenonMortiseJoint.create.rst", "api\\generated\\compas_timber.connections.TenonMortiseJoint.element_count_complies.rst", "api\\generated\\compas_timber.connections.TenonMortiseJoint.from_json.rst", "api\\generated\\compas_timber.connections.TenonMortiseJoint.from_jsonstring.rst", "api\\generated\\compas_timber.connections.TenonMortiseJoint.get_face_most_ortho_to_beam.rst", "api\\generated\\compas_timber.connections.TenonMortiseJoint.get_face_most_towards_beam.rst", "api\\generated\\compas_timber.connections.TenonMortiseJoint.restore_beams_from_keys.rst", "api\\generated\\compas_timber.connections.TenonMortiseJoint.set_default_values.rst", "api\\generated\\compas_timber.connections.TenonMortiseJoint.sha256.rst", "api\\generated\\compas_timber.connections.TenonMortiseJoint.to_json.rst", "api\\generated\\compas_timber.connections.TenonMortiseJoint.to_jsonstring.rst", "api\\generated\\compas_timber.connections.TenonMortiseJoint.validate_data.rst", "api\\generated\\compas_timber.connections.XHalfLapJoint.rst", "api\\generated\\compas_timber.connections.XHalfLapJoint.ToString.rst", "api\\generated\\compas_timber.connections.XHalfLapJoint.add_extensions.rst", "api\\generated\\compas_timber.connections.XHalfLapJoint.add_features.rst", "api\\generated\\compas_timber.connections.XHalfLapJoint.check_elements_compatibility.rst", "api\\generated\\compas_timber.connections.XHalfLapJoint.copy.rst", "api\\generated\\compas_timber.connections.XHalfLapJoint.create.rst", "api\\generated\\compas_timber.connections.XHalfLapJoint.element_count_complies.rst", "api\\generated\\compas_timber.connections.XHalfLapJoint.from_json.rst", "api\\generated\\compas_timber.connections.XHalfLapJoint.from_jsonstring.rst", "api\\generated\\compas_timber.connections.XHalfLapJoint.get_cross_cutting_frame.rst", "api\\generated\\compas_timber.connections.XHalfLapJoint.get_face_most_ortho_to_beam.rst", "api\\generated\\compas_timber.connections.XHalfLapJoint.get_face_most_towards_beam.rst", "api\\generated\\compas_timber.connections.XHalfLapJoint.get_main_cutting_frame.rst", "api\\generated\\compas_timber.connections.XHalfLapJoint.restore_beams_from_keys.rst", "api\\generated\\compas_timber.connections.XHalfLapJoint.sha256.rst", "api\\generated\\compas_timber.connections.XHalfLapJoint.to_json.rst", "api\\generated\\compas_timber.connections.XHalfLapJoint.to_jsonstring.rst", "api\\generated\\compas_timber.connections.XHalfLapJoint.validate_data.rst", "api\\generated\\compas_timber.connections.find_neighboring_beams.rst", "api\\generated\\compas_timber.design.CategoryRule.rst", "api\\generated\\compas_timber.design.CategoryRule.ToString.rst", "api\\generated\\compas_timber.design.CategoryRule.comply.rst", "api\\generated\\compas_timber.design.CategoryRule.get_category_rules.rst", "api\\generated\\compas_timber.design.CategoryRule.get_direct_rules.rst", "api\\generated\\compas_timber.design.CategoryRule.get_topology_rules.rst", "api\\generated\\compas_timber.design.CategoryRule.joints_from_beams_and_rules.rst", "api\\generated\\compas_timber.design.CategoryRule.reorder.rst", "api\\generated\\compas_timber.design.DebugInfomation.rst", "api\\generated\\compas_timber.design.DebugInfomation.ToString.rst", "api\\generated\\compas_timber.design.DebugInfomation.add_fastener_error.rst", "api\\generated\\compas_timber.design.DebugInfomation.add_feature_error.rst", "api\\generated\\compas_timber.design.DebugInfomation.add_joint_error.rst", "api\\generated\\compas_timber.design.DirectRule.rst", "api\\generated\\compas_timber.design.DirectRule.ToString.rst", "api\\generated\\compas_timber.design.DirectRule.comply.rst", "api\\generated\\compas_timber.design.DirectRule.get_category_rules.rst", "api\\generated\\compas_timber.design.DirectRule.get_direct_rules.rst", "api\\generated\\compas_timber.design.DirectRule.get_topology_rules.rst", "api\\generated\\compas_timber.design.DirectRule.joints_from_beams_and_rules.rst", "api\\generated\\compas_timber.design.FeatureDefinition.rst", "api\\generated\\compas_timber.design.FeatureDefinition.ToString.rst", "api\\generated\\compas_timber.design.JointDefinition.rst", "api\\generated\\compas_timber.design.JointDefinition.ToString.rst", "api\\generated\\compas_timber.design.JointDefinition.is_identical.rst", "api\\generated\\compas_timber.design.JointDefinition.match.rst", "api\\generated\\compas_timber.design.JointRule.rst", "api\\generated\\compas_timber.design.JointRule.comply.rst", "api\\generated\\compas_timber.design.JointRule.get_category_rules.rst", "api\\generated\\compas_timber.design.JointRule.get_direct_rules.rst", "api\\generated\\compas_timber.design.JointRule.get_topology_rules.rst", "api\\generated\\compas_timber.design.JointRule.joints_from_beams_and_rules.rst", "api\\generated\\compas_timber.design.SurfaceModel.rst", "api\\generated\\compas_timber.design.SurfaceModel.beam_category_names.rst", "api\\generated\\compas_timber.design.SurfaceModel.create_model.rst", "api\\generated\\compas_timber.design.SurfaceModel.cull_overlaps.rst", "api\\generated\\compas_timber.design.SurfaceModel.distance_between_elements.rst", "api\\generated\\compas_timber.design.SurfaceModel.generate_frame.rst", "api\\generated\\compas_timber.design.SurfaceModel.generate_perimeter_beams.rst", "api\\generated\\compas_timber.design.SurfaceModel.generate_plates.rst", "api\\generated\\compas_timber.design.SurfaceModel.generate_stud_lines.rst", "api\\generated\\compas_timber.design.SurfaceModel.generate_studs.rst", "api\\generated\\compas_timber.design.SurfaceModel.generate_windows.rst", "api\\generated\\compas_timber.design.SurfaceModel.get_beam_intersections.rst", "api\\generated\\compas_timber.design.SurfaceModel.get_interior_segment_indices.rst", "api\\generated\\compas_timber.design.SurfaceModel.offset_elements.rst", "api\\generated\\compas_timber.design.SurfaceModel.parse_loops.rst", "api\\generated\\compas_timber.design.SurfaceModel.trim_jack_studs.rst", "api\\generated\\compas_timber.design.SurfaceModel.trim_king_studs.rst", "api\\generated\\compas_timber.design.SurfaceModel.trim_studs.rst", "api\\generated\\compas_timber.design.TopologyRule.rst", "api\\generated\\compas_timber.design.TopologyRule.ToString.rst", "api\\generated\\compas_timber.design.TopologyRule.comply.rst", "api\\generated\\compas_timber.design.TopologyRule.get_category_rules.rst", "api\\generated\\compas_timber.design.TopologyRule.get_direct_rules.rst", "api\\generated\\compas_timber.design.TopologyRule.get_topology_rules.rst", "api\\generated\\compas_timber.design.TopologyRule.joints_from_beams_and_rules.rst", "api\\generated\\compas_timber.design.guess_joint_topology_2beams.rst", "api\\generated\\compas_timber.design.set_default_joints.rst", "api\\generated\\compas_timber.elements.Beam.rst", "api\\generated\\compas_timber.elements.Beam.ToString.rst", "api\\generated\\compas_timber.elements.Beam.add_blank_extension.rst", "api\\generated\\compas_timber.elements.Beam.add_feature.rst", "api\\generated\\compas_timber.elements.Beam.add_features.rst", "api\\generated\\compas_timber.elements.Beam.compute_aabb.rst", "api\\generated\\compas_timber.elements.Beam.compute_collision_mesh.rst", "api\\generated\\compas_timber.elements.Beam.compute_geometry.rst", "api\\generated\\compas_timber.elements.Beam.compute_obb.rst", "api\\generated\\compas_timber.elements.Beam.compute_worldtransformation.rst", "api\\generated\\compas_timber.elements.Beam.copy.rst", "api\\generated\\compas_timber.elements.Beam.endpoint_closest_to_point.rst", "api\\generated\\compas_timber.elements.Beam.extension_to_plane.rst", "api\\generated\\compas_timber.elements.Beam.from_centerline.rst", "api\\generated\\compas_timber.elements.Beam.from_endpoints.rst", "api\\generated\\compas_timber.elements.Beam.from_json.rst", "api\\generated\\compas_timber.elements.Beam.from_jsonstring.rst", "api\\generated\\compas_timber.elements.Beam.opposing_side_index.rst", "api\\generated\\compas_timber.elements.Beam.remove_blank_extension.rst", "api\\generated\\compas_timber.elements.Beam.remove_features.rst", "api\\generated\\compas_timber.elements.Beam.reset.rst", "api\\generated\\compas_timber.elements.Beam.sha256.rst", "api\\generated\\compas_timber.elements.Beam.side_as_surface.rst", "api\\generated\\compas_timber.elements.Beam.to_json.rst", "api\\generated\\compas_timber.elements.Beam.to_jsonstring.rst", "api\\generated\\compas_timber.elements.Beam.transform.rst", "api\\generated\\compas_timber.elements.Beam.transformed.rst", "api\\generated\\compas_timber.elements.Beam.validate_data.rst", "api\\generated\\compas_timber.elements.Fastener.rst", "api\\generated\\compas_timber.elements.Fastener.ToString.rst", "api\\generated\\compas_timber.elements.Fastener.add_feature.rst", "api\\generated\\compas_timber.elements.Fastener.compute_aabb.rst", "api\\generated\\compas_timber.elements.Fastener.compute_collision_mesh.rst", "api\\generated\\compas_timber.elements.Fastener.compute_geometry.rst", "api\\generated\\compas_timber.elements.Fastener.compute_obb.rst", "api\\generated\\compas_timber.elements.Fastener.compute_worldtransformation.rst", "api\\generated\\compas_timber.elements.Fastener.copy.rst", "api\\generated\\compas_timber.elements.Fastener.from_json.rst", "api\\generated\\compas_timber.elements.Fastener.from_jsonstring.rst", "api\\generated\\compas_timber.elements.Fastener.reset.rst", "api\\generated\\compas_timber.elements.Fastener.sha256.rst", "api\\generated\\compas_timber.elements.Fastener.to_json.rst", "api\\generated\\compas_timber.elements.Fastener.to_jsonstring.rst", "api\\generated\\compas_timber.elements.Fastener.transform.rst", "api\\generated\\compas_timber.elements.Fastener.transformed.rst", "api\\generated\\compas_timber.elements.Fastener.validate_data.rst", "api\\generated\\compas_timber.elements.FastenerTimberInterface.rst", "api\\generated\\compas_timber.elements.FastenerTimberInterface.ToString.rst", "api\\generated\\compas_timber.elements.FastenerTimberInterface.copy.rst", "api\\generated\\compas_timber.elements.FastenerTimberInterface.from_json.rst", "api\\generated\\compas_timber.elements.FastenerTimberInterface.from_jsonstring.rst", "api\\generated\\compas_timber.elements.FastenerTimberInterface.get_features.rst", "api\\generated\\compas_timber.elements.FastenerTimberInterface.sha256.rst", "api\\generated\\compas_timber.elements.FastenerTimberInterface.to_json.rst", "api\\generated\\compas_timber.elements.FastenerTimberInterface.to_jsonstring.rst", "api\\generated\\compas_timber.elements.FastenerTimberInterface.validate_data.rst", "api\\generated\\compas_timber.elements.Plate.rst", "api\\generated\\compas_timber.elements.Plate.ToString.rst", "api\\generated\\compas_timber.elements.Plate.add_feature.rst", "api\\generated\\compas_timber.elements.Plate.add_features.rst", "api\\generated\\compas_timber.elements.Plate.compute_aabb.rst", "api\\generated\\compas_timber.elements.Plate.compute_collision_mesh.rst", "api\\generated\\compas_timber.elements.Plate.compute_geometry.rst", "api\\generated\\compas_timber.elements.Plate.compute_obb.rst", "api\\generated\\compas_timber.elements.Plate.compute_worldtransformation.rst", "api\\generated\\compas_timber.elements.Plate.copy.rst", "api\\generated\\compas_timber.elements.Plate.from_json.rst", "api\\generated\\compas_timber.elements.Plate.from_jsonstring.rst", "api\\generated\\compas_timber.elements.Plate.remove_features.rst", "api\\generated\\compas_timber.elements.Plate.reset.rst", "api\\generated\\compas_timber.elements.Plate.set_frame_and_outline.rst", "api\\generated\\compas_timber.elements.Plate.sha256.rst", "api\\generated\\compas_timber.elements.Plate.to_json.rst", "api\\generated\\compas_timber.elements.Plate.to_jsonstring.rst", "api\\generated\\compas_timber.elements.Plate.transform.rst", "api\\generated\\compas_timber.elements.Plate.transformed.rst", "api\\generated\\compas_timber.elements.Plate.validate_data.rst", "api\\generated\\compas_timber.elements.TimberElement.rst", "api\\generated\\compas_timber.elements.TimberElement.ToString.rst", "api\\generated\\compas_timber.elements.TimberElement.add_feature.rst", "api\\generated\\compas_timber.elements.TimberElement.compute_aabb.rst", "api\\generated\\compas_timber.elements.TimberElement.compute_collision_mesh.rst", "api\\generated\\compas_timber.elements.TimberElement.compute_geometry.rst", "api\\generated\\compas_timber.elements.TimberElement.compute_obb.rst", "api\\generated\\compas_timber.elements.TimberElement.compute_worldtransformation.rst", "api\\generated\\compas_timber.elements.TimberElement.copy.rst", "api\\generated\\compas_timber.elements.TimberElement.from_json.rst", "api\\generated\\compas_timber.elements.TimberElement.from_jsonstring.rst", "api\\generated\\compas_timber.elements.TimberElement.reset.rst", "api\\generated\\compas_timber.elements.TimberElement.sha256.rst", "api\\generated\\compas_timber.elements.TimberElement.to_json.rst", "api\\generated\\compas_timber.elements.TimberElement.to_jsonstring.rst", "api\\generated\\compas_timber.elements.TimberElement.transform.rst", "api\\generated\\compas_timber.elements.TimberElement.transformed.rst", "api\\generated\\compas_timber.elements.TimberElement.validate_data.rst", "api\\generated\\compas_timber.elements.Wall.rst", "api\\generated\\compas_timber.elements.Wall.ToString.rst", "api\\generated\\compas_timber.elements.Wall.add_feature.rst", "api\\generated\\compas_timber.elements.Wall.compute_aabb.rst", "api\\generated\\compas_timber.elements.Wall.compute_collision_mesh.rst", "api\\generated\\compas_timber.elements.Wall.compute_geometry.rst", "api\\generated\\compas_timber.elements.Wall.compute_obb.rst", "api\\generated\\compas_timber.elements.Wall.compute_worldtransformation.rst", "api\\generated\\compas_timber.elements.Wall.copy.rst", "api\\generated\\compas_timber.elements.Wall.from_box.rst", "api\\generated\\compas_timber.elements.Wall.from_json.rst", "api\\generated\\compas_timber.elements.Wall.from_jsonstring.rst", "api\\generated\\compas_timber.elements.Wall.reset.rst", "api\\generated\\compas_timber.elements.Wall.sha256.rst", "api\\generated\\compas_timber.elements.Wall.to_json.rst", "api\\generated\\compas_timber.elements.Wall.to_jsonstring.rst", "api\\generated\\compas_timber.elements.Wall.transform.rst", "api\\generated\\compas_timber.elements.Wall.transformed.rst", "api\\generated\\compas_timber.elements.Wall.validate_data.rst", "api\\generated\\compas_timber.errors.BeamJoinningError.rst", "api\\generated\\compas_timber.errors.FastenerApplicationError.rst", "api\\generated\\compas_timber.errors.FeatureApplicationError.rst", "api\\generated\\compas_timber.fabrication.BTLxPart.rst", "api\\generated\\compas_timber.fabrication.BTLxPart.et_point_vals.rst", "api\\generated\\compas_timber.fabrication.BTLxPart.ref_side_from_face.rst", "api\\generated\\compas_timber.fabrication.BTLxProcessing.rst", "api\\generated\\compas_timber.fabrication.BTLxProcessing.ToString.rst", "api\\generated\\compas_timber.fabrication.BTLxProcessing.add_subprocessing.rst", "api\\generated\\compas_timber.fabrication.BTLxProcessing.copy.rst", "api\\generated\\compas_timber.fabrication.BTLxProcessing.from_json.rst", "api\\generated\\compas_timber.fabrication.BTLxProcessing.from_jsonstring.rst", "api\\generated\\compas_timber.fabrication.BTLxProcessing.sha256.rst", "api\\generated\\compas_timber.fabrication.BTLxProcessing.to_json.rst", "api\\generated\\compas_timber.fabrication.BTLxProcessing.to_jsonstring.rst", "api\\generated\\compas_timber.fabrication.BTLxProcessing.validate_data.rst", "api\\generated\\compas_timber.fabrication.BTLxWriter.rst", "api\\generated\\compas_timber.fabrication.BTLxWriter.model_to_xml.rst", "api\\generated\\compas_timber.fabrication.BTLxWriter.write.rst", "api\\generated\\compas_timber.fabrication.DoubleCut.rst", "api\\generated\\compas_timber.fabrication.DoubleCut.ToString.rst", "api\\generated\\compas_timber.fabrication.DoubleCut.add_subprocessing.rst", "api\\generated\\compas_timber.fabrication.DoubleCut.apply.rst", "api\\generated\\compas_timber.fabrication.DoubleCut.copy.rst", "api\\generated\\compas_timber.fabrication.DoubleCut.from_json.rst", "api\\generated\\compas_timber.fabrication.DoubleCut.from_jsonstring.rst", "api\\generated\\compas_timber.fabrication.DoubleCut.from_planes_and_beam.rst", "api\\generated\\compas_timber.fabrication.DoubleCut.planes_from_params_and_beam.rst", "api\\generated\\compas_timber.fabrication.DoubleCut.sha256.rst", "api\\generated\\compas_timber.fabrication.DoubleCut.to_json.rst", "api\\generated\\compas_timber.fabrication.DoubleCut.to_jsonstring.rst", "api\\generated\\compas_timber.fabrication.DoubleCut.validate_data.rst", "api\\generated\\compas_timber.fabrication.DovetailMortise.rst", "api\\generated\\compas_timber.fabrication.DovetailMortise.ToString.rst", "api\\generated\\compas_timber.fabrication.DovetailMortise.add_subprocessing.rst", "api\\generated\\compas_timber.fabrication.DovetailMortise.apply.rst", "api\\generated\\compas_timber.fabrication.DovetailMortise.copy.rst", "api\\generated\\compas_timber.fabrication.DovetailMortise.define_dovetail_tool.rst", "api\\generated\\compas_timber.fabrication.DovetailMortise.dovetail_cutting_frames_from_params_and_beam.rst", "api\\generated\\compas_timber.fabrication.DovetailMortise.dovetail_volume_from_params_and_beam.rst", "api\\generated\\compas_timber.fabrication.DovetailMortise.frame_from_params_and_beam.rst", "api\\generated\\compas_timber.fabrication.DovetailMortise.from_frame_and_beam.rst", "api\\generated\\compas_timber.fabrication.DovetailMortise.from_json.rst", "api\\generated\\compas_timber.fabrication.DovetailMortise.from_jsonstring.rst", "api\\generated\\compas_timber.fabrication.DovetailMortise.sha256.rst", "api\\generated\\compas_timber.fabrication.DovetailMortise.to_json.rst", "api\\generated\\compas_timber.fabrication.DovetailMortise.to_jsonstring.rst", "api\\generated\\compas_timber.fabrication.DovetailMortise.validate_data.rst", "api\\generated\\compas_timber.fabrication.DovetailTenon.rst", "api\\generated\\compas_timber.fabrication.DovetailTenon.ToString.rst", "api\\generated\\compas_timber.fabrication.DovetailTenon.add_subprocessing.rst", "api\\generated\\compas_timber.fabrication.DovetailTenon.apply.rst", "api\\generated\\compas_timber.fabrication.DovetailTenon.copy.rst", "api\\generated\\compas_timber.fabrication.DovetailTenon.define_dovetail_tool.rst", "api\\generated\\compas_timber.fabrication.DovetailTenon.dovetail_cutting_frames_from_params_and_beam.rst", "api\\generated\\compas_timber.fabrication.DovetailTenon.dovetail_volume_from_params_and_beam.rst", "api\\generated\\compas_timber.fabrication.DovetailTenon.frame_from_params_and_beam.rst", "api\\generated\\compas_timber.fabrication.DovetailTenon.from_json.rst", "api\\generated\\compas_timber.fabrication.DovetailTenon.from_jsonstring.rst", "api\\generated\\compas_timber.fabrication.DovetailTenon.from_plane_and_beam.rst", "api\\generated\\compas_timber.fabrication.DovetailTenon.sha256.rst", "api\\generated\\compas_timber.fabrication.DovetailTenon.to_json.rst", "api\\generated\\compas_timber.fabrication.DovetailTenon.to_jsonstring.rst", "api\\generated\\compas_timber.fabrication.DovetailTenon.validate_data.rst", "api\\generated\\compas_timber.fabrication.Drilling.rst", "api\\generated\\compas_timber.fabrication.Drilling.ToString.rst", "api\\generated\\compas_timber.fabrication.Drilling.add_subprocessing.rst", "api\\generated\\compas_timber.fabrication.Drilling.apply.rst", "api\\generated\\compas_timber.fabrication.Drilling.copy.rst", "api\\generated\\compas_timber.fabrication.Drilling.cylinder_from_params_and_beam.rst", "api\\generated\\compas_timber.fabrication.Drilling.from_json.rst", "api\\generated\\compas_timber.fabrication.Drilling.from_jsonstring.rst", "api\\generated\\compas_timber.fabrication.Drilling.from_line_and_beam.rst", "api\\generated\\compas_timber.fabrication.Drilling.sha256.rst", "api\\generated\\compas_timber.fabrication.Drilling.to_json.rst", "api\\generated\\compas_timber.fabrication.Drilling.to_jsonstring.rst", "api\\generated\\compas_timber.fabrication.Drilling.validate_data.rst", "api\\generated\\compas_timber.fabrication.EdgePositionType.rst", "api\\generated\\compas_timber.fabrication.FrenchRidgeLap.rst", "api\\generated\\compas_timber.fabrication.FrenchRidgeLap.ToString.rst", "api\\generated\\compas_timber.fabrication.FrenchRidgeLap.add_subprocessing.rst", "api\\generated\\compas_timber.fabrication.FrenchRidgeLap.apply.rst", "api\\generated\\compas_timber.fabrication.FrenchRidgeLap.copy.rst", "api\\generated\\compas_timber.fabrication.FrenchRidgeLap.frame_from_params_and_beam.rst", "api\\generated\\compas_timber.fabrication.FrenchRidgeLap.from_beam_beam_and_plane.rst", "api\\generated\\compas_timber.fabrication.FrenchRidgeLap.from_json.rst", "api\\generated\\compas_timber.fabrication.FrenchRidgeLap.from_jsonstring.rst", "api\\generated\\compas_timber.fabrication.FrenchRidgeLap.lap_volume_from_params_and_beam.rst", "api\\generated\\compas_timber.fabrication.FrenchRidgeLap.sha256.rst", "api\\generated\\compas_timber.fabrication.FrenchRidgeLap.to_json.rst", "api\\generated\\compas_timber.fabrication.FrenchRidgeLap.to_jsonstring.rst", "api\\generated\\compas_timber.fabrication.FrenchRidgeLap.validate_data.rst", "api\\generated\\compas_timber.fabrication.JackRafterCut.rst", "api\\generated\\compas_timber.fabrication.JackRafterCut.ToString.rst", "api\\generated\\compas_timber.fabrication.JackRafterCut.add_subprocessing.rst", "api\\generated\\compas_timber.fabrication.JackRafterCut.apply.rst", "api\\generated\\compas_timber.fabrication.JackRafterCut.copy.rst", "api\\generated\\compas_timber.fabrication.JackRafterCut.from_json.rst", "api\\generated\\compas_timber.fabrication.JackRafterCut.from_jsonstring.rst", "api\\generated\\compas_timber.fabrication.JackRafterCut.from_plane_and_beam.rst", "api\\generated\\compas_timber.fabrication.JackRafterCut.plane_from_params_and_beam.rst", "api\\generated\\compas_timber.fabrication.JackRafterCut.sha256.rst", "api\\generated\\compas_timber.fabrication.JackRafterCut.to_json.rst", "api\\generated\\compas_timber.fabrication.JackRafterCut.to_jsonstring.rst", "api\\generated\\compas_timber.fabrication.JackRafterCut.validate_data.rst", "api\\generated\\compas_timber.fabrication.Lap.rst", "api\\generated\\compas_timber.fabrication.Lap.ToString.rst", "api\\generated\\compas_timber.fabrication.Lap.add_subprocessing.rst", "api\\generated\\compas_timber.fabrication.Lap.apply.rst", "api\\generated\\compas_timber.fabrication.Lap.copy.rst", "api\\generated\\compas_timber.fabrication.Lap.from_beam_and_beam.rst", "api\\generated\\compas_timber.fabrication.Lap.from_json.rst", "api\\generated\\compas_timber.fabrication.Lap.from_jsonstring.rst", "api\\generated\\compas_timber.fabrication.Lap.from_plane_and_beam.rst", "api\\generated\\compas_timber.fabrication.Lap.sha256.rst", "api\\generated\\compas_timber.fabrication.Lap.to_json.rst", "api\\generated\\compas_timber.fabrication.Lap.to_jsonstring.rst", "api\\generated\\compas_timber.fabrication.Lap.validate_data.rst", "api\\generated\\compas_timber.fabrication.Lap.volume_from_params_and_beam.rst", "api\\generated\\compas_timber.fabrication.Mortise.rst", "api\\generated\\compas_timber.fabrication.Mortise.ToString.rst", "api\\generated\\compas_timber.fabrication.Mortise.add_subprocessing.rst", "api\\generated\\compas_timber.fabrication.Mortise.apply.rst", "api\\generated\\compas_timber.fabrication.Mortise.copy.rst", "api\\generated\\compas_timber.fabrication.Mortise.frame_from_params_and_beam.rst", "api\\generated\\compas_timber.fabrication.Mortise.from_frame_and_beam.rst", "api\\generated\\compas_timber.fabrication.Mortise.from_json.rst", "api\\generated\\compas_timber.fabrication.Mortise.from_jsonstring.rst", "api\\generated\\compas_timber.fabrication.Mortise.sha256.rst", "api\\generated\\compas_timber.fabrication.Mortise.to_json.rst", "api\\generated\\compas_timber.fabrication.Mortise.to_jsonstring.rst", "api\\generated\\compas_timber.fabrication.Mortise.validate_data.rst", "api\\generated\\compas_timber.fabrication.Mortise.volume_from_params_and_beam.rst", "api\\generated\\compas_timber.fabrication.OrientationType.rst", "api\\generated\\compas_timber.fabrication.Slot.rst", "api\\generated\\compas_timber.fabrication.Slot.ToString.rst", "api\\generated\\compas_timber.fabrication.Slot.add_subprocessing.rst", "api\\generated\\compas_timber.fabrication.Slot.apply.rst", "api\\generated\\compas_timber.fabrication.Slot.copy.rst", "api\\generated\\compas_timber.fabrication.Slot.from_json.rst", "api\\generated\\compas_timber.fabrication.Slot.from_jsonstring.rst", "api\\generated\\compas_timber.fabrication.Slot.from_plane_and_beam.rst", "api\\generated\\compas_timber.fabrication.Slot.sha256.rst", "api\\generated\\compas_timber.fabrication.Slot.to_json.rst", "api\\generated\\compas_timber.fabrication.Slot.to_jsonstring.rst", "api\\generated\\compas_timber.fabrication.Slot.validate_data.rst", "api\\generated\\compas_timber.fabrication.StepJoint.rst", "api\\generated\\compas_timber.fabrication.StepJoint.ToString.rst", "api\\generated\\compas_timber.fabrication.StepJoint.add_subprocessing.rst", "api\\generated\\compas_timber.fabrication.StepJoint.add_tenon.rst", "api\\generated\\compas_timber.fabrication.StepJoint.apply.rst", "api\\generated\\compas_timber.fabrication.StepJoint.copy.rst", "api\\generated\\compas_timber.fabrication.StepJoint.from_json.rst", "api\\generated\\compas_timber.fabrication.StepJoint.from_jsonstring.rst", "api\\generated\\compas_timber.fabrication.StepJoint.from_plane_and_beam.rst", "api\\generated\\compas_timber.fabrication.StepJoint.planes_from_params_and_beam.rst", "api\\generated\\compas_timber.fabrication.StepJoint.sha256.rst", "api\\generated\\compas_timber.fabrication.StepJoint.tenon_volume_from_params_and_beam.rst", "api\\generated\\compas_timber.fabrication.StepJoint.to_json.rst", "api\\generated\\compas_timber.fabrication.StepJoint.to_jsonstring.rst", "api\\generated\\compas_timber.fabrication.StepJoint.validate_data.rst", "api\\generated\\compas_timber.fabrication.StepJointNotch.rst", "api\\generated\\compas_timber.fabrication.StepJointNotch.ToString.rst", "api\\generated\\compas_timber.fabrication.StepJointNotch.add_mortise.rst", "api\\generated\\compas_timber.fabrication.StepJointNotch.add_subprocessing.rst", "api\\generated\\compas_timber.fabrication.StepJointNotch.apply.rst", "api\\generated\\compas_timber.fabrication.StepJointNotch.copy.rst", "api\\generated\\compas_timber.fabrication.StepJointNotch.from_json.rst", "api\\generated\\compas_timber.fabrication.StepJointNotch.from_jsonstring.rst", "api\\generated\\compas_timber.fabrication.StepJointNotch.from_plane_and_beam.rst", "api\\generated\\compas_timber.fabrication.StepJointNotch.mortise_volume_from_params_and_beam.rst", "api\\generated\\compas_timber.fabrication.StepJointNotch.planes_from_params_and_beam.rst", "api\\generated\\compas_timber.fabrication.StepJointNotch.sha256.rst", "api\\generated\\compas_timber.fabrication.StepJointNotch.to_json.rst", "api\\generated\\compas_timber.fabrication.StepJointNotch.to_jsonstring.rst", "api\\generated\\compas_timber.fabrication.StepJointNotch.validate_data.rst", "api\\generated\\compas_timber.fabrication.Tenon.rst", "api\\generated\\compas_timber.fabrication.Tenon.ToString.rst", "api\\generated\\compas_timber.fabrication.Tenon.add_subprocessing.rst", "api\\generated\\compas_timber.fabrication.Tenon.apply.rst", "api\\generated\\compas_timber.fabrication.Tenon.copy.rst", "api\\generated\\compas_timber.fabrication.Tenon.frame_from_params_and_beam.rst", "api\\generated\\compas_timber.fabrication.Tenon.from_json.rst", "api\\generated\\compas_timber.fabrication.Tenon.from_jsonstring.rst", "api\\generated\\compas_timber.fabrication.Tenon.from_plane_and_beam.rst", "api\\generated\\compas_timber.fabrication.Tenon.sha256.rst", "api\\generated\\compas_timber.fabrication.Tenon.to_json.rst", "api\\generated\\compas_timber.fabrication.Tenon.to_jsonstring.rst", "api\\generated\\compas_timber.fabrication.Tenon.validate_data.rst", "api\\generated\\compas_timber.fabrication.Tenon.volume_from_params_and_beam.rst", "api\\generated\\compas_timber.fabrication.TenonShapeType.rst", "api\\generated\\compas_timber.ghpython.add_gh_param.rst", "api\\generated\\compas_timber.ghpython.clear_gh_params.rst", "api\\generated\\compas_timber.ghpython.get_leaf_subclasses.rst", "api\\generated\\compas_timber.ghpython.item_input_valid.rst", "api\\generated\\compas_timber.ghpython.list_input_valid.rst", "api\\generated\\compas_timber.ghpython.manage_dynamic_params.rst", "api\\generated\\compas_timber.ghpython.rename_gh_input.rst", "api\\generated\\compas_timber.model.TimberModel.rst", "api\\generated\\compas_timber.model.TimberModel.ToString.rst", "api\\generated\\compas_timber.model.TimberModel.add_element.rst", "api\\generated\\compas_timber.model.TimberModel.add_elements.rst", "api\\generated\\compas_timber.model.TimberModel.add_group.rst", "api\\generated\\compas_timber.model.TimberModel.add_group_element.rst", "api\\generated\\compas_timber.model.TimberModel.add_interaction.rst", "api\\generated\\compas_timber.model.TimberModel.add_joint.rst", "api\\generated\\compas_timber.model.TimberModel.add_material.rst", "api\\generated\\compas_timber.model.TimberModel.assign_material.rst", "api\\generated\\compas_timber.model.TimberModel.compute_aabb.rst", "api\\generated\\compas_timber.model.TimberModel.compute_obb.rst", "api\\generated\\compas_timber.model.TimberModel.copy.rst", "api\\generated\\compas_timber.model.TimberModel.element_by_guid.rst", "api\\generated\\compas_timber.model.TimberModel.elements.rst", "api\\generated\\compas_timber.model.TimberModel.elements_connected_by.rst", "api\\generated\\compas_timber.model.TimberModel.from_json.rst", "api\\generated\\compas_timber.model.TimberModel.from_jsonstring.rst", "api\\generated\\compas_timber.model.TimberModel.get_elements_in_group.rst", "api\\generated\\compas_timber.model.TimberModel.has_element.rst", "api\\generated\\compas_timber.model.TimberModel.has_group.rst", "api\\generated\\compas_timber.model.TimberModel.has_interaction.rst", "api\\generated\\compas_timber.model.TimberModel.has_material.rst", "api\\generated\\compas_timber.model.TimberModel.interactions.rst", "api\\generated\\compas_timber.model.TimberModel.materials.rst", "api\\generated\\compas_timber.model.TimberModel.process_joinery.rst", "api\\generated\\compas_timber.model.TimberModel.remove_element.rst", "api\\generated\\compas_timber.model.TimberModel.remove_interaction.rst", "api\\generated\\compas_timber.model.TimberModel.remove_joint.rst", "api\\generated\\compas_timber.model.TimberModel.rotate.rst", "api\\generated\\compas_timber.model.TimberModel.rotated.rst", "api\\generated\\compas_timber.model.TimberModel.scale.rst", "api\\generated\\compas_timber.model.TimberModel.scaled.rst", "api\\generated\\compas_timber.model.TimberModel.set_topologies.rst", "api\\generated\\compas_timber.model.TimberModel.sha256.rst", "api\\generated\\compas_timber.model.TimberModel.to_json.rst", "api\\generated\\compas_timber.model.TimberModel.to_jsonstring.rst", "api\\generated\\compas_timber.model.TimberModel.transform.rst", "api\\generated\\compas_timber.model.TimberModel.transform_numpy.rst", "api\\generated\\compas_timber.model.TimberModel.transformed.rst", "api\\generated\\compas_timber.model.TimberModel.transformed_numpy.rst", "api\\generated\\compas_timber.model.TimberModel.translate.rst", "api\\generated\\compas_timber.model.TimberModel.translated.rst", "api\\generated\\compas_timber.model.TimberModel.validate_data.rst", "api\\generated\\compas_timber.planning.Actor.rst", "api\\generated\\compas_timber.planning.Actor.get_name.rst", "api\\generated\\compas_timber.planning.BuildingPlan.rst", "api\\generated\\compas_timber.planning.BuildingPlan.ToString.rst", "api\\generated\\compas_timber.planning.BuildingPlan.add_step.rst", "api\\generated\\compas_timber.planning.BuildingPlan.copy.rst", "api\\generated\\compas_timber.planning.BuildingPlan.from_json.rst", "api\\generated\\compas_timber.planning.BuildingPlan.from_jsonstring.rst", "api\\generated\\compas_timber.planning.BuildingPlan.sha256.rst", "api\\generated\\compas_timber.planning.BuildingPlan.to_json.rst", "api\\generated\\compas_timber.planning.BuildingPlan.to_jsonstring.rst", "api\\generated\\compas_timber.planning.BuildingPlan.validate_data.rst", "api\\generated\\compas_timber.planning.BuildingPlanParser.rst", "api\\generated\\compas_timber.planning.BuildingPlanParser.parse.rst", "api\\generated\\compas_timber.planning.BuildingPlanParser.serialize.rst", "api\\generated\\compas_timber.planning.Instruction.rst", "api\\generated\\compas_timber.planning.Instruction.ToString.rst", "api\\generated\\compas_timber.planning.Instruction.copy.rst", "api\\generated\\compas_timber.planning.Instruction.from_json.rst", "api\\generated\\compas_timber.planning.Instruction.from_jsonstring.rst", "api\\generated\\compas_timber.planning.Instruction.sha256.rst", "api\\generated\\compas_timber.planning.Instruction.to_json.rst", "api\\generated\\compas_timber.planning.Instruction.to_jsonstring.rst", "api\\generated\\compas_timber.planning.Instruction.transform.rst", "api\\generated\\compas_timber.planning.Instruction.validate_data.rst", "api\\generated\\compas_timber.planning.LinearDimension.rst", "api\\generated\\compas_timber.planning.LinearDimension.ToString.rst", "api\\generated\\compas_timber.planning.LinearDimension.copy.rst", "api\\generated\\compas_timber.planning.LinearDimension.from_json.rst", "api\\generated\\compas_timber.planning.LinearDimension.from_jsonstring.rst", "api\\generated\\compas_timber.planning.LinearDimension.sha256.rst", "api\\generated\\compas_timber.planning.LinearDimension.to_json.rst", "api\\generated\\compas_timber.planning.LinearDimension.to_jsonstring.rst", "api\\generated\\compas_timber.planning.LinearDimension.transform.rst", "api\\generated\\compas_timber.planning.LinearDimension.validate_data.rst", "api\\generated\\compas_timber.planning.Model3d.rst", "api\\generated\\compas_timber.planning.Model3d.ToString.rst", "api\\generated\\compas_timber.planning.Model3d.copy.rst", "api\\generated\\compas_timber.planning.Model3d.from_json.rst", "api\\generated\\compas_timber.planning.Model3d.from_jsonstring.rst", "api\\generated\\compas_timber.planning.Model3d.sha256.rst", "api\\generated\\compas_timber.planning.Model3d.to_json.rst", "api\\generated\\compas_timber.planning.Model3d.to_jsonstring.rst", "api\\generated\\compas_timber.planning.Model3d.transform.rst", "api\\generated\\compas_timber.planning.Model3d.validate_data.rst", "api\\generated\\compas_timber.planning.SimpleSequenceGenerator.rst", "api\\generated\\compas_timber.planning.Step.rst", "api\\generated\\compas_timber.planning.Step.ToString.rst", "api\\generated\\compas_timber.planning.Step.copy.rst", "api\\generated\\compas_timber.planning.Step.from_json.rst", "api\\generated\\compas_timber.planning.Step.from_jsonstring.rst", "api\\generated\\compas_timber.planning.Step.sha256.rst", "api\\generated\\compas_timber.planning.Step.to_json.rst", "api\\generated\\compas_timber.planning.Step.to_jsonstring.rst", "api\\generated\\compas_timber.planning.Step.transform.rst", "api\\generated\\compas_timber.planning.Step.validate_data.rst", "api\\generated\\compas_timber.planning.Text3d.rst", "api\\generated\\compas_timber.planning.Text3d.ToString.rst", "api\\generated\\compas_timber.planning.Text3d.copy.rst", "api\\generated\\compas_timber.planning.Text3d.from_json.rst", "api\\generated\\compas_timber.planning.Text3d.from_jsonstring.rst", "api\\generated\\compas_timber.planning.Text3d.sha256.rst", "api\\generated\\compas_timber.planning.Text3d.to_json.rst", "api\\generated\\compas_timber.planning.Text3d.to_jsonstring.rst", "api\\generated\\compas_timber.planning.Text3d.transform.rst", "api\\generated\\compas_timber.planning.Text3d.validate_data.rst", "api\\generated\\compas_timber.rhino.find_neighboring_beams.rst", "citing.rst", "examples.rst", "examples\\create_joint.rst", "index.rst", "installation.rst", "license.rst", "tutorials.rst", "tutorials\\BTLx_contribution_guide.rst", "tutorials\\grasshopper\\attributes.rst", "tutorials\\grasshopper\\beams.rst", "tutorials\\grasshopper\\design.rst", "tutorials\\grasshopper\\examples.rst", "tutorials\\grasshopper\\fabrication.rst", "tutorials\\grasshopper\\features.rst", "tutorials\\grasshopper\\joint_rules.rst", "tutorials\\grasshopper\\model.rst", "tutorials\\grasshopper\\show.rst", "tutorials\\grasshopper\\utils.rst", "tutorials\\grasshopper\\workflow.rst"], "indexentries": {"actor (class in compas_timber.planning)": [[699, "compas_timber.planning.Actor", false]], "add_blank_extension() (compas_timber.elements.beam method)": [[345, "compas_timber.elements.Beam.add_blank_extension", false]], "add_element() (compas_timber.model.timbermodel method)": [[657, "compas_timber.model.TimberModel.add_element", false]], "add_elements() (compas_timber.model.timbermodel method)": [[658, "compas_timber.model.TimberModel.add_elements", false]], "add_extensions() (compas_timber.connections.ballnodejoint method)": [[12, "compas_timber.connections.BallNodeJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.joint method)": [[32, "compas_timber.connections.Joint.add_extensions", false]], "add_extensions() (compas_timber.connections.lapjoint method)": [[123, "compas_timber.connections.LapJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.lbuttjoint method)": [[51, "compas_timber.connections.LButtJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.lfrenchridgelapjoint method)": [[69, "compas_timber.connections.LFrenchRidgeLapJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.lhalflapjoint method)": [[86, "compas_timber.connections.LHalfLapJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.lmiterjoint method)": [[105, "compas_timber.connections.LMiterJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.nulljoint method)": [[142, "compas_timber.connections.NullJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.tbirdsmouthjoint method)": [[159, "compas_timber.connections.TBirdsmouthJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.tbuttjoint method)": [[176, "compas_timber.connections.TButtJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.tdovetailjoint method)": [[193, "compas_timber.connections.TDovetailJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.tenonmortisejoint method)": [[248, "compas_timber.connections.TenonMortiseJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.thalflapjoint method)": [[211, "compas_timber.connections.THalfLapJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.tstepjoint method)": [[230, "compas_timber.connections.TStepJoint.add_extensions", false]], "add_extensions() (compas_timber.connections.xhalflapjoint method)": [[266, "compas_timber.connections.XHalfLapJoint.add_extensions", false]], "add_fastener_error() (compas_timber.design.debuginfomation method)": [[294, "compas_timber.design.DebugInfomation.add_fastener_error", false]], "add_feature() (compas_timber.elements.beam method)": [[346, "compas_timber.elements.Beam.add_feature", false]], "add_feature() (compas_timber.elements.fastener method)": [[373, "compas_timber.elements.Fastener.add_feature", false]], "add_feature() (compas_timber.elements.plate method)": [[401, "compas_timber.elements.Plate.add_feature", false]], "add_feature() (compas_timber.elements.timberelement method)": [[422, "compas_timber.elements.TimberElement.add_feature", false]], "add_feature() (compas_timber.elements.wall method)": [[440, "compas_timber.elements.Wall.add_feature", false]], "add_feature_error() (compas_timber.design.debuginfomation method)": [[295, "compas_timber.design.DebugInfomation.add_feature_error", false]], "add_features() (compas_timber.connections.ballnodejoint method)": [[13, "compas_timber.connections.BallNodeJoint.add_features", false]], "add_features() (compas_timber.connections.joint method)": [[33, "compas_timber.connections.Joint.add_features", false]], "add_features() (compas_timber.connections.lapjoint method)": [[124, "compas_timber.connections.LapJoint.add_features", false]], "add_features() (compas_timber.connections.lbuttjoint method)": [[52, "compas_timber.connections.LButtJoint.add_features", false]], "add_features() (compas_timber.connections.lfrenchridgelapjoint method)": [[70, "compas_timber.connections.LFrenchRidgeLapJoint.add_features", false]], "add_features() (compas_timber.connections.lhalflapjoint method)": [[87, "compas_timber.connections.LHalfLapJoint.add_features", false]], "add_features() (compas_timber.connections.lmiterjoint method)": [[106, "compas_timber.connections.LMiterJoint.add_features", false]], "add_features() (compas_timber.connections.nulljoint method)": [[143, "compas_timber.connections.NullJoint.add_features", false]], "add_features() (compas_timber.connections.tbirdsmouthjoint method)": [[160, "compas_timber.connections.TBirdsmouthJoint.add_features", false]], "add_features() (compas_timber.connections.tbuttjoint method)": [[177, "compas_timber.connections.TButtJoint.add_features", false]], "add_features() (compas_timber.connections.tdovetailjoint method)": [[194, "compas_timber.connections.TDovetailJoint.add_features", false]], "add_features() (compas_timber.connections.tenonmortisejoint method)": [[249, "compas_timber.connections.TenonMortiseJoint.add_features", false]], "add_features() (compas_timber.connections.thalflapjoint method)": [[212, "compas_timber.connections.THalfLapJoint.add_features", false]], "add_features() (compas_timber.connections.tstepjoint method)": [[231, "compas_timber.connections.TStepJoint.add_features", false]], "add_features() (compas_timber.connections.xhalflapjoint method)": [[267, "compas_timber.connections.XHalfLapJoint.add_features", false]], "add_features() (compas_timber.elements.beam method)": [[347, "compas_timber.elements.Beam.add_features", false]], "add_features() (compas_timber.elements.plate method)": [[402, "compas_timber.elements.Plate.add_features", false]], "add_gh_param() (in module compas_timber.ghpython)": [[648, "compas_timber.ghpython.add_gh_param", false]], "add_group() (compas_timber.model.timbermodel method)": [[659, "compas_timber.model.TimberModel.add_group", false]], "add_group_element() (compas_timber.model.timbermodel method)": [[660, "compas_timber.model.TimberModel.add_group_element", false]], "add_interaction() (compas_timber.model.timbermodel method)": [[661, "compas_timber.model.TimberModel.add_interaction", false]], "add_joint() (compas_timber.model.timbermodel method)": [[662, "compas_timber.model.TimberModel.add_joint", false]], "add_joint_error() (compas_timber.design.debuginfomation method)": [[296, "compas_timber.design.DebugInfomation.add_joint_error", false]], "add_material() (compas_timber.model.timbermodel method)": [[663, "compas_timber.model.TimberModel.add_material", false]], "add_mortise() (compas_timber.fabrication.stepjointnotch method)": [[620, "compas_timber.fabrication.StepJointNotch.add_mortise", false]], "add_step() (compas_timber.planning.buildingplan method)": [[703, "compas_timber.planning.BuildingPlan.add_step", false]], "add_subprocessing() (compas_timber.fabrication.btlxprocessing method)": [[465, "compas_timber.fabrication.BTLxProcessing.add_subprocessing", false]], "add_subprocessing() (compas_timber.fabrication.doublecut method)": [[478, "compas_timber.fabrication.DoubleCut.add_subprocessing", false]], "add_subprocessing() (compas_timber.fabrication.dovetailmortise method)": [[491, "compas_timber.fabrication.DovetailMortise.add_subprocessing", false]], "add_subprocessing() (compas_timber.fabrication.dovetailtenon method)": [[507, "compas_timber.fabrication.DovetailTenon.add_subprocessing", false]], "add_subprocessing() (compas_timber.fabrication.drilling method)": [[523, "compas_timber.fabrication.Drilling.add_subprocessing", false]], "add_subprocessing() (compas_timber.fabrication.frenchridgelap method)": [[537, "compas_timber.fabrication.FrenchRidgeLap.add_subprocessing", false]], "add_subprocessing() (compas_timber.fabrication.jackraftercut method)": [[551, "compas_timber.fabrication.JackRafterCut.add_subprocessing", false]], "add_subprocessing() (compas_timber.fabrication.lap method)": [[564, "compas_timber.fabrication.Lap.add_subprocessing", false]], "add_subprocessing() (compas_timber.fabrication.mortise method)": [[578, "compas_timber.fabrication.Mortise.add_subprocessing", false]], "add_subprocessing() (compas_timber.fabrication.slot method)": [[593, "compas_timber.fabrication.Slot.add_subprocessing", false]], "add_subprocessing() (compas_timber.fabrication.stepjoint method)": [[605, "compas_timber.fabrication.StepJoint.add_subprocessing", false]], "add_subprocessing() (compas_timber.fabrication.stepjointnotch method)": [[621, "compas_timber.fabrication.StepJointNotch.add_subprocessing", false]], "add_subprocessing() (compas_timber.fabrication.tenon method)": [[635, "compas_timber.fabrication.Tenon.add_subprocessing", false]], "add_tenon() (compas_timber.fabrication.stepjoint method)": [[606, "compas_timber.fabrication.StepJoint.add_tenon", false]], "apply() (compas_timber.fabrication.doublecut method)": [[479, "compas_timber.fabrication.DoubleCut.apply", false]], "apply() (compas_timber.fabrication.dovetailmortise method)": [[492, "compas_timber.fabrication.DovetailMortise.apply", false]], "apply() (compas_timber.fabrication.dovetailtenon method)": [[508, "compas_timber.fabrication.DovetailTenon.apply", false]], "apply() (compas_timber.fabrication.drilling method)": [[524, "compas_timber.fabrication.Drilling.apply", false]], "apply() (compas_timber.fabrication.frenchridgelap method)": [[538, "compas_timber.fabrication.FrenchRidgeLap.apply", false]], "apply() (compas_timber.fabrication.jackraftercut method)": [[552, "compas_timber.fabrication.JackRafterCut.apply", false]], "apply() (compas_timber.fabrication.lap method)": [[565, "compas_timber.fabrication.Lap.apply", false]], "apply() (compas_timber.fabrication.mortise method)": [[579, "compas_timber.fabrication.Mortise.apply", false]], "apply() (compas_timber.fabrication.slot method)": [[594, "compas_timber.fabrication.Slot.apply", false]], "apply() (compas_timber.fabrication.stepjoint method)": [[607, "compas_timber.fabrication.StepJoint.apply", false]], "apply() (compas_timber.fabrication.stepjointnotch method)": [[622, "compas_timber.fabrication.StepJointNotch.apply", false]], "apply() (compas_timber.fabrication.tenon method)": [[636, "compas_timber.fabrication.Tenon.apply", false]], "assign_material() (compas_timber.model.timbermodel method)": [[664, "compas_timber.model.TimberModel.assign_material", false]], "ballnodejoint (class in compas_timber.connections)": [[10, "compas_timber.connections.BallNodeJoint", false]], "beam (class in compas_timber.elements)": [[343, "compas_timber.elements.Beam", false]], "beam_category_names() (compas_timber.design.surfacemodel class method)": [[317, "compas_timber.design.SurfaceModel.beam_category_names", false]], "beamjoinningerror": [[457, "compas_timber.errors.BeamJoinningError", false]], "btlxpart (class in compas_timber.fabrication)": [[460, "compas_timber.fabrication.BTLxPart", false]], "btlxprocessing (class in compas_timber.fabrication)": [[463, "compas_timber.fabrication.BTLxProcessing", false]], "btlxwriter (class in compas_timber.fabrication)": [[473, "compas_timber.fabrication.BTLxWriter", false]], "buildingplan (class in compas_timber.planning)": [[701, "compas_timber.planning.BuildingPlan", false]], "buildingplanparser (class in compas_timber.planning)": [[711, "compas_timber.planning.BuildingPlanParser", false]], "categoryrule (class in compas_timber.design)": [[284, "compas_timber.design.CategoryRule", false]], "check_elements_compatibility() (compas_timber.connections.ballnodejoint method)": [[14, "compas_timber.connections.BallNodeJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.joint method)": [[34, "compas_timber.connections.Joint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.lapjoint method)": [[125, "compas_timber.connections.LapJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.lbuttjoint method)": [[53, "compas_timber.connections.LButtJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.lfrenchridgelapjoint method)": [[71, "compas_timber.connections.LFrenchRidgeLapJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.lhalflapjoint method)": [[88, "compas_timber.connections.LHalfLapJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.lmiterjoint method)": [[107, "compas_timber.connections.LMiterJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.nulljoint method)": [[144, "compas_timber.connections.NullJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.tbirdsmouthjoint method)": [[161, "compas_timber.connections.TBirdsmouthJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.tbuttjoint method)": [[178, "compas_timber.connections.TButtJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.tdovetailjoint method)": [[195, "compas_timber.connections.TDovetailJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.tenonmortisejoint method)": [[250, "compas_timber.connections.TenonMortiseJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.thalflapjoint method)": [[213, "compas_timber.connections.THalfLapJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.tstepjoint method)": [[232, "compas_timber.connections.TStepJoint.check_elements_compatibility", false]], "check_elements_compatibility() (compas_timber.connections.xhalflapjoint method)": [[268, "compas_timber.connections.XHalfLapJoint.check_elements_compatibility", false]], "clear_gh_params() (in module compas_timber.ghpython)": [[649, "compas_timber.ghpython.clear_gh_params", false]], "comply() (compas_timber.design.categoryrule method)": [[286, "compas_timber.design.CategoryRule.comply", false]], "comply() (compas_timber.design.directrule method)": [[299, "compas_timber.design.DirectRule.comply", false]], "comply() (compas_timber.design.jointrule method)": [[311, "compas_timber.design.JointRule.comply", false]], "comply() (compas_timber.design.topologyrule method)": [[336, "compas_timber.design.TopologyRule.comply", false]], "compute_aabb() (compas_timber.elements.beam method)": [[348, "compas_timber.elements.Beam.compute_aabb", false]], "compute_aabb() (compas_timber.elements.fastener method)": [[374, "compas_timber.elements.Fastener.compute_aabb", false]], "compute_aabb() (compas_timber.elements.plate method)": [[403, "compas_timber.elements.Plate.compute_aabb", false]], "compute_aabb() (compas_timber.elements.timberelement method)": [[423, "compas_timber.elements.TimberElement.compute_aabb", false]], "compute_aabb() (compas_timber.elements.wall method)": [[441, "compas_timber.elements.Wall.compute_aabb", false]], "compute_aabb() (compas_timber.model.timbermodel method)": [[665, "compas_timber.model.TimberModel.compute_aabb", false]], "compute_collision_mesh() (compas_timber.elements.beam method)": [[349, "compas_timber.elements.Beam.compute_collision_mesh", false]], "compute_collision_mesh() (compas_timber.elements.fastener method)": [[375, "compas_timber.elements.Fastener.compute_collision_mesh", false]], "compute_collision_mesh() (compas_timber.elements.plate method)": [[404, "compas_timber.elements.Plate.compute_collision_mesh", false]], "compute_collision_mesh() (compas_timber.elements.timberelement method)": [[424, "compas_timber.elements.TimberElement.compute_collision_mesh", false]], "compute_collision_mesh() (compas_timber.elements.wall method)": [[442, "compas_timber.elements.Wall.compute_collision_mesh", false]], "compute_geometry() (compas_timber.elements.beam method)": [[350, "compas_timber.elements.Beam.compute_geometry", false]], "compute_geometry() (compas_timber.elements.fastener method)": [[376, "compas_timber.elements.Fastener.compute_geometry", false]], "compute_geometry() (compas_timber.elements.plate method)": [[405, "compas_timber.elements.Plate.compute_geometry", false]], "compute_geometry() (compas_timber.elements.timberelement method)": [[425, "compas_timber.elements.TimberElement.compute_geometry", false]], "compute_geometry() (compas_timber.elements.wall method)": [[443, "compas_timber.elements.Wall.compute_geometry", false]], "compute_obb() (compas_timber.elements.beam method)": [[351, "compas_timber.elements.Beam.compute_obb", false]], "compute_obb() (compas_timber.elements.fastener method)": [[377, "compas_timber.elements.Fastener.compute_obb", false]], "compute_obb() (compas_timber.elements.plate method)": [[406, "compas_timber.elements.Plate.compute_obb", false]], "compute_obb() (compas_timber.elements.timberelement method)": [[426, "compas_timber.elements.TimberElement.compute_obb", false]], "compute_obb() (compas_timber.elements.wall method)": [[444, "compas_timber.elements.Wall.compute_obb", false]], "compute_obb() (compas_timber.model.timbermodel method)": [[666, "compas_timber.model.TimberModel.compute_obb", false]], "compute_worldtransformation() (compas_timber.elements.beam method)": [[352, "compas_timber.elements.Beam.compute_worldtransformation", false]], "compute_worldtransformation() (compas_timber.elements.fastener method)": [[378, "compas_timber.elements.Fastener.compute_worldtransformation", false]], "compute_worldtransformation() (compas_timber.elements.plate method)": [[407, "compas_timber.elements.Plate.compute_worldtransformation", false]], "compute_worldtransformation() (compas_timber.elements.timberelement method)": [[427, "compas_timber.elements.TimberElement.compute_worldtransformation", false]], "compute_worldtransformation() (compas_timber.elements.wall method)": [[445, "compas_timber.elements.Wall.compute_worldtransformation", false]], "connectionsolver (class in compas_timber.connections)": [[27, "compas_timber.connections.ConnectionSolver", false]], "copy() (compas_timber.connections.ballnodejoint method)": [[15, "compas_timber.connections.BallNodeJoint.copy", false]], "copy() (compas_timber.connections.joint method)": [[35, "compas_timber.connections.Joint.copy", false]], "copy() (compas_timber.connections.lapjoint method)": [[126, "compas_timber.connections.LapJoint.copy", false]], "copy() (compas_timber.connections.lbuttjoint method)": [[54, "compas_timber.connections.LButtJoint.copy", false]], "copy() (compas_timber.connections.lfrenchridgelapjoint method)": [[72, "compas_timber.connections.LFrenchRidgeLapJoint.copy", false]], "copy() (compas_timber.connections.lhalflapjoint method)": [[89, "compas_timber.connections.LHalfLapJoint.copy", false]], "copy() (compas_timber.connections.lmiterjoint method)": [[108, "compas_timber.connections.LMiterJoint.copy", false]], "copy() (compas_timber.connections.nulljoint method)": [[145, "compas_timber.connections.NullJoint.copy", false]], "copy() (compas_timber.connections.tbirdsmouthjoint method)": [[162, "compas_timber.connections.TBirdsmouthJoint.copy", false]], "copy() (compas_timber.connections.tbuttjoint method)": [[179, "compas_timber.connections.TButtJoint.copy", false]], "copy() (compas_timber.connections.tdovetailjoint method)": [[196, "compas_timber.connections.TDovetailJoint.copy", false]], "copy() (compas_timber.connections.tenonmortisejoint method)": [[251, "compas_timber.connections.TenonMortiseJoint.copy", false]], "copy() (compas_timber.connections.thalflapjoint method)": [[214, "compas_timber.connections.THalfLapJoint.copy", false]], "copy() (compas_timber.connections.tstepjoint method)": [[233, "compas_timber.connections.TStepJoint.copy", false]], "copy() (compas_timber.connections.xhalflapjoint method)": [[269, "compas_timber.connections.XHalfLapJoint.copy", false]], "copy() (compas_timber.elements.beam method)": [[353, "compas_timber.elements.Beam.copy", false]], "copy() (compas_timber.elements.fastener method)": [[379, "compas_timber.elements.Fastener.copy", false]], "copy() (compas_timber.elements.fastenertimberinterface method)": [[391, "compas_timber.elements.FastenerTimberInterface.copy", false]], "copy() (compas_timber.elements.plate method)": [[408, "compas_timber.elements.Plate.copy", false]], "copy() (compas_timber.elements.timberelement method)": [[428, "compas_timber.elements.TimberElement.copy", false]], "copy() (compas_timber.elements.wall method)": [[446, "compas_timber.elements.Wall.copy", false]], "copy() (compas_timber.fabrication.btlxprocessing method)": [[466, "compas_timber.fabrication.BTLxProcessing.copy", false]], "copy() (compas_timber.fabrication.doublecut method)": [[480, "compas_timber.fabrication.DoubleCut.copy", false]], "copy() (compas_timber.fabrication.dovetailmortise method)": [[493, "compas_timber.fabrication.DovetailMortise.copy", false]], "copy() (compas_timber.fabrication.dovetailtenon method)": [[509, "compas_timber.fabrication.DovetailTenon.copy", false]], "copy() (compas_timber.fabrication.drilling method)": [[525, "compas_timber.fabrication.Drilling.copy", false]], "copy() (compas_timber.fabrication.frenchridgelap method)": [[539, "compas_timber.fabrication.FrenchRidgeLap.copy", false]], "copy() (compas_timber.fabrication.jackraftercut method)": [[553, "compas_timber.fabrication.JackRafterCut.copy", false]], "copy() (compas_timber.fabrication.lap method)": [[566, "compas_timber.fabrication.Lap.copy", false]], "copy() (compas_timber.fabrication.mortise method)": [[580, "compas_timber.fabrication.Mortise.copy", false]], "copy() (compas_timber.fabrication.slot method)": [[595, "compas_timber.fabrication.Slot.copy", false]], "copy() (compas_timber.fabrication.stepjoint method)": [[608, "compas_timber.fabrication.StepJoint.copy", false]], "copy() (compas_timber.fabrication.stepjointnotch method)": [[623, "compas_timber.fabrication.StepJointNotch.copy", false]], "copy() (compas_timber.fabrication.tenon method)": [[637, "compas_timber.fabrication.Tenon.copy", false]], "copy() (compas_timber.model.timbermodel method)": [[667, "compas_timber.model.TimberModel.copy", false]], "copy() (compas_timber.planning.buildingplan method)": [[704, "compas_timber.planning.BuildingPlan.copy", false]], "copy() (compas_timber.planning.instruction method)": [[716, "compas_timber.planning.Instruction.copy", false]], "copy() (compas_timber.planning.lineardimension method)": [[726, "compas_timber.planning.LinearDimension.copy", false]], "copy() (compas_timber.planning.model3d method)": [[736, "compas_timber.planning.Model3d.copy", false]], "copy() (compas_timber.planning.step method)": [[747, "compas_timber.planning.Step.copy", false]], "copy() (compas_timber.planning.text3d method)": [[757, "compas_timber.planning.Text3d.copy", false]], "create() (compas_timber.connections.ballnodejoint class method)": [[16, "compas_timber.connections.BallNodeJoint.create", false]], "create() (compas_timber.connections.joint class method)": [[36, "compas_timber.connections.Joint.create", false]], "create() (compas_timber.connections.lapjoint class method)": [[127, "compas_timber.connections.LapJoint.create", false]], "create() (compas_timber.connections.lbuttjoint class method)": [[55, "compas_timber.connections.LButtJoint.create", false]], "create() (compas_timber.connections.lfrenchridgelapjoint class method)": [[73, "compas_timber.connections.LFrenchRidgeLapJoint.create", false]], "create() (compas_timber.connections.lhalflapjoint class method)": [[90, "compas_timber.connections.LHalfLapJoint.create", false]], "create() (compas_timber.connections.lmiterjoint class method)": [[109, "compas_timber.connections.LMiterJoint.create", false]], "create() (compas_timber.connections.nulljoint class method)": [[146, "compas_timber.connections.NullJoint.create", false]], "create() (compas_timber.connections.tbirdsmouthjoint class method)": [[163, "compas_timber.connections.TBirdsmouthJoint.create", false]], "create() (compas_timber.connections.tbuttjoint class method)": [[180, "compas_timber.connections.TButtJoint.create", false]], "create() (compas_timber.connections.tdovetailjoint class method)": [[197, "compas_timber.connections.TDovetailJoint.create", false]], "create() (compas_timber.connections.tenonmortisejoint class method)": [[252, "compas_timber.connections.TenonMortiseJoint.create", false]], "create() (compas_timber.connections.thalflapjoint class method)": [[215, "compas_timber.connections.THalfLapJoint.create", false]], "create() (compas_timber.connections.tstepjoint class method)": [[234, "compas_timber.connections.TStepJoint.create", false]], "create() (compas_timber.connections.xhalflapjoint class method)": [[270, "compas_timber.connections.XHalfLapJoint.create", false]], "create_model() (compas_timber.design.surfacemodel method)": [[318, "compas_timber.design.SurfaceModel.create_model", false]], "cull_overlaps() (compas_timber.design.surfacemodel method)": [[319, "compas_timber.design.SurfaceModel.cull_overlaps", false]], "cylinder_from_params_and_beam() (compas_timber.fabrication.drilling method)": [[526, "compas_timber.fabrication.Drilling.cylinder_from_params_and_beam", false]], "debuginfomation (class in compas_timber.design)": [[292, "compas_timber.design.DebugInfomation", false]], "define_dovetail_tool() (compas_timber.connections.tdovetailjoint method)": [[198, "compas_timber.connections.TDovetailJoint.define_dovetail_tool", false]], "define_dovetail_tool() (compas_timber.fabrication.dovetailmortise class method)": [[494, "compas_timber.fabrication.DovetailMortise.define_dovetail_tool", false]], "define_dovetail_tool() (compas_timber.fabrication.dovetailtenon class method)": [[510, "compas_timber.fabrication.DovetailTenon.define_dovetail_tool", false]], "directrule (class in compas_timber.design)": [[297, "compas_timber.design.DirectRule", false]], "distance_between_elements() (compas_timber.design.surfacemodel method)": [[320, "compas_timber.design.SurfaceModel.distance_between_elements", false]], "doublecut (class in compas_timber.fabrication)": [[476, "compas_timber.fabrication.DoubleCut", false]], "dovetail_cutting_frames_from_params_and_beam() (compas_timber.fabrication.dovetailmortise method)": [[495, "compas_timber.fabrication.DovetailMortise.dovetail_cutting_frames_from_params_and_beam", false]], "dovetail_cutting_frames_from_params_and_beam() (compas_timber.fabrication.dovetailtenon method)": [[511, "compas_timber.fabrication.DovetailTenon.dovetail_cutting_frames_from_params_and_beam", false]], "dovetail_volume_from_params_and_beam() (compas_timber.fabrication.dovetailmortise method)": [[496, "compas_timber.fabrication.DovetailMortise.dovetail_volume_from_params_and_beam", false]], "dovetail_volume_from_params_and_beam() (compas_timber.fabrication.dovetailtenon method)": [[512, "compas_timber.fabrication.DovetailTenon.dovetail_volume_from_params_and_beam", false]], "dovetailmortise (class in compas_timber.fabrication)": [[489, "compas_timber.fabrication.DovetailMortise", false]], "dovetailtenon (class in compas_timber.fabrication)": [[505, "compas_timber.fabrication.DovetailTenon", false]], "drilling (class in compas_timber.fabrication)": [[521, "compas_timber.fabrication.Drilling", false]], "edgepositiontype (class in compas_timber.fabrication)": [[534, "compas_timber.fabrication.EdgePositionType", false]], "element_by_guid() (compas_timber.model.timbermodel method)": [[668, "compas_timber.model.TimberModel.element_by_guid", false]], "element_count_complies() (compas_timber.connections.ballnodejoint class method)": [[17, "compas_timber.connections.BallNodeJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.joint class method)": [[37, "compas_timber.connections.Joint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.lapjoint class method)": [[128, "compas_timber.connections.LapJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.lbuttjoint class method)": [[56, "compas_timber.connections.LButtJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.lfrenchridgelapjoint class method)": [[74, "compas_timber.connections.LFrenchRidgeLapJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.lhalflapjoint class method)": [[91, "compas_timber.connections.LHalfLapJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.lmiterjoint class method)": [[110, "compas_timber.connections.LMiterJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.nulljoint class method)": [[147, "compas_timber.connections.NullJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.tbirdsmouthjoint class method)": [[164, "compas_timber.connections.TBirdsmouthJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.tbuttjoint class method)": [[181, "compas_timber.connections.TButtJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.tdovetailjoint class method)": [[199, "compas_timber.connections.TDovetailJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.tenonmortisejoint class method)": [[253, "compas_timber.connections.TenonMortiseJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.thalflapjoint class method)": [[216, "compas_timber.connections.THalfLapJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.tstepjoint class method)": [[235, "compas_timber.connections.TStepJoint.element_count_complies", false]], "element_count_complies() (compas_timber.connections.xhalflapjoint class method)": [[271, "compas_timber.connections.XHalfLapJoint.element_count_complies", false]], "elements() (compas_timber.model.timbermodel method)": [[669, "compas_timber.model.TimberModel.elements", false]], "elements_connected_by() (compas_timber.model.timbermodel method)": [[670, "compas_timber.model.TimberModel.elements_connected_by", false]], "endpoint_closest_to_point() (compas_timber.elements.beam method)": [[354, "compas_timber.elements.Beam.endpoint_closest_to_point", false]], "et_point_vals() (compas_timber.fabrication.btlxpart method)": [[461, "compas_timber.fabrication.BTLxPart.et_point_vals", false]], "extension_to_plane() (compas_timber.elements.beam method)": [[355, "compas_timber.elements.Beam.extension_to_plane", false]], "fastener (class in compas_timber.elements)": [[371, "compas_timber.elements.Fastener", false]], "fastenerapplicationerror": [[458, "compas_timber.errors.FastenerApplicationError", false]], "fastenertimberinterface (class in compas_timber.elements)": [[389, "compas_timber.elements.FastenerTimberInterface", false]], "featureapplicationerror": [[459, "compas_timber.errors.FeatureApplicationError", false]], "featuredefinition (class in compas_timber.design)": [[304, "compas_timber.design.FeatureDefinition", false]], "find_intersecting_pairs() (compas_timber.connections.connectionsolver class method)": [[28, "compas_timber.connections.ConnectionSolver.find_intersecting_pairs", false]], "find_neighboring_beams() (in module compas_timber.connections)": [[283, "compas_timber.connections.find_neighboring_beams", false]], "find_neighboring_beams() (in module compas_timber.rhino)": [[765, "compas_timber.rhino.find_neighboring_beams", false]], "find_topology() (compas_timber.connections.connectionsolver method)": [[29, "compas_timber.connections.ConnectionSolver.find_topology", false]], "frame_from_params_and_beam() (compas_timber.fabrication.dovetailmortise method)": [[497, "compas_timber.fabrication.DovetailMortise.frame_from_params_and_beam", false]], "frame_from_params_and_beam() (compas_timber.fabrication.dovetailtenon method)": [[513, "compas_timber.fabrication.DovetailTenon.frame_from_params_and_beam", false]], "frame_from_params_and_beam() (compas_timber.fabrication.frenchridgelap method)": [[540, "compas_timber.fabrication.FrenchRidgeLap.frame_from_params_and_beam", false]], "frame_from_params_and_beam() (compas_timber.fabrication.mortise method)": [[581, "compas_timber.fabrication.Mortise.frame_from_params_and_beam", false]], "frame_from_params_and_beam() (compas_timber.fabrication.tenon method)": [[638, "compas_timber.fabrication.Tenon.frame_from_params_and_beam", false]], "frenchridgelap (class in compas_timber.fabrication)": [[535, "compas_timber.fabrication.FrenchRidgeLap", false]], "from_beam_and_beam() (compas_timber.fabrication.lap class method)": [[567, "compas_timber.fabrication.Lap.from_beam_and_beam", false]], "from_beam_beam_and_plane() (compas_timber.fabrication.frenchridgelap class method)": [[541, "compas_timber.fabrication.FrenchRidgeLap.from_beam_beam_and_plane", false]], "from_box() (compas_timber.elements.wall class method)": [[447, "compas_timber.elements.Wall.from_box", false]], "from_centerline() (compas_timber.elements.beam class method)": [[356, "compas_timber.elements.Beam.from_centerline", false]], "from_endpoints() (compas_timber.elements.beam class method)": [[357, "compas_timber.elements.Beam.from_endpoints", false]], "from_frame_and_beam() (compas_timber.fabrication.dovetailmortise class method)": [[498, "compas_timber.fabrication.DovetailMortise.from_frame_and_beam", false]], "from_frame_and_beam() (compas_timber.fabrication.mortise class method)": [[582, "compas_timber.fabrication.Mortise.from_frame_and_beam", false]], "from_json() (compas_timber.connections.ballnodejoint class method)": [[18, "compas_timber.connections.BallNodeJoint.from_json", false]], "from_json() (compas_timber.connections.joint class method)": [[38, "compas_timber.connections.Joint.from_json", false]], "from_json() (compas_timber.connections.lapjoint class method)": [[129, "compas_timber.connections.LapJoint.from_json", false]], "from_json() (compas_timber.connections.lbuttjoint class method)": [[57, "compas_timber.connections.LButtJoint.from_json", false]], "from_json() (compas_timber.connections.lfrenchridgelapjoint class method)": [[75, "compas_timber.connections.LFrenchRidgeLapJoint.from_json", false]], "from_json() (compas_timber.connections.lhalflapjoint class method)": [[92, "compas_timber.connections.LHalfLapJoint.from_json", false]], "from_json() (compas_timber.connections.lmiterjoint class method)": [[111, "compas_timber.connections.LMiterJoint.from_json", false]], "from_json() (compas_timber.connections.nulljoint class method)": [[148, "compas_timber.connections.NullJoint.from_json", false]], "from_json() (compas_timber.connections.tbirdsmouthjoint class method)": [[165, "compas_timber.connections.TBirdsmouthJoint.from_json", false]], "from_json() (compas_timber.connections.tbuttjoint class method)": [[182, "compas_timber.connections.TButtJoint.from_json", false]], "from_json() (compas_timber.connections.tdovetailjoint class method)": [[200, "compas_timber.connections.TDovetailJoint.from_json", false]], "from_json() (compas_timber.connections.tenonmortisejoint class method)": [[254, "compas_timber.connections.TenonMortiseJoint.from_json", false]], "from_json() (compas_timber.connections.thalflapjoint class method)": [[217, "compas_timber.connections.THalfLapJoint.from_json", false]], "from_json() (compas_timber.connections.tstepjoint class method)": [[236, "compas_timber.connections.TStepJoint.from_json", false]], "from_json() (compas_timber.connections.xhalflapjoint class method)": [[272, "compas_timber.connections.XHalfLapJoint.from_json", false]], "from_json() (compas_timber.elements.beam class method)": [[358, "compas_timber.elements.Beam.from_json", false]], "from_json() (compas_timber.elements.fastener class method)": [[380, "compas_timber.elements.Fastener.from_json", false]], "from_json() (compas_timber.elements.fastenertimberinterface class method)": [[392, "compas_timber.elements.FastenerTimberInterface.from_json", false]], "from_json() (compas_timber.elements.plate class method)": [[409, "compas_timber.elements.Plate.from_json", false]], "from_json() (compas_timber.elements.timberelement class method)": [[429, "compas_timber.elements.TimberElement.from_json", false]], "from_json() (compas_timber.elements.wall class method)": [[448, "compas_timber.elements.Wall.from_json", false]], "from_json() (compas_timber.fabrication.btlxprocessing class method)": [[467, "compas_timber.fabrication.BTLxProcessing.from_json", false]], "from_json() (compas_timber.fabrication.doublecut class method)": [[481, "compas_timber.fabrication.DoubleCut.from_json", false]], "from_json() (compas_timber.fabrication.dovetailmortise class method)": [[499, "compas_timber.fabrication.DovetailMortise.from_json", false]], "from_json() (compas_timber.fabrication.dovetailtenon class method)": [[514, "compas_timber.fabrication.DovetailTenon.from_json", false]], "from_json() (compas_timber.fabrication.drilling class method)": [[527, "compas_timber.fabrication.Drilling.from_json", false]], "from_json() (compas_timber.fabrication.frenchridgelap class method)": [[542, "compas_timber.fabrication.FrenchRidgeLap.from_json", false]], "from_json() (compas_timber.fabrication.jackraftercut class method)": [[554, "compas_timber.fabrication.JackRafterCut.from_json", false]], "from_json() (compas_timber.fabrication.lap class method)": [[568, "compas_timber.fabrication.Lap.from_json", false]], "from_json() (compas_timber.fabrication.mortise class method)": [[583, "compas_timber.fabrication.Mortise.from_json", false]], "from_json() (compas_timber.fabrication.slot class method)": [[596, "compas_timber.fabrication.Slot.from_json", false]], "from_json() (compas_timber.fabrication.stepjoint class method)": [[609, "compas_timber.fabrication.StepJoint.from_json", false]], "from_json() (compas_timber.fabrication.stepjointnotch class method)": [[624, "compas_timber.fabrication.StepJointNotch.from_json", false]], "from_json() (compas_timber.fabrication.tenon class method)": [[639, "compas_timber.fabrication.Tenon.from_json", false]], "from_json() (compas_timber.model.timbermodel class method)": [[671, "compas_timber.model.TimberModel.from_json", false]], "from_json() (compas_timber.planning.buildingplan class method)": [[705, "compas_timber.planning.BuildingPlan.from_json", false]], "from_json() (compas_timber.planning.instruction class method)": [[717, "compas_timber.planning.Instruction.from_json", false]], "from_json() (compas_timber.planning.lineardimension class method)": [[727, "compas_timber.planning.LinearDimension.from_json", false]], "from_json() (compas_timber.planning.model3d class method)": [[737, "compas_timber.planning.Model3d.from_json", false]], "from_json() (compas_timber.planning.step class method)": [[748, "compas_timber.planning.Step.from_json", false]], "from_json() (compas_timber.planning.text3d class method)": [[758, "compas_timber.planning.Text3d.from_json", false]], "from_jsonstring() (compas_timber.connections.ballnodejoint class method)": [[19, "compas_timber.connections.BallNodeJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.joint class method)": [[39, "compas_timber.connections.Joint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.lapjoint class method)": [[130, "compas_timber.connections.LapJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.lbuttjoint class method)": [[58, "compas_timber.connections.LButtJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.lfrenchridgelapjoint class method)": [[76, "compas_timber.connections.LFrenchRidgeLapJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.lhalflapjoint class method)": [[93, "compas_timber.connections.LHalfLapJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.lmiterjoint class method)": [[112, "compas_timber.connections.LMiterJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.nulljoint class method)": [[149, "compas_timber.connections.NullJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.tbirdsmouthjoint class method)": [[166, "compas_timber.connections.TBirdsmouthJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.tbuttjoint class method)": [[183, "compas_timber.connections.TButtJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.tdovetailjoint class method)": [[201, "compas_timber.connections.TDovetailJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.tenonmortisejoint class method)": [[255, "compas_timber.connections.TenonMortiseJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.thalflapjoint class method)": [[218, "compas_timber.connections.THalfLapJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.tstepjoint class method)": [[237, "compas_timber.connections.TStepJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.connections.xhalflapjoint class method)": [[273, "compas_timber.connections.XHalfLapJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.elements.beam class method)": [[359, "compas_timber.elements.Beam.from_jsonstring", false]], "from_jsonstring() (compas_timber.elements.fastener class method)": [[381, "compas_timber.elements.Fastener.from_jsonstring", false]], "from_jsonstring() (compas_timber.elements.fastenertimberinterface class method)": [[393, "compas_timber.elements.FastenerTimberInterface.from_jsonstring", false]], "from_jsonstring() (compas_timber.elements.plate class method)": [[410, "compas_timber.elements.Plate.from_jsonstring", false]], "from_jsonstring() (compas_timber.elements.timberelement class method)": [[430, "compas_timber.elements.TimberElement.from_jsonstring", false]], "from_jsonstring() (compas_timber.elements.wall class method)": [[449, "compas_timber.elements.Wall.from_jsonstring", false]], "from_jsonstring() (compas_timber.fabrication.btlxprocessing class method)": [[468, "compas_timber.fabrication.BTLxProcessing.from_jsonstring", false]], "from_jsonstring() (compas_timber.fabrication.doublecut class method)": [[482, "compas_timber.fabrication.DoubleCut.from_jsonstring", false]], "from_jsonstring() (compas_timber.fabrication.dovetailmortise class method)": [[500, "compas_timber.fabrication.DovetailMortise.from_jsonstring", false]], "from_jsonstring() (compas_timber.fabrication.dovetailtenon class method)": [[515, "compas_timber.fabrication.DovetailTenon.from_jsonstring", false]], "from_jsonstring() (compas_timber.fabrication.drilling class method)": [[528, "compas_timber.fabrication.Drilling.from_jsonstring", false]], "from_jsonstring() (compas_timber.fabrication.frenchridgelap class method)": [[543, "compas_timber.fabrication.FrenchRidgeLap.from_jsonstring", false]], "from_jsonstring() (compas_timber.fabrication.jackraftercut class method)": [[555, "compas_timber.fabrication.JackRafterCut.from_jsonstring", false]], "from_jsonstring() (compas_timber.fabrication.lap class method)": [[569, "compas_timber.fabrication.Lap.from_jsonstring", false]], "from_jsonstring() (compas_timber.fabrication.mortise class method)": [[584, "compas_timber.fabrication.Mortise.from_jsonstring", false]], "from_jsonstring() (compas_timber.fabrication.slot class method)": [[597, "compas_timber.fabrication.Slot.from_jsonstring", false]], "from_jsonstring() (compas_timber.fabrication.stepjoint class method)": [[610, "compas_timber.fabrication.StepJoint.from_jsonstring", false]], "from_jsonstring() (compas_timber.fabrication.stepjointnotch class method)": [[625, "compas_timber.fabrication.StepJointNotch.from_jsonstring", false]], "from_jsonstring() (compas_timber.fabrication.tenon class method)": [[640, "compas_timber.fabrication.Tenon.from_jsonstring", false]], "from_jsonstring() (compas_timber.model.timbermodel class method)": [[672, "compas_timber.model.TimberModel.from_jsonstring", false]], "from_jsonstring() (compas_timber.planning.buildingplan class method)": [[706, "compas_timber.planning.BuildingPlan.from_jsonstring", false]], "from_jsonstring() (compas_timber.planning.instruction class method)": [[718, "compas_timber.planning.Instruction.from_jsonstring", false]], "from_jsonstring() (compas_timber.planning.lineardimension class method)": [[728, "compas_timber.planning.LinearDimension.from_jsonstring", false]], "from_jsonstring() (compas_timber.planning.model3d class method)": [[738, "compas_timber.planning.Model3d.from_jsonstring", false]], "from_jsonstring() (compas_timber.planning.step class method)": [[749, "compas_timber.planning.Step.from_jsonstring", false]], "from_jsonstring() (compas_timber.planning.text3d class method)": [[759, "compas_timber.planning.Text3d.from_jsonstring", false]], "from_line_and_beam() (compas_timber.fabrication.drilling class method)": [[529, "compas_timber.fabrication.Drilling.from_line_and_beam", false]], "from_plane_and_beam() (compas_timber.fabrication.dovetailtenon class method)": [[516, "compas_timber.fabrication.DovetailTenon.from_plane_and_beam", false]], "from_plane_and_beam() (compas_timber.fabrication.jackraftercut class method)": [[556, "compas_timber.fabrication.JackRafterCut.from_plane_and_beam", false]], "from_plane_and_beam() (compas_timber.fabrication.lap class method)": [[570, "compas_timber.fabrication.Lap.from_plane_and_beam", false]], "from_plane_and_beam() (compas_timber.fabrication.slot class method)": [[598, "compas_timber.fabrication.Slot.from_plane_and_beam", false]], "from_plane_and_beam() (compas_timber.fabrication.stepjoint class method)": [[611, "compas_timber.fabrication.StepJoint.from_plane_and_beam", false]], "from_plane_and_beam() (compas_timber.fabrication.stepjointnotch class method)": [[626, "compas_timber.fabrication.StepJointNotch.from_plane_and_beam", false]], "from_plane_and_beam() (compas_timber.fabrication.tenon class method)": [[641, "compas_timber.fabrication.Tenon.from_plane_and_beam", false]], "from_planes_and_beam() (compas_timber.fabrication.doublecut class method)": [[483, "compas_timber.fabrication.DoubleCut.from_planes_and_beam", false]], "generate_frame() (compas_timber.design.surfacemodel method)": [[321, "compas_timber.design.SurfaceModel.generate_frame", false]], "generate_perimeter_beams() (compas_timber.design.surfacemodel method)": [[322, "compas_timber.design.SurfaceModel.generate_perimeter_beams", false]], "generate_plates() (compas_timber.design.surfacemodel method)": [[323, "compas_timber.design.SurfaceModel.generate_plates", false]], "generate_stud_lines() (compas_timber.design.surfacemodel method)": [[324, "compas_timber.design.SurfaceModel.generate_stud_lines", false]], "generate_studs() (compas_timber.design.surfacemodel method)": [[325, "compas_timber.design.SurfaceModel.generate_studs", false]], "generate_windows() (compas_timber.design.surfacemodel method)": [[326, "compas_timber.design.SurfaceModel.generate_windows", false]], "get_beam_intersections() (compas_timber.design.surfacemodel method)": [[327, "compas_timber.design.SurfaceModel.get_beam_intersections", false]], "get_category_rules() (compas_timber.design.categoryrule static method)": [[287, "compas_timber.design.CategoryRule.get_category_rules", false]], "get_category_rules() (compas_timber.design.directrule static method)": [[300, "compas_timber.design.DirectRule.get_category_rules", false]], "get_category_rules() (compas_timber.design.jointrule static method)": [[312, "compas_timber.design.JointRule.get_category_rules", false]], "get_category_rules() (compas_timber.design.topologyrule static method)": [[337, "compas_timber.design.TopologyRule.get_category_rules", false]], "get_cross_cutting_frame() (compas_timber.connections.lapjoint method)": [[131, "compas_timber.connections.LapJoint.get_cross_cutting_frame", false]], "get_cross_cutting_frame() (compas_timber.connections.lhalflapjoint method)": [[94, "compas_timber.connections.LHalfLapJoint.get_cross_cutting_frame", false]], "get_cross_cutting_frame() (compas_timber.connections.thalflapjoint method)": [[219, "compas_timber.connections.THalfLapJoint.get_cross_cutting_frame", false]], "get_cross_cutting_frame() (compas_timber.connections.xhalflapjoint method)": [[274, "compas_timber.connections.XHalfLapJoint.get_cross_cutting_frame", false]], "get_cutting_planes() (compas_timber.connections.lmiterjoint method)": [[113, "compas_timber.connections.LMiterJoint.get_cutting_planes", false]], "get_direct_rules() (compas_timber.design.categoryrule static method)": [[288, "compas_timber.design.CategoryRule.get_direct_rules", false]], "get_direct_rules() (compas_timber.design.directrule static method)": [[301, "compas_timber.design.DirectRule.get_direct_rules", false]], "get_direct_rules() (compas_timber.design.jointrule static method)": [[313, "compas_timber.design.JointRule.get_direct_rules", false]], "get_direct_rules() (compas_timber.design.topologyrule static method)": [[338, "compas_timber.design.TopologyRule.get_direct_rules", false]], "get_elements_in_group() (compas_timber.model.timbermodel method)": [[673, "compas_timber.model.TimberModel.get_elements_in_group", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.ballnodejoint static method)": [[20, "compas_timber.connections.BallNodeJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.joint static method)": [[40, "compas_timber.connections.Joint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.lapjoint static method)": [[132, "compas_timber.connections.LapJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.lbuttjoint static method)": [[59, "compas_timber.connections.LButtJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.lfrenchridgelapjoint static method)": [[77, "compas_timber.connections.LFrenchRidgeLapJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.lhalflapjoint static method)": [[95, "compas_timber.connections.LHalfLapJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.lmiterjoint static method)": [[114, "compas_timber.connections.LMiterJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.nulljoint static method)": [[150, "compas_timber.connections.NullJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.tbirdsmouthjoint static method)": [[167, "compas_timber.connections.TBirdsmouthJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.tbuttjoint static method)": [[184, "compas_timber.connections.TButtJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.tdovetailjoint static method)": [[202, "compas_timber.connections.TDovetailJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.tenonmortisejoint static method)": [[256, "compas_timber.connections.TenonMortiseJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.thalflapjoint static method)": [[220, "compas_timber.connections.THalfLapJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.tstepjoint static method)": [[238, "compas_timber.connections.TStepJoint.get_face_most_ortho_to_beam", false]], "get_face_most_ortho_to_beam() (compas_timber.connections.xhalflapjoint static method)": [[275, "compas_timber.connections.XHalfLapJoint.get_face_most_ortho_to_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.ballnodejoint static method)": [[21, "compas_timber.connections.BallNodeJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.joint static method)": [[41, "compas_timber.connections.Joint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.lapjoint static method)": [[133, "compas_timber.connections.LapJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.lbuttjoint static method)": [[60, "compas_timber.connections.LButtJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.lfrenchridgelapjoint static method)": [[78, "compas_timber.connections.LFrenchRidgeLapJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.lhalflapjoint static method)": [[96, "compas_timber.connections.LHalfLapJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.lmiterjoint static method)": [[115, "compas_timber.connections.LMiterJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.nulljoint static method)": [[151, "compas_timber.connections.NullJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.tbirdsmouthjoint static method)": [[168, "compas_timber.connections.TBirdsmouthJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.tbuttjoint static method)": [[185, "compas_timber.connections.TButtJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.tdovetailjoint static method)": [[203, "compas_timber.connections.TDovetailJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.tenonmortisejoint static method)": [[257, "compas_timber.connections.TenonMortiseJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.thalflapjoint static method)": [[221, "compas_timber.connections.THalfLapJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.tstepjoint static method)": [[239, "compas_timber.connections.TStepJoint.get_face_most_towards_beam", false]], "get_face_most_towards_beam() (compas_timber.connections.xhalflapjoint static method)": [[276, "compas_timber.connections.XHalfLapJoint.get_face_most_towards_beam", false]], "get_features() (compas_timber.elements.fastenertimberinterface method)": [[394, "compas_timber.elements.FastenerTimberInterface.get_features", false]], "get_interior_segment_indices() (compas_timber.design.surfacemodel method)": [[328, "compas_timber.design.SurfaceModel.get_interior_segment_indices", false]], "get_leaf_subclasses() (in module compas_timber.ghpython)": [[650, "compas_timber.ghpython.get_leaf_subclasses", false]], "get_main_cutting_frame() (compas_timber.connections.lapjoint method)": [[134, "compas_timber.connections.LapJoint.get_main_cutting_frame", false]], "get_main_cutting_frame() (compas_timber.connections.lhalflapjoint method)": [[97, "compas_timber.connections.LHalfLapJoint.get_main_cutting_frame", false]], "get_main_cutting_frame() (compas_timber.connections.thalflapjoint method)": [[222, "compas_timber.connections.THalfLapJoint.get_main_cutting_frame", false]], "get_main_cutting_frame() (compas_timber.connections.xhalflapjoint method)": [[277, "compas_timber.connections.XHalfLapJoint.get_main_cutting_frame", false]], "get_name() (compas_timber.connections.jointtopology class method)": [[48, "compas_timber.connections.JointTopology.get_name", false]], "get_name() (compas_timber.planning.actor class method)": [[700, "compas_timber.planning.Actor.get_name", false]], "get_topology_rules() (compas_timber.design.categoryrule static method)": [[289, "compas_timber.design.CategoryRule.get_topology_rules", false]], "get_topology_rules() (compas_timber.design.directrule static method)": [[302, "compas_timber.design.DirectRule.get_topology_rules", false]], "get_topology_rules() (compas_timber.design.jointrule static method)": [[314, "compas_timber.design.JointRule.get_topology_rules", false]], "get_topology_rules() (compas_timber.design.topologyrule static method)": [[339, "compas_timber.design.TopologyRule.get_topology_rules", false]], "guess_joint_topology_2beams() (in module compas_timber.design)": [[341, "compas_timber.design.guess_joint_topology_2beams", false]], "has_element() (compas_timber.model.timbermodel method)": [[674, "compas_timber.model.TimberModel.has_element", false]], "has_group() (compas_timber.model.timbermodel method)": [[675, "compas_timber.model.TimberModel.has_group", false]], "has_interaction() (compas_timber.model.timbermodel method)": [[676, "compas_timber.model.TimberModel.has_interaction", false]], "has_material() (compas_timber.model.timbermodel method)": [[677, "compas_timber.model.TimberModel.has_material", false]], "instruction (class in compas_timber.planning)": [[714, "compas_timber.planning.Instruction", false]], "interactions() (compas_timber.model.timbermodel method)": [[678, "compas_timber.model.TimberModel.interactions", false]], "is_identical() (compas_timber.design.jointdefinition method)": [[308, "compas_timber.design.JointDefinition.is_identical", false]], "item_input_valid() (in module compas_timber.ghpython)": [[651, "compas_timber.ghpython.item_input_valid", false]], "jackraftercut (class in compas_timber.fabrication)": [[549, "compas_timber.fabrication.JackRafterCut", false]], "joint (class in compas_timber.connections)": [[30, "compas_timber.connections.Joint", false]], "jointdefinition (class in compas_timber.design)": [[306, "compas_timber.design.JointDefinition", false]], "jointrule (class in compas_timber.design)": [[310, "compas_timber.design.JointRule", false]], "joints_from_beams_and_rules() (compas_timber.design.categoryrule static method)": [[290, "compas_timber.design.CategoryRule.joints_from_beams_and_rules", false]], "joints_from_beams_and_rules() (compas_timber.design.directrule static method)": [[303, "compas_timber.design.DirectRule.joints_from_beams_and_rules", false]], "joints_from_beams_and_rules() (compas_timber.design.jointrule static method)": [[315, "compas_timber.design.JointRule.joints_from_beams_and_rules", false]], "joints_from_beams_and_rules() (compas_timber.design.topologyrule static method)": [[340, "compas_timber.design.TopologyRule.joints_from_beams_and_rules", false]], "jointtopology (class in compas_timber.connections)": [[47, "compas_timber.connections.JointTopology", false]], "lap (class in compas_timber.fabrication)": [[562, "compas_timber.fabrication.Lap", false]], "lap_volume_from_params_and_beam() (compas_timber.fabrication.frenchridgelap method)": [[544, "compas_timber.fabrication.FrenchRidgeLap.lap_volume_from_params_and_beam", false]], "lapjoint (class in compas_timber.connections)": [[121, "compas_timber.connections.LapJoint", false]], "lbuttjoint (class in compas_timber.connections)": [[49, "compas_timber.connections.LButtJoint", false]], "lfrenchridgelapjoint (class in compas_timber.connections)": [[67, "compas_timber.connections.LFrenchRidgeLapJoint", false]], "lhalflapjoint (class in compas_timber.connections)": [[84, "compas_timber.connections.LHalfLapJoint", false]], "lineardimension (class in compas_timber.planning)": [[724, "compas_timber.planning.LinearDimension", false]], "list_input_valid() (in module compas_timber.ghpython)": [[652, "compas_timber.ghpython.list_input_valid", false]], "lmiterjoint (class in compas_timber.connections)": [[103, "compas_timber.connections.LMiterJoint", false]], "manage_dynamic_params() (in module compas_timber.ghpython)": [[653, "compas_timber.ghpython.manage_dynamic_params", false]], "match() (compas_timber.design.jointdefinition method)": [[309, "compas_timber.design.JointDefinition.match", false]], "materials() (compas_timber.model.timbermodel method)": [[679, "compas_timber.model.TimberModel.materials", false]], "model3d (class in compas_timber.planning)": [[734, "compas_timber.planning.Model3d", false]], "model_to_xml() (compas_timber.fabrication.btlxwriter class method)": [[474, "compas_timber.fabrication.BTLxWriter.model_to_xml", false]], "mortise (class in compas_timber.fabrication)": [[576, "compas_timber.fabrication.Mortise", false]], "mortise_volume_from_params_and_beam() (compas_timber.fabrication.stepjointnotch method)": [[627, "compas_timber.fabrication.StepJointNotch.mortise_volume_from_params_and_beam", false]], "nulljoint (class in compas_timber.connections)": [[140, "compas_timber.connections.NullJoint", false]], "offset_elements() (compas_timber.design.surfacemodel method)": [[329, "compas_timber.design.SurfaceModel.offset_elements", false]], "opposing_side_index() (compas_timber.elements.beam method)": [[360, "compas_timber.elements.Beam.opposing_side_index", false]], "orientationtype (class in compas_timber.fabrication)": [[590, "compas_timber.fabrication.OrientationType", false]], "parse() (compas_timber.planning.buildingplanparser class method)": [[712, "compas_timber.planning.BuildingPlanParser.parse", false]], "parse_loops() (compas_timber.design.surfacemodel method)": [[330, "compas_timber.design.SurfaceModel.parse_loops", false]], "plane_from_params_and_beam() (compas_timber.fabrication.jackraftercut method)": [[557, "compas_timber.fabrication.JackRafterCut.plane_from_params_and_beam", false]], "planes_from_params_and_beam() (compas_timber.fabrication.doublecut method)": [[484, "compas_timber.fabrication.DoubleCut.planes_from_params_and_beam", false]], "planes_from_params_and_beam() (compas_timber.fabrication.stepjoint method)": [[612, "compas_timber.fabrication.StepJoint.planes_from_params_and_beam", false]], "planes_from_params_and_beam() (compas_timber.fabrication.stepjointnotch method)": [[628, "compas_timber.fabrication.StepJointNotch.planes_from_params_and_beam", false]], "plate (class in compas_timber.elements)": [[399, "compas_timber.elements.Plate", false]], "process_joinery() (compas_timber.model.timbermodel method)": [[680, "compas_timber.model.TimberModel.process_joinery", false]], "ref_side_from_face() (compas_timber.fabrication.btlxpart method)": [[462, "compas_timber.fabrication.BTLxPart.ref_side_from_face", false]], "remove_blank_extension() (compas_timber.elements.beam method)": [[361, "compas_timber.elements.Beam.remove_blank_extension", false]], "remove_element() (compas_timber.model.timbermodel method)": [[681, "compas_timber.model.TimberModel.remove_element", false]], "remove_features() (compas_timber.elements.beam method)": [[362, "compas_timber.elements.Beam.remove_features", false]], "remove_features() (compas_timber.elements.plate method)": [[411, "compas_timber.elements.Plate.remove_features", false]], "remove_interaction() (compas_timber.model.timbermodel method)": [[682, "compas_timber.model.TimberModel.remove_interaction", false]], "remove_joint() (compas_timber.model.timbermodel method)": [[683, "compas_timber.model.TimberModel.remove_joint", false]], "rename_gh_input() (in module compas_timber.ghpython)": [[654, "compas_timber.ghpython.rename_gh_input", false]], "reorder() (compas_timber.design.categoryrule method)": [[291, "compas_timber.design.CategoryRule.reorder", false]], "reset() (compas_timber.elements.beam method)": [[363, "compas_timber.elements.Beam.reset", false]], "reset() (compas_timber.elements.fastener method)": [[382, "compas_timber.elements.Fastener.reset", false]], "reset() (compas_timber.elements.plate method)": [[412, "compas_timber.elements.Plate.reset", false]], "reset() (compas_timber.elements.timberelement method)": [[431, "compas_timber.elements.TimberElement.reset", false]], "reset() (compas_timber.elements.wall method)": [[450, "compas_timber.elements.Wall.reset", false]], "restore_beams_from_keys() (compas_timber.connections.ballnodejoint method)": [[22, "compas_timber.connections.BallNodeJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.joint method)": [[42, "compas_timber.connections.Joint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.lapjoint method)": [[135, "compas_timber.connections.LapJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.lbuttjoint method)": [[61, "compas_timber.connections.LButtJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.lfrenchridgelapjoint method)": [[79, "compas_timber.connections.LFrenchRidgeLapJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.lhalflapjoint method)": [[98, "compas_timber.connections.LHalfLapJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.lmiterjoint method)": [[116, "compas_timber.connections.LMiterJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.nulljoint method)": [[152, "compas_timber.connections.NullJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.tbirdsmouthjoint method)": [[169, "compas_timber.connections.TBirdsmouthJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.tbuttjoint method)": [[186, "compas_timber.connections.TButtJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.tdovetailjoint method)": [[204, "compas_timber.connections.TDovetailJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.tenonmortisejoint method)": [[258, "compas_timber.connections.TenonMortiseJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.thalflapjoint method)": [[223, "compas_timber.connections.THalfLapJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.tstepjoint method)": [[240, "compas_timber.connections.TStepJoint.restore_beams_from_keys", false]], "restore_beams_from_keys() (compas_timber.connections.xhalflapjoint method)": [[278, "compas_timber.connections.XHalfLapJoint.restore_beams_from_keys", false]], "rotate() (compas_timber.model.timbermodel method)": [[684, "compas_timber.model.TimberModel.rotate", false]], "rotated() (compas_timber.model.timbermodel method)": [[685, "compas_timber.model.TimberModel.rotated", false]], "scale() (compas_timber.model.timbermodel method)": [[686, "compas_timber.model.TimberModel.scale", false]], "scaled() (compas_timber.model.timbermodel method)": [[687, "compas_timber.model.TimberModel.scaled", false]], "serialize() (compas_timber.planning.buildingplanparser class method)": [[713, "compas_timber.planning.BuildingPlanParser.serialize", false]], "set_default_joints() (in module compas_timber.design)": [[342, "compas_timber.design.set_default_joints", false]], "set_default_values() (compas_timber.connections.tenonmortisejoint method)": [[259, "compas_timber.connections.TenonMortiseJoint.set_default_values", false]], "set_frame_and_outline() (compas_timber.elements.plate method)": [[413, "compas_timber.elements.Plate.set_frame_and_outline", false]], "set_step_depths() (compas_timber.connections.tstepjoint method)": [[241, "compas_timber.connections.TStepJoint.set_step_depths", false]], "set_topologies() (compas_timber.model.timbermodel method)": [[688, "compas_timber.model.TimberModel.set_topologies", false]], "sha256() (compas_timber.connections.ballnodejoint method)": [[23, "compas_timber.connections.BallNodeJoint.sha256", false]], "sha256() (compas_timber.connections.joint method)": [[43, "compas_timber.connections.Joint.sha256", false]], "sha256() (compas_timber.connections.lapjoint method)": [[136, "compas_timber.connections.LapJoint.sha256", false]], "sha256() (compas_timber.connections.lbuttjoint method)": [[62, "compas_timber.connections.LButtJoint.sha256", false]], "sha256() (compas_timber.connections.lfrenchridgelapjoint method)": [[80, "compas_timber.connections.LFrenchRidgeLapJoint.sha256", false]], "sha256() (compas_timber.connections.lhalflapjoint method)": [[99, "compas_timber.connections.LHalfLapJoint.sha256", false]], "sha256() (compas_timber.connections.lmiterjoint method)": [[117, "compas_timber.connections.LMiterJoint.sha256", false]], "sha256() (compas_timber.connections.nulljoint method)": [[153, "compas_timber.connections.NullJoint.sha256", false]], "sha256() (compas_timber.connections.tbirdsmouthjoint method)": [[170, "compas_timber.connections.TBirdsmouthJoint.sha256", false]], "sha256() (compas_timber.connections.tbuttjoint method)": [[187, "compas_timber.connections.TButtJoint.sha256", false]], "sha256() (compas_timber.connections.tdovetailjoint method)": [[205, "compas_timber.connections.TDovetailJoint.sha256", false]], "sha256() (compas_timber.connections.tenonmortisejoint method)": [[260, "compas_timber.connections.TenonMortiseJoint.sha256", false]], "sha256() (compas_timber.connections.thalflapjoint method)": [[224, "compas_timber.connections.THalfLapJoint.sha256", false]], "sha256() (compas_timber.connections.tstepjoint method)": [[242, "compas_timber.connections.TStepJoint.sha256", false]], "sha256() (compas_timber.connections.xhalflapjoint method)": [[279, "compas_timber.connections.XHalfLapJoint.sha256", false]], "sha256() (compas_timber.elements.beam method)": [[364, "compas_timber.elements.Beam.sha256", false]], "sha256() (compas_timber.elements.fastener method)": [[383, "compas_timber.elements.Fastener.sha256", false]], "sha256() (compas_timber.elements.fastenertimberinterface method)": [[395, "compas_timber.elements.FastenerTimberInterface.sha256", false]], "sha256() (compas_timber.elements.plate method)": [[414, "compas_timber.elements.Plate.sha256", false]], "sha256() (compas_timber.elements.timberelement method)": [[432, "compas_timber.elements.TimberElement.sha256", false]], "sha256() (compas_timber.elements.wall method)": [[451, "compas_timber.elements.Wall.sha256", false]], "sha256() (compas_timber.fabrication.btlxprocessing method)": [[469, "compas_timber.fabrication.BTLxProcessing.sha256", false]], "sha256() (compas_timber.fabrication.doublecut method)": [[485, "compas_timber.fabrication.DoubleCut.sha256", false]], "sha256() (compas_timber.fabrication.dovetailmortise method)": [[501, "compas_timber.fabrication.DovetailMortise.sha256", false]], "sha256() (compas_timber.fabrication.dovetailtenon method)": [[517, "compas_timber.fabrication.DovetailTenon.sha256", false]], "sha256() (compas_timber.fabrication.drilling method)": [[530, "compas_timber.fabrication.Drilling.sha256", false]], "sha256() (compas_timber.fabrication.frenchridgelap method)": [[545, "compas_timber.fabrication.FrenchRidgeLap.sha256", false]], "sha256() (compas_timber.fabrication.jackraftercut method)": [[558, "compas_timber.fabrication.JackRafterCut.sha256", false]], "sha256() (compas_timber.fabrication.lap method)": [[571, "compas_timber.fabrication.Lap.sha256", false]], "sha256() (compas_timber.fabrication.mortise method)": [[585, "compas_timber.fabrication.Mortise.sha256", false]], "sha256() (compas_timber.fabrication.slot method)": [[599, "compas_timber.fabrication.Slot.sha256", false]], "sha256() (compas_timber.fabrication.stepjoint method)": [[613, "compas_timber.fabrication.StepJoint.sha256", false]], "sha256() (compas_timber.fabrication.stepjointnotch method)": [[629, "compas_timber.fabrication.StepJointNotch.sha256", false]], "sha256() (compas_timber.fabrication.tenon method)": [[642, "compas_timber.fabrication.Tenon.sha256", false]], "sha256() (compas_timber.model.timbermodel method)": [[689, "compas_timber.model.TimberModel.sha256", false]], "sha256() (compas_timber.planning.buildingplan method)": [[707, "compas_timber.planning.BuildingPlan.sha256", false]], "sha256() (compas_timber.planning.instruction method)": [[719, "compas_timber.planning.Instruction.sha256", false]], "sha256() (compas_timber.planning.lineardimension method)": [[729, "compas_timber.planning.LinearDimension.sha256", false]], "sha256() (compas_timber.planning.model3d method)": [[739, "compas_timber.planning.Model3d.sha256", false]], "sha256() (compas_timber.planning.step method)": [[750, "compas_timber.planning.Step.sha256", false]], "sha256() (compas_timber.planning.text3d method)": [[760, "compas_timber.planning.Text3d.sha256", false]], "side_as_surface() (compas_timber.elements.beam method)": [[365, "compas_timber.elements.Beam.side_as_surface", false]], "simplesequencegenerator (class in compas_timber.planning)": [[744, "compas_timber.planning.SimpleSequenceGenerator", false]], "slot (class in compas_timber.fabrication)": [[591, "compas_timber.fabrication.Slot", false]], "step (class in compas_timber.planning)": [[745, "compas_timber.planning.Step", false]], "stepjoint (class in compas_timber.fabrication)": [[603, "compas_timber.fabrication.StepJoint", false]], "stepjointnotch (class in compas_timber.fabrication)": [[618, "compas_timber.fabrication.StepJointNotch", false]], "surfacemodel (class in compas_timber.design)": [[316, "compas_timber.design.SurfaceModel", false]], "tbirdsmouthjoint (class in compas_timber.connections)": [[157, "compas_timber.connections.TBirdsmouthJoint", false]], "tbuttjoint (class in compas_timber.connections)": [[174, "compas_timber.connections.TButtJoint", false]], "tdovetailjoint (class in compas_timber.connections)": [[191, "compas_timber.connections.TDovetailJoint", false]], "tenon (class in compas_timber.fabrication)": [[633, "compas_timber.fabrication.Tenon", false]], "tenon_volume_from_params_and_beam() (compas_timber.fabrication.stepjoint method)": [[614, "compas_timber.fabrication.StepJoint.tenon_volume_from_params_and_beam", false]], "tenonmortisejoint (class in compas_timber.connections)": [[246, "compas_timber.connections.TenonMortiseJoint", false]], "tenonshapetype (class in compas_timber.fabrication)": [[647, "compas_timber.fabrication.TenonShapeType", false]], "text3d (class in compas_timber.planning)": [[755, "compas_timber.planning.Text3d", false]], "thalflapjoint (class in compas_timber.connections)": [[209, "compas_timber.connections.THalfLapJoint", false]], "timberelement (class in compas_timber.elements)": [[420, "compas_timber.elements.TimberElement", false]], "timbermodel (class in compas_timber.model)": [[655, "compas_timber.model.TimberModel", false]], "to_json() (compas_timber.connections.ballnodejoint method)": [[24, "compas_timber.connections.BallNodeJoint.to_json", false]], "to_json() (compas_timber.connections.joint method)": [[44, "compas_timber.connections.Joint.to_json", false]], "to_json() (compas_timber.connections.lapjoint method)": [[137, "compas_timber.connections.LapJoint.to_json", false]], "to_json() (compas_timber.connections.lbuttjoint method)": [[63, "compas_timber.connections.LButtJoint.to_json", false]], "to_json() (compas_timber.connections.lfrenchridgelapjoint method)": [[81, "compas_timber.connections.LFrenchRidgeLapJoint.to_json", false]], "to_json() (compas_timber.connections.lhalflapjoint method)": [[100, "compas_timber.connections.LHalfLapJoint.to_json", false]], "to_json() (compas_timber.connections.lmiterjoint method)": [[118, "compas_timber.connections.LMiterJoint.to_json", false]], "to_json() (compas_timber.connections.nulljoint method)": [[154, "compas_timber.connections.NullJoint.to_json", false]], "to_json() (compas_timber.connections.tbirdsmouthjoint method)": [[171, "compas_timber.connections.TBirdsmouthJoint.to_json", false]], "to_json() (compas_timber.connections.tbuttjoint method)": [[188, "compas_timber.connections.TButtJoint.to_json", false]], "to_json() (compas_timber.connections.tdovetailjoint method)": [[206, "compas_timber.connections.TDovetailJoint.to_json", false]], "to_json() (compas_timber.connections.tenonmortisejoint method)": [[261, "compas_timber.connections.TenonMortiseJoint.to_json", false]], "to_json() (compas_timber.connections.thalflapjoint method)": [[225, "compas_timber.connections.THalfLapJoint.to_json", false]], "to_json() (compas_timber.connections.tstepjoint method)": [[243, "compas_timber.connections.TStepJoint.to_json", false]], "to_json() (compas_timber.connections.xhalflapjoint method)": [[280, "compas_timber.connections.XHalfLapJoint.to_json", false]], "to_json() (compas_timber.elements.beam method)": [[366, "compas_timber.elements.Beam.to_json", false]], "to_json() (compas_timber.elements.fastener method)": [[384, "compas_timber.elements.Fastener.to_json", false]], "to_json() (compas_timber.elements.fastenertimberinterface method)": [[396, "compas_timber.elements.FastenerTimberInterface.to_json", false]], "to_json() (compas_timber.elements.plate method)": [[415, "compas_timber.elements.Plate.to_json", false]], "to_json() (compas_timber.elements.timberelement method)": [[433, "compas_timber.elements.TimberElement.to_json", false]], "to_json() (compas_timber.elements.wall method)": [[452, "compas_timber.elements.Wall.to_json", false]], "to_json() (compas_timber.fabrication.btlxprocessing method)": [[470, "compas_timber.fabrication.BTLxProcessing.to_json", false]], "to_json() (compas_timber.fabrication.doublecut method)": [[486, "compas_timber.fabrication.DoubleCut.to_json", false]], "to_json() (compas_timber.fabrication.dovetailmortise method)": [[502, "compas_timber.fabrication.DovetailMortise.to_json", false]], "to_json() (compas_timber.fabrication.dovetailtenon method)": [[518, "compas_timber.fabrication.DovetailTenon.to_json", false]], "to_json() (compas_timber.fabrication.drilling method)": [[531, "compas_timber.fabrication.Drilling.to_json", false]], "to_json() (compas_timber.fabrication.frenchridgelap method)": [[546, "compas_timber.fabrication.FrenchRidgeLap.to_json", false]], "to_json() (compas_timber.fabrication.jackraftercut method)": [[559, "compas_timber.fabrication.JackRafterCut.to_json", false]], "to_json() (compas_timber.fabrication.lap method)": [[572, "compas_timber.fabrication.Lap.to_json", false]], "to_json() (compas_timber.fabrication.mortise method)": [[586, "compas_timber.fabrication.Mortise.to_json", false]], "to_json() (compas_timber.fabrication.slot method)": [[600, "compas_timber.fabrication.Slot.to_json", false]], "to_json() (compas_timber.fabrication.stepjoint method)": [[615, "compas_timber.fabrication.StepJoint.to_json", false]], "to_json() (compas_timber.fabrication.stepjointnotch method)": [[630, "compas_timber.fabrication.StepJointNotch.to_json", false]], "to_json() (compas_timber.fabrication.tenon method)": [[643, "compas_timber.fabrication.Tenon.to_json", false]], "to_json() (compas_timber.model.timbermodel method)": [[690, "compas_timber.model.TimberModel.to_json", false]], "to_json() (compas_timber.planning.buildingplan method)": [[708, "compas_timber.planning.BuildingPlan.to_json", false]], "to_json() (compas_timber.planning.instruction method)": [[720, "compas_timber.planning.Instruction.to_json", false]], "to_json() (compas_timber.planning.lineardimension method)": [[730, "compas_timber.planning.LinearDimension.to_json", false]], "to_json() (compas_timber.planning.model3d method)": [[740, "compas_timber.planning.Model3d.to_json", false]], "to_json() (compas_timber.planning.step method)": [[751, "compas_timber.planning.Step.to_json", false]], "to_json() (compas_timber.planning.text3d method)": [[761, "compas_timber.planning.Text3d.to_json", false]], "to_jsonstring() (compas_timber.connections.ballnodejoint method)": [[25, "compas_timber.connections.BallNodeJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.joint method)": [[45, "compas_timber.connections.Joint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.lapjoint method)": [[138, "compas_timber.connections.LapJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.lbuttjoint method)": [[64, "compas_timber.connections.LButtJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.lfrenchridgelapjoint method)": [[82, "compas_timber.connections.LFrenchRidgeLapJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.lhalflapjoint method)": [[101, "compas_timber.connections.LHalfLapJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.lmiterjoint method)": [[119, "compas_timber.connections.LMiterJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.nulljoint method)": [[155, "compas_timber.connections.NullJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.tbirdsmouthjoint method)": [[172, "compas_timber.connections.TBirdsmouthJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.tbuttjoint method)": [[189, "compas_timber.connections.TButtJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.tdovetailjoint method)": [[207, "compas_timber.connections.TDovetailJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.tenonmortisejoint method)": [[262, "compas_timber.connections.TenonMortiseJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.thalflapjoint method)": [[226, "compas_timber.connections.THalfLapJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.tstepjoint method)": [[244, "compas_timber.connections.TStepJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.connections.xhalflapjoint method)": [[281, "compas_timber.connections.XHalfLapJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.elements.beam method)": [[367, "compas_timber.elements.Beam.to_jsonstring", false]], "to_jsonstring() (compas_timber.elements.fastener method)": [[385, "compas_timber.elements.Fastener.to_jsonstring", false]], "to_jsonstring() (compas_timber.elements.fastenertimberinterface method)": [[397, "compas_timber.elements.FastenerTimberInterface.to_jsonstring", false]], "to_jsonstring() (compas_timber.elements.plate method)": [[416, "compas_timber.elements.Plate.to_jsonstring", false]], "to_jsonstring() (compas_timber.elements.timberelement method)": [[434, "compas_timber.elements.TimberElement.to_jsonstring", false]], "to_jsonstring() (compas_timber.elements.wall method)": [[453, "compas_timber.elements.Wall.to_jsonstring", false]], "to_jsonstring() (compas_timber.fabrication.btlxprocessing method)": [[471, "compas_timber.fabrication.BTLxProcessing.to_jsonstring", false]], "to_jsonstring() (compas_timber.fabrication.doublecut method)": [[487, "compas_timber.fabrication.DoubleCut.to_jsonstring", false]], "to_jsonstring() (compas_timber.fabrication.dovetailmortise method)": [[503, "compas_timber.fabrication.DovetailMortise.to_jsonstring", false]], "to_jsonstring() (compas_timber.fabrication.dovetailtenon method)": [[519, "compas_timber.fabrication.DovetailTenon.to_jsonstring", false]], "to_jsonstring() (compas_timber.fabrication.drilling method)": [[532, "compas_timber.fabrication.Drilling.to_jsonstring", false]], "to_jsonstring() (compas_timber.fabrication.frenchridgelap method)": [[547, "compas_timber.fabrication.FrenchRidgeLap.to_jsonstring", false]], "to_jsonstring() (compas_timber.fabrication.jackraftercut method)": [[560, "compas_timber.fabrication.JackRafterCut.to_jsonstring", false]], "to_jsonstring() (compas_timber.fabrication.lap method)": [[573, "compas_timber.fabrication.Lap.to_jsonstring", false]], "to_jsonstring() (compas_timber.fabrication.mortise method)": [[587, "compas_timber.fabrication.Mortise.to_jsonstring", false]], "to_jsonstring() (compas_timber.fabrication.slot method)": [[601, "compas_timber.fabrication.Slot.to_jsonstring", false]], "to_jsonstring() (compas_timber.fabrication.stepjoint method)": [[616, "compas_timber.fabrication.StepJoint.to_jsonstring", false]], "to_jsonstring() (compas_timber.fabrication.stepjointnotch method)": [[631, "compas_timber.fabrication.StepJointNotch.to_jsonstring", false]], "to_jsonstring() (compas_timber.fabrication.tenon method)": [[644, "compas_timber.fabrication.Tenon.to_jsonstring", false]], "to_jsonstring() (compas_timber.model.timbermodel method)": [[691, "compas_timber.model.TimberModel.to_jsonstring", false]], "to_jsonstring() (compas_timber.planning.buildingplan method)": [[709, "compas_timber.planning.BuildingPlan.to_jsonstring", false]], "to_jsonstring() (compas_timber.planning.instruction method)": [[721, "compas_timber.planning.Instruction.to_jsonstring", false]], "to_jsonstring() (compas_timber.planning.lineardimension method)": [[731, "compas_timber.planning.LinearDimension.to_jsonstring", false]], "to_jsonstring() (compas_timber.planning.model3d method)": [[741, "compas_timber.planning.Model3d.to_jsonstring", false]], "to_jsonstring() (compas_timber.planning.step method)": [[752, "compas_timber.planning.Step.to_jsonstring", false]], "to_jsonstring() (compas_timber.planning.text3d method)": [[762, "compas_timber.planning.Text3d.to_jsonstring", false]], "topologyrule (class in compas_timber.design)": [[334, "compas_timber.design.TopologyRule", false]], "tostring() (compas_timber.connections.ballnodejoint method)": [[11, "compas_timber.connections.BallNodeJoint.ToString", false]], "tostring() (compas_timber.connections.joint method)": [[31, "compas_timber.connections.Joint.ToString", false]], "tostring() (compas_timber.connections.lapjoint method)": [[122, "compas_timber.connections.LapJoint.ToString", false]], "tostring() (compas_timber.connections.lbuttjoint method)": [[50, "compas_timber.connections.LButtJoint.ToString", false]], "tostring() (compas_timber.connections.lfrenchridgelapjoint method)": [[68, "compas_timber.connections.LFrenchRidgeLapJoint.ToString", false]], "tostring() (compas_timber.connections.lhalflapjoint method)": [[85, "compas_timber.connections.LHalfLapJoint.ToString", false]], "tostring() (compas_timber.connections.lmiterjoint method)": [[104, "compas_timber.connections.LMiterJoint.ToString", false]], "tostring() (compas_timber.connections.nulljoint method)": [[141, "compas_timber.connections.NullJoint.ToString", false]], "tostring() (compas_timber.connections.tbirdsmouthjoint method)": [[158, "compas_timber.connections.TBirdsmouthJoint.ToString", false]], "tostring() (compas_timber.connections.tbuttjoint method)": [[175, "compas_timber.connections.TButtJoint.ToString", false]], "tostring() (compas_timber.connections.tdovetailjoint method)": [[192, "compas_timber.connections.TDovetailJoint.ToString", false]], "tostring() (compas_timber.connections.tenonmortisejoint method)": [[247, "compas_timber.connections.TenonMortiseJoint.ToString", false]], "tostring() (compas_timber.connections.thalflapjoint method)": [[210, "compas_timber.connections.THalfLapJoint.ToString", false]], "tostring() (compas_timber.connections.tstepjoint method)": [[229, "compas_timber.connections.TStepJoint.ToString", false]], "tostring() (compas_timber.connections.xhalflapjoint method)": [[265, "compas_timber.connections.XHalfLapJoint.ToString", false]], "tostring() (compas_timber.design.categoryrule method)": [[285, "compas_timber.design.CategoryRule.ToString", false]], "tostring() (compas_timber.design.debuginfomation method)": [[293, "compas_timber.design.DebugInfomation.ToString", false]], "tostring() (compas_timber.design.directrule method)": [[298, "compas_timber.design.DirectRule.ToString", false]], "tostring() (compas_timber.design.featuredefinition method)": [[305, "compas_timber.design.FeatureDefinition.ToString", false]], "tostring() (compas_timber.design.jointdefinition method)": [[307, "compas_timber.design.JointDefinition.ToString", false]], "tostring() (compas_timber.design.topologyrule method)": [[335, "compas_timber.design.TopologyRule.ToString", false]], "tostring() (compas_timber.elements.beam method)": [[344, "compas_timber.elements.Beam.ToString", false]], "tostring() (compas_timber.elements.fastener method)": [[372, "compas_timber.elements.Fastener.ToString", false]], "tostring() (compas_timber.elements.fastenertimberinterface method)": [[390, "compas_timber.elements.FastenerTimberInterface.ToString", false]], "tostring() (compas_timber.elements.plate method)": [[400, "compas_timber.elements.Plate.ToString", false]], "tostring() (compas_timber.elements.timberelement method)": [[421, "compas_timber.elements.TimberElement.ToString", false]], "tostring() (compas_timber.elements.wall method)": [[439, "compas_timber.elements.Wall.ToString", false]], "tostring() (compas_timber.fabrication.btlxprocessing method)": [[464, "compas_timber.fabrication.BTLxProcessing.ToString", false]], "tostring() (compas_timber.fabrication.doublecut method)": [[477, "compas_timber.fabrication.DoubleCut.ToString", false]], "tostring() (compas_timber.fabrication.dovetailmortise method)": [[490, "compas_timber.fabrication.DovetailMortise.ToString", false]], "tostring() (compas_timber.fabrication.dovetailtenon method)": [[506, "compas_timber.fabrication.DovetailTenon.ToString", false]], "tostring() (compas_timber.fabrication.drilling method)": [[522, "compas_timber.fabrication.Drilling.ToString", false]], "tostring() (compas_timber.fabrication.frenchridgelap method)": [[536, "compas_timber.fabrication.FrenchRidgeLap.ToString", false]], "tostring() (compas_timber.fabrication.jackraftercut method)": [[550, "compas_timber.fabrication.JackRafterCut.ToString", false]], "tostring() (compas_timber.fabrication.lap method)": [[563, "compas_timber.fabrication.Lap.ToString", false]], "tostring() (compas_timber.fabrication.mortise method)": [[577, "compas_timber.fabrication.Mortise.ToString", false]], "tostring() (compas_timber.fabrication.slot method)": [[592, "compas_timber.fabrication.Slot.ToString", false]], "tostring() (compas_timber.fabrication.stepjoint method)": [[604, "compas_timber.fabrication.StepJoint.ToString", false]], "tostring() (compas_timber.fabrication.stepjointnotch method)": [[619, "compas_timber.fabrication.StepJointNotch.ToString", false]], "tostring() (compas_timber.fabrication.tenon method)": [[634, "compas_timber.fabrication.Tenon.ToString", false]], "tostring() (compas_timber.model.timbermodel method)": [[656, "compas_timber.model.TimberModel.ToString", false]], "tostring() (compas_timber.planning.buildingplan method)": [[702, "compas_timber.planning.BuildingPlan.ToString", false]], "tostring() (compas_timber.planning.instruction method)": [[715, "compas_timber.planning.Instruction.ToString", false]], "tostring() (compas_timber.planning.lineardimension method)": [[725, "compas_timber.planning.LinearDimension.ToString", false]], "tostring() (compas_timber.planning.model3d method)": [[735, "compas_timber.planning.Model3d.ToString", false]], "tostring() (compas_timber.planning.step method)": [[746, "compas_timber.planning.Step.ToString", false]], "tostring() (compas_timber.planning.text3d method)": [[756, "compas_timber.planning.Text3d.ToString", false]], "transform() (compas_timber.elements.beam method)": [[368, "compas_timber.elements.Beam.transform", false]], "transform() (compas_timber.elements.fastener method)": [[386, "compas_timber.elements.Fastener.transform", false]], "transform() (compas_timber.elements.plate method)": [[417, "compas_timber.elements.Plate.transform", false]], "transform() (compas_timber.elements.timberelement method)": [[435, "compas_timber.elements.TimberElement.transform", false]], "transform() (compas_timber.elements.wall method)": [[454, "compas_timber.elements.Wall.transform", false]], "transform() (compas_timber.model.timbermodel method)": [[692, "compas_timber.model.TimberModel.transform", false]], "transform() (compas_timber.planning.instruction method)": [[722, "compas_timber.planning.Instruction.transform", false]], "transform() (compas_timber.planning.lineardimension method)": [[732, "compas_timber.planning.LinearDimension.transform", false]], "transform() (compas_timber.planning.model3d method)": [[742, "compas_timber.planning.Model3d.transform", false]], "transform() (compas_timber.planning.step method)": [[753, "compas_timber.planning.Step.transform", false]], "transform() (compas_timber.planning.text3d method)": [[763, "compas_timber.planning.Text3d.transform", false]], "transform_numpy() (compas_timber.model.timbermodel method)": [[693, "compas_timber.model.TimberModel.transform_numpy", false]], "transformed() (compas_timber.elements.beam method)": [[369, "compas_timber.elements.Beam.transformed", false]], "transformed() (compas_timber.elements.fastener method)": [[387, "compas_timber.elements.Fastener.transformed", false]], "transformed() (compas_timber.elements.plate method)": [[418, "compas_timber.elements.Plate.transformed", false]], "transformed() (compas_timber.elements.timberelement method)": [[436, "compas_timber.elements.TimberElement.transformed", false]], "transformed() (compas_timber.elements.wall method)": [[455, "compas_timber.elements.Wall.transformed", false]], "transformed() (compas_timber.model.timbermodel method)": [[694, "compas_timber.model.TimberModel.transformed", false]], "transformed_numpy() (compas_timber.model.timbermodel method)": [[695, "compas_timber.model.TimberModel.transformed_numpy", false]], "translate() (compas_timber.model.timbermodel method)": [[696, "compas_timber.model.TimberModel.translate", false]], "translated() (compas_timber.model.timbermodel method)": [[697, "compas_timber.model.TimberModel.translated", false]], "trim_jack_studs() (compas_timber.design.surfacemodel method)": [[331, "compas_timber.design.SurfaceModel.trim_jack_studs", false]], "trim_king_studs() (compas_timber.design.surfacemodel method)": [[332, "compas_timber.design.SurfaceModel.trim_king_studs", false]], "trim_studs() (compas_timber.design.surfacemodel method)": [[333, "compas_timber.design.SurfaceModel.trim_studs", false]], "tstepjoint (class in compas_timber.connections)": [[228, "compas_timber.connections.TStepJoint", false]], "update_beam_roles() (compas_timber.connections.lbuttjoint method)": [[65, "compas_timber.connections.LButtJoint.update_beam_roles", false]], "validate_data() (compas_timber.connections.ballnodejoint class method)": [[26, "compas_timber.connections.BallNodeJoint.validate_data", false]], "validate_data() (compas_timber.connections.joint class method)": [[46, "compas_timber.connections.Joint.validate_data", false]], "validate_data() (compas_timber.connections.lapjoint class method)": [[139, "compas_timber.connections.LapJoint.validate_data", false]], "validate_data() (compas_timber.connections.lbuttjoint class method)": [[66, "compas_timber.connections.LButtJoint.validate_data", false]], "validate_data() (compas_timber.connections.lfrenchridgelapjoint class method)": [[83, "compas_timber.connections.LFrenchRidgeLapJoint.validate_data", false]], "validate_data() (compas_timber.connections.lhalflapjoint class method)": [[102, "compas_timber.connections.LHalfLapJoint.validate_data", false]], "validate_data() (compas_timber.connections.lmiterjoint class method)": [[120, "compas_timber.connections.LMiterJoint.validate_data", false]], "validate_data() (compas_timber.connections.nulljoint class method)": [[156, "compas_timber.connections.NullJoint.validate_data", false]], "validate_data() (compas_timber.connections.tbirdsmouthjoint class method)": [[173, "compas_timber.connections.TBirdsmouthJoint.validate_data", false]], "validate_data() (compas_timber.connections.tbuttjoint class method)": [[190, "compas_timber.connections.TButtJoint.validate_data", false]], "validate_data() (compas_timber.connections.tdovetailjoint class method)": [[208, "compas_timber.connections.TDovetailJoint.validate_data", false]], "validate_data() (compas_timber.connections.tenonmortisejoint class method)": [[263, "compas_timber.connections.TenonMortiseJoint.validate_data", false]], "validate_data() (compas_timber.connections.thalflapjoint class method)": [[227, "compas_timber.connections.THalfLapJoint.validate_data", false]], "validate_data() (compas_timber.connections.tstepjoint class method)": [[245, "compas_timber.connections.TStepJoint.validate_data", false]], "validate_data() (compas_timber.connections.xhalflapjoint class method)": [[282, "compas_timber.connections.XHalfLapJoint.validate_data", false]], "validate_data() (compas_timber.elements.beam class method)": [[370, "compas_timber.elements.Beam.validate_data", false]], "validate_data() (compas_timber.elements.fastener class method)": [[388, "compas_timber.elements.Fastener.validate_data", false]], "validate_data() (compas_timber.elements.fastenertimberinterface class method)": [[398, "compas_timber.elements.FastenerTimberInterface.validate_data", false]], "validate_data() (compas_timber.elements.plate class method)": [[419, "compas_timber.elements.Plate.validate_data", false]], "validate_data() (compas_timber.elements.timberelement class method)": [[437, "compas_timber.elements.TimberElement.validate_data", false]], "validate_data() (compas_timber.elements.wall class method)": [[456, "compas_timber.elements.Wall.validate_data", false]], "validate_data() (compas_timber.fabrication.btlxprocessing class method)": [[472, "compas_timber.fabrication.BTLxProcessing.validate_data", false]], "validate_data() (compas_timber.fabrication.doublecut class method)": [[488, "compas_timber.fabrication.DoubleCut.validate_data", false]], "validate_data() (compas_timber.fabrication.dovetailmortise class method)": [[504, "compas_timber.fabrication.DovetailMortise.validate_data", false]], "validate_data() (compas_timber.fabrication.dovetailtenon class method)": [[520, "compas_timber.fabrication.DovetailTenon.validate_data", false]], "validate_data() (compas_timber.fabrication.drilling class method)": [[533, "compas_timber.fabrication.Drilling.validate_data", false]], "validate_data() (compas_timber.fabrication.frenchridgelap class method)": [[548, "compas_timber.fabrication.FrenchRidgeLap.validate_data", false]], "validate_data() (compas_timber.fabrication.jackraftercut class method)": [[561, "compas_timber.fabrication.JackRafterCut.validate_data", false]], "validate_data() (compas_timber.fabrication.lap class method)": [[574, "compas_timber.fabrication.Lap.validate_data", false]], "validate_data() (compas_timber.fabrication.mortise class method)": [[588, "compas_timber.fabrication.Mortise.validate_data", false]], "validate_data() (compas_timber.fabrication.slot class method)": [[602, "compas_timber.fabrication.Slot.validate_data", false]], "validate_data() (compas_timber.fabrication.stepjoint class method)": [[617, "compas_timber.fabrication.StepJoint.validate_data", false]], "validate_data() (compas_timber.fabrication.stepjointnotch class method)": [[632, "compas_timber.fabrication.StepJointNotch.validate_data", false]], "validate_data() (compas_timber.fabrication.tenon class method)": [[645, "compas_timber.fabrication.Tenon.validate_data", false]], "validate_data() (compas_timber.model.timbermodel class method)": [[698, "compas_timber.model.TimberModel.validate_data", false]], "validate_data() (compas_timber.planning.buildingplan class method)": [[710, "compas_timber.planning.BuildingPlan.validate_data", false]], "validate_data() (compas_timber.planning.instruction class method)": [[723, "compas_timber.planning.Instruction.validate_data", false]], "validate_data() (compas_timber.planning.lineardimension class method)": [[733, "compas_timber.planning.LinearDimension.validate_data", false]], "validate_data() (compas_timber.planning.model3d class method)": [[743, "compas_timber.planning.Model3d.validate_data", false]], "validate_data() (compas_timber.planning.step class method)": [[754, "compas_timber.planning.Step.validate_data", false]], "validate_data() (compas_timber.planning.text3d class method)": [[764, "compas_timber.planning.Text3d.validate_data", false]], "volume_from_params_and_beam() (compas_timber.fabrication.lap method)": [[575, "compas_timber.fabrication.Lap.volume_from_params_and_beam", false]], "volume_from_params_and_beam() (compas_timber.fabrication.mortise method)": [[589, "compas_timber.fabrication.Mortise.volume_from_params_and_beam", false]], "volume_from_params_and_beam() (compas_timber.fabrication.tenon method)": [[646, "compas_timber.fabrication.Tenon.volume_from_params_and_beam", false]], "wall (class in compas_timber.elements)": [[438, "compas_timber.elements.Wall", false]], "write() (compas_timber.fabrication.btlxwriter class method)": [[475, "compas_timber.fabrication.BTLxWriter.write", false]], "xhalflapjoint (class in compas_timber.connections)": [[264, "compas_timber.connections.XHalfLapJoint", false]]}, "objects": {"compas_timber.connections": [[10, 0, 1, "", "BallNodeJoint"], [27, 0, 1, "", "ConnectionSolver"], [30, 0, 1, "", "Joint"], [47, 0, 1, "", "JointTopology"], [49, 0, 1, "", "LButtJoint"], [67, 0, 1, "", "LFrenchRidgeLapJoint"], [84, 0, 1, "", "LHalfLapJoint"], [103, 0, 1, "", "LMiterJoint"], [121, 0, 1, "", "LapJoint"], [140, 0, 1, "", "NullJoint"], [157, 0, 1, "", "TBirdsmouthJoint"], [174, 0, 1, "", "TButtJoint"], [191, 0, 1, "", "TDovetailJoint"], [209, 0, 1, "", "THalfLapJoint"], [228, 0, 1, "", "TStepJoint"], [246, 0, 1, "", "TenonMortiseJoint"], [264, 0, 1, "", "XHalfLapJoint"], [283, 2, 1, "", "find_neighboring_beams"]], "compas_timber.connections.BallNodeJoint": [[11, 1, 1, "", "ToString"], [12, 1, 1, "", "add_extensions"], [13, 1, 1, "", "add_features"], [14, 1, 1, "", "check_elements_compatibility"], [15, 1, 1, "", "copy"], [16, 1, 1, "", "create"], [17, 1, 1, "", "element_count_complies"], [18, 1, 1, "", "from_json"], [19, 1, 1, "", "from_jsonstring"], [20, 1, 1, "", "get_face_most_ortho_to_beam"], [21, 1, 1, "", "get_face_most_towards_beam"], [22, 1, 1, "", "restore_beams_from_keys"], [23, 1, 1, "", "sha256"], [24, 1, 1, "", "to_json"], [25, 1, 1, "", "to_jsonstring"], [26, 1, 1, "", "validate_data"]], "compas_timber.connections.ConnectionSolver": [[28, 1, 1, "", "find_intersecting_pairs"], [29, 1, 1, "", "find_topology"]], "compas_timber.connections.Joint": [[31, 1, 1, "", "ToString"], [32, 1, 1, "", "add_extensions"], [33, 1, 1, "", "add_features"], [34, 1, 1, "", "check_elements_compatibility"], [35, 1, 1, "", "copy"], [36, 1, 1, "", "create"], [37, 1, 1, "", "element_count_complies"], [38, 1, 1, "", "from_json"], [39, 1, 1, "", "from_jsonstring"], [40, 1, 1, "", "get_face_most_ortho_to_beam"], [41, 1, 1, "", "get_face_most_towards_beam"], [42, 1, 1, "", "restore_beams_from_keys"], [43, 1, 1, "", "sha256"], [44, 1, 1, "", "to_json"], [45, 1, 1, "", "to_jsonstring"], [46, 1, 1, "", "validate_data"]], "compas_timber.connections.JointTopology": [[48, 1, 1, "", "get_name"]], "compas_timber.connections.LButtJoint": [[50, 1, 1, "", "ToString"], [51, 1, 1, "", "add_extensions"], [52, 1, 1, "", "add_features"], [53, 1, 1, "", "check_elements_compatibility"], [54, 1, 1, "", "copy"], [55, 1, 1, "", "create"], [56, 1, 1, "", "element_count_complies"], [57, 1, 1, "", "from_json"], [58, 1, 1, "", "from_jsonstring"], [59, 1, 1, "", "get_face_most_ortho_to_beam"], [60, 1, 1, "", "get_face_most_towards_beam"], [61, 1, 1, "", "restore_beams_from_keys"], [62, 1, 1, "", "sha256"], [63, 1, 1, "", "to_json"], [64, 1, 1, "", "to_jsonstring"], [65, 1, 1, "", "update_beam_roles"], [66, 1, 1, "", "validate_data"]], "compas_timber.connections.LFrenchRidgeLapJoint": [[68, 1, 1, "", "ToString"], [69, 1, 1, "", "add_extensions"], [70, 1, 1, "", "add_features"], [71, 1, 1, "", "check_elements_compatibility"], [72, 1, 1, "", "copy"], [73, 1, 1, "", "create"], [74, 1, 1, "", "element_count_complies"], [75, 1, 1, "", "from_json"], [76, 1, 1, "", "from_jsonstring"], [77, 1, 1, "", "get_face_most_ortho_to_beam"], [78, 1, 1, "", "get_face_most_towards_beam"], [79, 1, 1, "", "restore_beams_from_keys"], [80, 1, 1, "", "sha256"], [81, 1, 1, "", "to_json"], [82, 1, 1, "", "to_jsonstring"], [83, 1, 1, "", "validate_data"]], "compas_timber.connections.LHalfLapJoint": [[85, 1, 1, "", "ToString"], [86, 1, 1, "", "add_extensions"], [87, 1, 1, "", "add_features"], [88, 1, 1, "", "check_elements_compatibility"], [89, 1, 1, "", "copy"], [90, 1, 1, "", "create"], [91, 1, 1, "", "element_count_complies"], [92, 1, 1, "", "from_json"], [93, 1, 1, "", "from_jsonstring"], [94, 1, 1, "", "get_cross_cutting_frame"], [95, 1, 1, "", "get_face_most_ortho_to_beam"], [96, 1, 1, "", "get_face_most_towards_beam"], [97, 1, 1, "", "get_main_cutting_frame"], [98, 1, 1, "", "restore_beams_from_keys"], [99, 1, 1, "", "sha256"], [100, 1, 1, "", "to_json"], [101, 1, 1, "", "to_jsonstring"], [102, 1, 1, "", "validate_data"]], "compas_timber.connections.LMiterJoint": [[104, 1, 1, "", "ToString"], [105, 1, 1, "", "add_extensions"], [106, 1, 1, "", "add_features"], [107, 1, 1, "", "check_elements_compatibility"], [108, 1, 1, "", "copy"], [109, 1, 1, "", "create"], [110, 1, 1, "", "element_count_complies"], [111, 1, 1, "", "from_json"], [112, 1, 1, "", "from_jsonstring"], [113, 1, 1, "", "get_cutting_planes"], [114, 1, 1, "", "get_face_most_ortho_to_beam"], [115, 1, 1, "", "get_face_most_towards_beam"], [116, 1, 1, "", "restore_beams_from_keys"], [117, 1, 1, "", "sha256"], [118, 1, 1, "", "to_json"], [119, 1, 1, "", "to_jsonstring"], [120, 1, 1, "", "validate_data"]], "compas_timber.connections.LapJoint": [[122, 1, 1, "", "ToString"], [123, 1, 1, "", "add_extensions"], [124, 1, 1, "", "add_features"], [125, 1, 1, "", "check_elements_compatibility"], [126, 1, 1, "", "copy"], [127, 1, 1, "", "create"], [128, 1, 1, "", "element_count_complies"], [129, 1, 1, "", "from_json"], [130, 1, 1, "", "from_jsonstring"], [131, 1, 1, "", "get_cross_cutting_frame"], [132, 1, 1, "", "get_face_most_ortho_to_beam"], [133, 1, 1, "", "get_face_most_towards_beam"], [134, 1, 1, "", "get_main_cutting_frame"], [135, 1, 1, "", "restore_beams_from_keys"], [136, 1, 1, "", "sha256"], [137, 1, 1, "", "to_json"], [138, 1, 1, "", "to_jsonstring"], [139, 1, 1, "", "validate_data"]], "compas_timber.connections.NullJoint": [[141, 1, 1, "", "ToString"], [142, 1, 1, "", "add_extensions"], [143, 1, 1, "", "add_features"], [144, 1, 1, "", "check_elements_compatibility"], [145, 1, 1, "", "copy"], [146, 1, 1, "", "create"], [147, 1, 1, "", "element_count_complies"], [148, 1, 1, "", "from_json"], [149, 1, 1, "", "from_jsonstring"], [150, 1, 1, "", "get_face_most_ortho_to_beam"], [151, 1, 1, "", "get_face_most_towards_beam"], [152, 1, 1, "", "restore_beams_from_keys"], [153, 1, 1, "", "sha256"], [154, 1, 1, "", "to_json"], [155, 1, 1, "", "to_jsonstring"], [156, 1, 1, "", "validate_data"]], "compas_timber.connections.TBirdsmouthJoint": [[158, 1, 1, "", "ToString"], [159, 1, 1, "", "add_extensions"], [160, 1, 1, "", "add_features"], [161, 1, 1, "", "check_elements_compatibility"], [162, 1, 1, "", "copy"], [163, 1, 1, "", "create"], [164, 1, 1, "", "element_count_complies"], [165, 1, 1, "", "from_json"], [166, 1, 1, "", "from_jsonstring"], [167, 1, 1, "", "get_face_most_ortho_to_beam"], [168, 1, 1, "", "get_face_most_towards_beam"], [169, 1, 1, "", "restore_beams_from_keys"], [170, 1, 1, "", "sha256"], [171, 1, 1, "", "to_json"], [172, 1, 1, "", "to_jsonstring"], [173, 1, 1, "", "validate_data"]], "compas_timber.connections.TButtJoint": [[175, 1, 1, "", "ToString"], [176, 1, 1, "", "add_extensions"], [177, 1, 1, "", "add_features"], [178, 1, 1, "", "check_elements_compatibility"], [179, 1, 1, "", "copy"], [180, 1, 1, "", "create"], [181, 1, 1, "", "element_count_complies"], [182, 1, 1, "", "from_json"], [183, 1, 1, "", "from_jsonstring"], [184, 1, 1, "", "get_face_most_ortho_to_beam"], [185, 1, 1, "", "get_face_most_towards_beam"], [186, 1, 1, "", "restore_beams_from_keys"], [187, 1, 1, "", "sha256"], [188, 1, 1, "", "to_json"], [189, 1, 1, "", "to_jsonstring"], [190, 1, 1, "", "validate_data"]], "compas_timber.connections.TDovetailJoint": [[192, 1, 1, "", "ToString"], [193, 1, 1, "", "add_extensions"], [194, 1, 1, "", "add_features"], [195, 1, 1, "", "check_elements_compatibility"], [196, 1, 1, "", "copy"], [197, 1, 1, "", "create"], [198, 1, 1, "", "define_dovetail_tool"], [199, 1, 1, "", "element_count_complies"], [200, 1, 1, "", "from_json"], [201, 1, 1, "", "from_jsonstring"], [202, 1, 1, "", "get_face_most_ortho_to_beam"], [203, 1, 1, "", "get_face_most_towards_beam"], [204, 1, 1, "", "restore_beams_from_keys"], [205, 1, 1, "", "sha256"], [206, 1, 1, "", "to_json"], [207, 1, 1, "", "to_jsonstring"], [208, 1, 1, "", "validate_data"]], "compas_timber.connections.THalfLapJoint": [[210, 1, 1, "", "ToString"], [211, 1, 1, "", "add_extensions"], [212, 1, 1, "", "add_features"], [213, 1, 1, "", "check_elements_compatibility"], [214, 1, 1, "", "copy"], [215, 1, 1, "", "create"], [216, 1, 1, "", "element_count_complies"], [217, 1, 1, "", "from_json"], [218, 1, 1, "", "from_jsonstring"], [219, 1, 1, "", "get_cross_cutting_frame"], [220, 1, 1, "", "get_face_most_ortho_to_beam"], [221, 1, 1, "", "get_face_most_towards_beam"], [222, 1, 1, "", "get_main_cutting_frame"], [223, 1, 1, "", "restore_beams_from_keys"], [224, 1, 1, "", "sha256"], [225, 1, 1, "", "to_json"], [226, 1, 1, "", "to_jsonstring"], [227, 1, 1, "", "validate_data"]], "compas_timber.connections.TStepJoint": [[229, 1, 1, "", "ToString"], [230, 1, 1, "", "add_extensions"], [231, 1, 1, "", "add_features"], [232, 1, 1, "", "check_elements_compatibility"], [233, 1, 1, "", "copy"], [234, 1, 1, "", "create"], [235, 1, 1, "", "element_count_complies"], [236, 1, 1, "", "from_json"], [237, 1, 1, "", "from_jsonstring"], [238, 1, 1, "", "get_face_most_ortho_to_beam"], [239, 1, 1, "", "get_face_most_towards_beam"], [240, 1, 1, "", "restore_beams_from_keys"], [241, 1, 1, "", "set_step_depths"], [242, 1, 1, "", "sha256"], [243, 1, 1, "", "to_json"], [244, 1, 1, "", "to_jsonstring"], [245, 1, 1, "", "validate_data"]], "compas_timber.connections.TenonMortiseJoint": [[247, 1, 1, "", "ToString"], [248, 1, 1, "", "add_extensions"], [249, 1, 1, "", "add_features"], [250, 1, 1, "", "check_elements_compatibility"], [251, 1, 1, "", "copy"], [252, 1, 1, "", "create"], [253, 1, 1, "", "element_count_complies"], [254, 1, 1, "", "from_json"], [255, 1, 1, "", "from_jsonstring"], [256, 1, 1, "", "get_face_most_ortho_to_beam"], [257, 1, 1, "", "get_face_most_towards_beam"], [258, 1, 1, "", "restore_beams_from_keys"], [259, 1, 1, "", "set_default_values"], [260, 1, 1, "", "sha256"], [261, 1, 1, "", "to_json"], [262, 1, 1, "", "to_jsonstring"], [263, 1, 1, "", "validate_data"]], "compas_timber.connections.XHalfLapJoint": [[265, 1, 1, "", "ToString"], [266, 1, 1, "", "add_extensions"], [267, 1, 1, "", "add_features"], [268, 1, 1, "", "check_elements_compatibility"], [269, 1, 1, "", "copy"], [270, 1, 1, "", "create"], [271, 1, 1, "", "element_count_complies"], [272, 1, 1, "", "from_json"], [273, 1, 1, "", "from_jsonstring"], [274, 1, 1, "", "get_cross_cutting_frame"], [275, 1, 1, "", "get_face_most_ortho_to_beam"], [276, 1, 1, "", "get_face_most_towards_beam"], [277, 1, 1, "", "get_main_cutting_frame"], [278, 1, 1, "", "restore_beams_from_keys"], [279, 1, 1, "", "sha256"], [280, 1, 1, "", "to_json"], [281, 1, 1, "", "to_jsonstring"], [282, 1, 1, "", "validate_data"]], "compas_timber.design": [[284, 0, 1, "", "CategoryRule"], [292, 0, 1, "", "DebugInfomation"], [297, 0, 1, "", "DirectRule"], [304, 0, 1, "", "FeatureDefinition"], [306, 0, 1, "", "JointDefinition"], [310, 0, 1, "", "JointRule"], [316, 0, 1, "", "SurfaceModel"], [334, 0, 1, "", "TopologyRule"], [341, 2, 1, "", "guess_joint_topology_2beams"], [342, 2, 1, "", "set_default_joints"]], "compas_timber.design.CategoryRule": [[285, 1, 1, "", "ToString"], [286, 1, 1, "", "comply"], [287, 1, 1, "", "get_category_rules"], [288, 1, 1, "", "get_direct_rules"], [289, 1, 1, "", "get_topology_rules"], [290, 1, 1, "", "joints_from_beams_and_rules"], [291, 1, 1, "", "reorder"]], "compas_timber.design.DebugInfomation": [[293, 1, 1, "", "ToString"], [294, 1, 1, "", "add_fastener_error"], [295, 1, 1, "", "add_feature_error"], [296, 1, 1, "", "add_joint_error"]], "compas_timber.design.DirectRule": [[298, 1, 1, "", "ToString"], [299, 1, 1, "", "comply"], [300, 1, 1, "", "get_category_rules"], [301, 1, 1, "", "get_direct_rules"], [302, 1, 1, "", "get_topology_rules"], [303, 1, 1, "", "joints_from_beams_and_rules"]], "compas_timber.design.FeatureDefinition": [[305, 1, 1, "", "ToString"]], "compas_timber.design.JointDefinition": [[307, 1, 1, "", "ToString"], [308, 1, 1, "", "is_identical"], [309, 1, 1, "", "match"]], "compas_timber.design.JointRule": [[311, 1, 1, "", "comply"], [312, 1, 1, "", "get_category_rules"], [313, 1, 1, "", "get_direct_rules"], [314, 1, 1, "", "get_topology_rules"], [315, 1, 1, "", "joints_from_beams_and_rules"]], "compas_timber.design.SurfaceModel": [[317, 1, 1, "", "beam_category_names"], [318, 1, 1, "", "create_model"], [319, 1, 1, "", "cull_overlaps"], [320, 1, 1, "", "distance_between_elements"], [321, 1, 1, "", "generate_frame"], [322, 1, 1, "", "generate_perimeter_beams"], [323, 1, 1, "", "generate_plates"], [324, 1, 1, "", "generate_stud_lines"], [325, 1, 1, "", "generate_studs"], [326, 1, 1, "", "generate_windows"], [327, 1, 1, "", "get_beam_intersections"], [328, 1, 1, "", "get_interior_segment_indices"], [329, 1, 1, "", "offset_elements"], [330, 1, 1, "", "parse_loops"], [331, 1, 1, "", "trim_jack_studs"], [332, 1, 1, "", "trim_king_studs"], [333, 1, 1, "", "trim_studs"]], "compas_timber.design.TopologyRule": [[335, 1, 1, "", "ToString"], [336, 1, 1, "", "comply"], [337, 1, 1, "", "get_category_rules"], [338, 1, 1, "", "get_direct_rules"], [339, 1, 1, "", "get_topology_rules"], [340, 1, 1, "", "joints_from_beams_and_rules"]], "compas_timber.elements": [[343, 0, 1, "", "Beam"], [371, 0, 1, "", "Fastener"], [389, 0, 1, "", "FastenerTimberInterface"], [399, 0, 1, "", "Plate"], [420, 0, 1, "", "TimberElement"], [438, 0, 1, "", "Wall"]], "compas_timber.elements.Beam": [[344, 1, 1, "", "ToString"], [345, 1, 1, "", "add_blank_extension"], [346, 1, 1, "", "add_feature"], [347, 1, 1, "", "add_features"], [348, 1, 1, "", "compute_aabb"], [349, 1, 1, "", "compute_collision_mesh"], [350, 1, 1, "", "compute_geometry"], [351, 1, 1, "", "compute_obb"], [352, 1, 1, "", "compute_worldtransformation"], [353, 1, 1, "", "copy"], [354, 1, 1, "", "endpoint_closest_to_point"], [355, 1, 1, "", "extension_to_plane"], [356, 1, 1, "", "from_centerline"], [357, 1, 1, "", "from_endpoints"], [358, 1, 1, "", "from_json"], [359, 1, 1, "", "from_jsonstring"], [360, 1, 1, "", "opposing_side_index"], [361, 1, 1, "", "remove_blank_extension"], [362, 1, 1, "", "remove_features"], [363, 1, 1, "", "reset"], [364, 1, 1, "", "sha256"], [365, 1, 1, "", "side_as_surface"], [366, 1, 1, "", "to_json"], [367, 1, 1, "", "to_jsonstring"], [368, 1, 1, "", "transform"], [369, 1, 1, "", "transformed"], [370, 1, 1, "", "validate_data"]], "compas_timber.elements.Fastener": [[372, 1, 1, "", "ToString"], [373, 1, 1, "", "add_feature"], [374, 1, 1, "", "compute_aabb"], [375, 1, 1, "", "compute_collision_mesh"], [376, 1, 1, "", "compute_geometry"], [377, 1, 1, "", "compute_obb"], [378, 1, 1, "", "compute_worldtransformation"], [379, 1, 1, "", "copy"], [380, 1, 1, "", "from_json"], [381, 1, 1, "", "from_jsonstring"], [382, 1, 1, "", "reset"], [383, 1, 1, "", "sha256"], [384, 1, 1, "", "to_json"], [385, 1, 1, "", "to_jsonstring"], [386, 1, 1, "", "transform"], [387, 1, 1, "", "transformed"], [388, 1, 1, "", "validate_data"]], "compas_timber.elements.FastenerTimberInterface": [[390, 1, 1, "", "ToString"], [391, 1, 1, "", "copy"], [392, 1, 1, "", "from_json"], [393, 1, 1, "", "from_jsonstring"], [394, 1, 1, "", "get_features"], [395, 1, 1, "", "sha256"], [396, 1, 1, "", "to_json"], [397, 1, 1, "", "to_jsonstring"], [398, 1, 1, "", "validate_data"]], "compas_timber.elements.Plate": [[400, 1, 1, "", "ToString"], [401, 1, 1, "", "add_feature"], [402, 1, 1, "", "add_features"], [403, 1, 1, "", "compute_aabb"], [404, 1, 1, "", "compute_collision_mesh"], [405, 1, 1, "", "compute_geometry"], [406, 1, 1, "", "compute_obb"], [407, 1, 1, "", "compute_worldtransformation"], [408, 1, 1, "", "copy"], [409, 1, 1, "", "from_json"], [410, 1, 1, "", "from_jsonstring"], [411, 1, 1, "", "remove_features"], [412, 1, 1, "", "reset"], [413, 1, 1, "", "set_frame_and_outline"], [414, 1, 1, "", "sha256"], [415, 1, 1, "", "to_json"], [416, 1, 1, "", "to_jsonstring"], [417, 1, 1, "", "transform"], [418, 1, 1, "", "transformed"], [419, 1, 1, "", "validate_data"]], "compas_timber.elements.TimberElement": [[421, 1, 1, "", "ToString"], [422, 1, 1, "", "add_feature"], [423, 1, 1, "", "compute_aabb"], [424, 1, 1, "", "compute_collision_mesh"], [425, 1, 1, "", "compute_geometry"], [426, 1, 1, "", "compute_obb"], [427, 1, 1, "", "compute_worldtransformation"], [428, 1, 1, "", "copy"], [429, 1, 1, "", "from_json"], [430, 1, 1, "", "from_jsonstring"], [431, 1, 1, "", "reset"], [432, 1, 1, "", "sha256"], [433, 1, 1, "", "to_json"], [434, 1, 1, "", "to_jsonstring"], [435, 1, 1, "", "transform"], [436, 1, 1, "", "transformed"], [437, 1, 1, "", "validate_data"]], "compas_timber.elements.Wall": [[439, 1, 1, "", "ToString"], [440, 1, 1, "", "add_feature"], [441, 1, 1, "", "compute_aabb"], [442, 1, 1, "", "compute_collision_mesh"], [443, 1, 1, "", "compute_geometry"], [444, 1, 1, "", "compute_obb"], [445, 1, 1, "", "compute_worldtransformation"], [446, 1, 1, "", "copy"], [447, 1, 1, "", "from_box"], [448, 1, 1, "", "from_json"], [449, 1, 1, "", "from_jsonstring"], [450, 1, 1, "", "reset"], [451, 1, 1, "", "sha256"], [452, 1, 1, "", "to_json"], [453, 1, 1, "", "to_jsonstring"], [454, 1, 1, "", "transform"], [455, 1, 1, "", "transformed"], [456, 1, 1, "", "validate_data"]], "compas_timber.errors": [[457, 3, 1, "", "BeamJoinningError"], [458, 3, 1, "", "FastenerApplicationError"], [459, 3, 1, "", "FeatureApplicationError"]], "compas_timber.fabrication": [[460, 0, 1, "", "BTLxPart"], [463, 0, 1, "", "BTLxProcessing"], [473, 0, 1, "", "BTLxWriter"], [476, 0, 1, "", "DoubleCut"], [489, 0, 1, "", "DovetailMortise"], [505, 0, 1, "", "DovetailTenon"], [521, 0, 1, "", "Drilling"], [534, 0, 1, "", "EdgePositionType"], [535, 0, 1, "", "FrenchRidgeLap"], [549, 0, 1, "", "JackRafterCut"], [562, 0, 1, "", "Lap"], [576, 0, 1, "", "Mortise"], [590, 0, 1, "", "OrientationType"], [591, 0, 1, "", "Slot"], [603, 0, 1, "", "StepJoint"], [618, 0, 1, "", "StepJointNotch"], [633, 0, 1, "", "Tenon"], [647, 0, 1, "", "TenonShapeType"]], "compas_timber.fabrication.BTLxPart": [[461, 1, 1, "", "et_point_vals"], [462, 1, 1, "", "ref_side_from_face"]], "compas_timber.fabrication.BTLxProcessing": [[464, 1, 1, "", "ToString"], [465, 1, 1, "", "add_subprocessing"], [466, 1, 1, "", "copy"], [467, 1, 1, "", "from_json"], [468, 1, 1, "", "from_jsonstring"], [469, 1, 1, "", "sha256"], [470, 1, 1, "", "to_json"], [471, 1, 1, "", "to_jsonstring"], [472, 1, 1, "", "validate_data"]], "compas_timber.fabrication.BTLxWriter": [[474, 1, 1, "", "model_to_xml"], [475, 1, 1, "", "write"]], "compas_timber.fabrication.DoubleCut": [[477, 1, 1, "", "ToString"], [478, 1, 1, "", "add_subprocessing"], [479, 1, 1, "", "apply"], [480, 1, 1, "", "copy"], [481, 1, 1, "", "from_json"], [482, 1, 1, "", "from_jsonstring"], [483, 1, 1, "", "from_planes_and_beam"], [484, 1, 1, "", "planes_from_params_and_beam"], [485, 1, 1, "", "sha256"], [486, 1, 1, "", "to_json"], [487, 1, 1, "", "to_jsonstring"], [488, 1, 1, "", "validate_data"]], "compas_timber.fabrication.DovetailMortise": [[490, 1, 1, "", "ToString"], [491, 1, 1, "", "add_subprocessing"], [492, 1, 1, "", "apply"], [493, 1, 1, "", "copy"], [494, 1, 1, "", "define_dovetail_tool"], [495, 1, 1, "", "dovetail_cutting_frames_from_params_and_beam"], [496, 1, 1, "", "dovetail_volume_from_params_and_beam"], [497, 1, 1, "", "frame_from_params_and_beam"], [498, 1, 1, "", "from_frame_and_beam"], [499, 1, 1, "", "from_json"], [500, 1, 1, "", "from_jsonstring"], [501, 1, 1, "", "sha256"], [502, 1, 1, "", "to_json"], [503, 1, 1, "", "to_jsonstring"], [504, 1, 1, "", "validate_data"]], "compas_timber.fabrication.DovetailTenon": [[506, 1, 1, "", "ToString"], [507, 1, 1, "", "add_subprocessing"], [508, 1, 1, "", "apply"], [509, 1, 1, "", "copy"], [510, 1, 1, "", "define_dovetail_tool"], [511, 1, 1, "", "dovetail_cutting_frames_from_params_and_beam"], [512, 1, 1, "", "dovetail_volume_from_params_and_beam"], [513, 1, 1, "", "frame_from_params_and_beam"], [514, 1, 1, "", "from_json"], [515, 1, 1, "", "from_jsonstring"], [516, 1, 1, "", "from_plane_and_beam"], [517, 1, 1, "", "sha256"], [518, 1, 1, "", "to_json"], [519, 1, 1, "", "to_jsonstring"], [520, 1, 1, "", "validate_data"]], "compas_timber.fabrication.Drilling": [[522, 1, 1, "", "ToString"], [523, 1, 1, "", "add_subprocessing"], [524, 1, 1, "", "apply"], [525, 1, 1, "", "copy"], [526, 1, 1, "", "cylinder_from_params_and_beam"], [527, 1, 1, "", "from_json"], [528, 1, 1, "", "from_jsonstring"], [529, 1, 1, "", "from_line_and_beam"], [530, 1, 1, "", "sha256"], [531, 1, 1, "", "to_json"], [532, 1, 1, "", "to_jsonstring"], [533, 1, 1, "", "validate_data"]], "compas_timber.fabrication.FrenchRidgeLap": [[536, 1, 1, "", "ToString"], [537, 1, 1, "", "add_subprocessing"], [538, 1, 1, "", "apply"], [539, 1, 1, "", "copy"], [540, 1, 1, "", "frame_from_params_and_beam"], [541, 1, 1, "", "from_beam_beam_and_plane"], [542, 1, 1, "", "from_json"], [543, 1, 1, "", "from_jsonstring"], [544, 1, 1, "", "lap_volume_from_params_and_beam"], [545, 1, 1, "", "sha256"], [546, 1, 1, "", "to_json"], [547, 1, 1, "", "to_jsonstring"], [548, 1, 1, "", "validate_data"]], "compas_timber.fabrication.JackRafterCut": [[550, 1, 1, "", "ToString"], [551, 1, 1, "", "add_subprocessing"], [552, 1, 1, "", "apply"], [553, 1, 1, "", "copy"], [554, 1, 1, "", "from_json"], [555, 1, 1, "", "from_jsonstring"], [556, 1, 1, "", "from_plane_and_beam"], [557, 1, 1, "", "plane_from_params_and_beam"], [558, 1, 1, "", "sha256"], [559, 1, 1, "", "to_json"], [560, 1, 1, "", "to_jsonstring"], [561, 1, 1, "", "validate_data"]], "compas_timber.fabrication.Lap": [[563, 1, 1, "", "ToString"], [564, 1, 1, "", "add_subprocessing"], [565, 1, 1, "", "apply"], [566, 1, 1, "", "copy"], [567, 1, 1, "", "from_beam_and_beam"], [568, 1, 1, "", "from_json"], [569, 1, 1, "", "from_jsonstring"], [570, 1, 1, "", "from_plane_and_beam"], [571, 1, 1, "", "sha256"], [572, 1, 1, "", "to_json"], [573, 1, 1, "", "to_jsonstring"], [574, 1, 1, "", "validate_data"], [575, 1, 1, "", "volume_from_params_and_beam"]], "compas_timber.fabrication.Mortise": [[577, 1, 1, "", "ToString"], [578, 1, 1, "", "add_subprocessing"], [579, 1, 1, "", "apply"], [580, 1, 1, "", "copy"], [581, 1, 1, "", "frame_from_params_and_beam"], [582, 1, 1, "", "from_frame_and_beam"], [583, 1, 1, "", "from_json"], [584, 1, 1, "", "from_jsonstring"], [585, 1, 1, "", "sha256"], [586, 1, 1, "", "to_json"], [587, 1, 1, "", "to_jsonstring"], [588, 1, 1, "", "validate_data"], [589, 1, 1, "", "volume_from_params_and_beam"]], "compas_timber.fabrication.Slot": [[592, 1, 1, "", "ToString"], [593, 1, 1, "", "add_subprocessing"], [594, 1, 1, "", "apply"], [595, 1, 1, "", "copy"], [596, 1, 1, "", "from_json"], [597, 1, 1, "", "from_jsonstring"], [598, 1, 1, "", "from_plane_and_beam"], [599, 1, 1, "", "sha256"], [600, 1, 1, "", "to_json"], [601, 1, 1, "", "to_jsonstring"], [602, 1, 1, "", "validate_data"]], "compas_timber.fabrication.StepJoint": [[604, 1, 1, "", "ToString"], [605, 1, 1, "", "add_subprocessing"], [606, 1, 1, "", "add_tenon"], [607, 1, 1, "", "apply"], [608, 1, 1, "", "copy"], [609, 1, 1, "", "from_json"], [610, 1, 1, "", "from_jsonstring"], [611, 1, 1, "", "from_plane_and_beam"], [612, 1, 1, "", "planes_from_params_and_beam"], [613, 1, 1, "", "sha256"], [614, 1, 1, "", "tenon_volume_from_params_and_beam"], [615, 1, 1, "", "to_json"], [616, 1, 1, "", "to_jsonstring"], [617, 1, 1, "", "validate_data"]], "compas_timber.fabrication.StepJointNotch": [[619, 1, 1, "", "ToString"], [620, 1, 1, "", "add_mortise"], [621, 1, 1, "", "add_subprocessing"], [622, 1, 1, "", "apply"], [623, 1, 1, "", "copy"], [624, 1, 1, "", "from_json"], [625, 1, 1, "", "from_jsonstring"], [626, 1, 1, "", "from_plane_and_beam"], [627, 1, 1, "", "mortise_volume_from_params_and_beam"], [628, 1, 1, "", "planes_from_params_and_beam"], [629, 1, 1, "", "sha256"], [630, 1, 1, "", "to_json"], [631, 1, 1, "", "to_jsonstring"], [632, 1, 1, "", "validate_data"]], "compas_timber.fabrication.Tenon": [[634, 1, 1, "", "ToString"], [635, 1, 1, "", "add_subprocessing"], [636, 1, 1, "", "apply"], [637, 1, 1, "", "copy"], [638, 1, 1, "", "frame_from_params_and_beam"], [639, 1, 1, "", "from_json"], [640, 1, 1, "", "from_jsonstring"], [641, 1, 1, "", "from_plane_and_beam"], [642, 1, 1, "", "sha256"], [643, 1, 1, "", "to_json"], [644, 1, 1, "", "to_jsonstring"], [645, 1, 1, "", "validate_data"], [646, 1, 1, "", "volume_from_params_and_beam"]], "compas_timber.ghpython": [[648, 2, 1, "", "add_gh_param"], [649, 2, 1, "", "clear_gh_params"], [650, 2, 1, "", "get_leaf_subclasses"], [651, 2, 1, "", "item_input_valid"], [652, 2, 1, "", "list_input_valid"], [653, 2, 1, "", "manage_dynamic_params"], [654, 2, 1, "", "rename_gh_input"]], "compas_timber.model": [[655, 0, 1, "", "TimberModel"]], "compas_timber.model.TimberModel": [[656, 1, 1, "", "ToString"], [657, 1, 1, "", "add_element"], [658, 1, 1, "", "add_elements"], [659, 1, 1, "", "add_group"], [660, 1, 1, "", "add_group_element"], [661, 1, 1, "", "add_interaction"], [662, 1, 1, "", "add_joint"], [663, 1, 1, "", "add_material"], [664, 1, 1, "", "assign_material"], [665, 1, 1, "", "compute_aabb"], [666, 1, 1, "", "compute_obb"], [667, 1, 1, "", "copy"], [668, 1, 1, "", "element_by_guid"], [669, 1, 1, "", "elements"], [670, 1, 1, "", "elements_connected_by"], [671, 1, 1, "", "from_json"], [672, 1, 1, "", "from_jsonstring"], [673, 1, 1, "", "get_elements_in_group"], [674, 1, 1, "", "has_element"], [675, 1, 1, "", "has_group"], [676, 1, 1, "", "has_interaction"], [677, 1, 1, "", "has_material"], [678, 1, 1, "", "interactions"], [679, 1, 1, "", "materials"], [680, 1, 1, "", "process_joinery"], [681, 1, 1, "", "remove_element"], [682, 1, 1, "", "remove_interaction"], [683, 1, 1, "", "remove_joint"], [684, 1, 1, "", "rotate"], [685, 1, 1, "", "rotated"], [686, 1, 1, "", "scale"], [687, 1, 1, "", "scaled"], [688, 1, 1, "", "set_topologies"], [689, 1, 1, "", "sha256"], [690, 1, 1, "", "to_json"], [691, 1, 1, "", "to_jsonstring"], [692, 1, 1, "", "transform"], [693, 1, 1, "", "transform_numpy"], [694, 1, 1, "", "transformed"], [695, 1, 1, "", "transformed_numpy"], [696, 1, 1, "", "translate"], [697, 1, 1, "", "translated"], [698, 1, 1, "", "validate_data"]], "compas_timber.planning": [[699, 0, 1, "", "Actor"], [701, 0, 1, "", "BuildingPlan"], [711, 0, 1, "", "BuildingPlanParser"], [714, 0, 1, "", "Instruction"], [724, 0, 1, "", "LinearDimension"], [734, 0, 1, "", "Model3d"], [744, 0, 1, "", "SimpleSequenceGenerator"], [745, 0, 1, "", "Step"], [755, 0, 1, "", "Text3d"]], "compas_timber.planning.Actor": [[700, 1, 1, "", "get_name"]], "compas_timber.planning.BuildingPlan": [[702, 1, 1, "", "ToString"], [703, 1, 1, "", "add_step"], [704, 1, 1, "", "copy"], [705, 1, 1, "", "from_json"], [706, 1, 1, "", "from_jsonstring"], [707, 1, 1, "", "sha256"], [708, 1, 1, "", "to_json"], [709, 1, 1, "", "to_jsonstring"], [710, 1, 1, "", "validate_data"]], "compas_timber.planning.BuildingPlanParser": [[712, 1, 1, "", "parse"], [713, 1, 1, "", "serialize"]], "compas_timber.planning.Instruction": [[715, 1, 1, "", "ToString"], [716, 1, 1, "", "copy"], [717, 1, 1, "", "from_json"], [718, 1, 1, "", "from_jsonstring"], [719, 1, 1, "", "sha256"], [720, 1, 1, "", "to_json"], [721, 1, 1, "", "to_jsonstring"], [722, 1, 1, "", "transform"], [723, 1, 1, "", "validate_data"]], "compas_timber.planning.LinearDimension": [[725, 1, 1, "", "ToString"], [726, 1, 1, "", "copy"], [727, 1, 1, "", "from_json"], [728, 1, 1, "", "from_jsonstring"], [729, 1, 1, "", "sha256"], [730, 1, 1, "", "to_json"], [731, 1, 1, "", "to_jsonstring"], [732, 1, 1, "", "transform"], [733, 1, 1, "", "validate_data"]], "compas_timber.planning.Model3d": [[735, 1, 1, "", "ToString"], [736, 1, 1, "", "copy"], [737, 1, 1, "", "from_json"], [738, 1, 1, "", "from_jsonstring"], [739, 1, 1, "", "sha256"], [740, 1, 1, "", "to_json"], [741, 1, 1, "", "to_jsonstring"], [742, 1, 1, "", "transform"], [743, 1, 1, "", "validate_data"]], "compas_timber.planning.Step": [[746, 1, 1, "", "ToString"], [747, 1, 1, "", "copy"], [748, 1, 1, "", "from_json"], [749, 1, 1, "", "from_jsonstring"], [750, 1, 1, "", "sha256"], [751, 1, 1, "", "to_json"], [752, 1, 1, "", "to_jsonstring"], [753, 1, 1, "", "transform"], [754, 1, 1, "", "validate_data"]], "compas_timber.planning.Text3d": [[756, 1, 1, "", "ToString"], [757, 1, 1, "", "copy"], [758, 1, 1, "", "from_json"], [759, 1, 1, "", "from_jsonstring"], [760, 1, 1, "", "sha256"], [761, 1, 1, "", "to_json"], [762, 1, 1, "", "to_jsonstring"], [763, 1, 1, "", "transform"], [764, 1, 1, "", "validate_data"]], "compas_timber.rhino": [[765, 2, 1, "", "find_neighboring_beams"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:exception"}, "terms": {"": [12, 20, 21, 26, 32, 33, 40, 41, 46, 59, 60, 66, 77, 78, 83, 84, 87, 95, 96, 102, 114, 115, 120, 123, 124, 132, 133, 139, 142, 150, 151, 156, 157, 167, 168, 173, 184, 185, 190, 191, 202, 203, 208, 212, 220, 221, 227, 228, 238, 239, 245, 246, 256, 257, 263, 266, 267, 275, 276, 282, 343, 354, 356, 357, 370, 371, 388, 389, 398, 419, 437, 456, 472, 488, 498, 504, 520, 533, 548, 561, 574, 582, 588, 602, 617, 618, 632, 645, 660, 698, 710, 723, 733, 743, 754, 764, 774, 775, 783], "0": [20, 23, 28, 40, 43, 59, 62, 77, 80, 84, 95, 99, 114, 117, 121, 132, 136, 150, 153, 167, 170, 184, 187, 191, 202, 205, 209, 220, 224, 228, 238, 242, 246, 256, 260, 264, 275, 279, 283, 336, 343, 348, 351, 360, 364, 365, 374, 377, 383, 395, 403, 406, 414, 423, 426, 432, 441, 444, 451, 463, 469, 476, 483, 485, 489, 498, 501, 505, 516, 517, 521, 530, 535, 541, 545, 549, 556, 558, 562, 570, 571, 576, 582, 585, 599, 603, 606, 611, 613, 618, 620, 626, 629, 633, 641, 642, 653, 689, 707, 719, 729, 739, 750, 760, 765, 768, 770, 775], "001": 336, "02": 771, "06": [29, 286, 290, 303, 315, 340, 341], "1": [21, 23, 41, 43, 60, 62, 78, 80, 84, 96, 99, 115, 117, 121, 133, 136, 151, 153, 168, 170, 185, 187, 191, 203, 205, 209, 221, 224, 228, 239, 242, 246, 257, 260, 264, 276, 279, 343, 364, 383, 395, 414, 432, 451, 462, 469, 476, 485, 489, 501, 505, 517, 530, 535, 545, 549, 558, 562, 571, 576, 585, 599, 603, 613, 618, 629, 633, 642, 649, 689, 707, 719, 729, 739, 750, 760, 768, 773, 775, 784], "10": [498, 516, 766, 770], "100": 660, "1000": [489, 505, 576, 603, 606, 618, 620, 633], "100000": [476, 489, 505, 535, 549, 562, 576, 603, 618, 633], "15": [498, 516], "17": 771, "179": [476, 489, 505, 535, 549, 562, 576, 603, 618, 633], "180": [489, 576], "1e": [29, 286, 290, 303, 315, 340, 341], "2": [191, 228, 246, 343, 768, 773, 784], "20": [498, 516, 521, 582, 611, 626, 641], "200": 660, "2020": 771, "2022": 766, "2023": 766, "28": [498, 516, 582, 641], "3": [191, 246, 343, 770, 773, 784], "30": [489, 505], "300": 660, "3000": 660, "35": [489, 505], "3d": [724, 734, 769], "4": [191, 246, 343, 768, 773], "40": [498, 516, 582, 641], "5": [84, 121, 209, 264, 343, 360, 365, 463, 489, 505], "50": [516, 521, 641], "5000": [489, 505, 576, 633, 660], "50000": [476, 549, 562, 603, 618], "5281": 766, "6": [343, 399, 462], "7": 770, "7934267": 766, "80": [498, 516, 582, 641], "89": 562, "9": [476, 489, 505, 535, 549, 562, 576, 603, 618, 633], "A": [16, 28, 30, 36, 55, 73, 84, 90, 109, 127, 140, 146, 163, 180, 191, 197, 215, 234, 246, 252, 270, 283, 290, 291, 303, 315, 340, 343, 346, 356, 357, 371, 373, 389, 399, 401, 422, 440, 457, 460, 655, 657, 663, 673, 677, 766, 771, 775, 776, 780], "AND": 771, "AS": 771, "As": 766, "At": 769, "BE": 771, "BUT": 771, "By": [780, 784], "FOR": 771, "For": [48, 283, 680, 700, 769, 783], "IN": 771, "If": [15, 18, 19, 20, 21, 23, 24, 25, 29, 35, 38, 39, 40, 41, 43, 44, 45, 49, 51, 54, 57, 58, 59, 60, 62, 63, 64, 67, 69, 71, 72, 75, 76, 77, 78, 80, 81, 82, 84, 86, 89, 92, 93, 95, 96, 99, 100, 101, 105, 108, 111, 112, 114, 115, 117, 118, 119, 121, 126, 129, 130, 132, 133, 136, 137, 138, 145, 148, 149, 150, 151, 153, 154, 155, 159, 162, 165, 166, 167, 168, 170, 171, 172, 176, 179, 182, 183, 184, 185, 187, 188, 189, 193, 196, 200, 201, 202, 203, 205, 206, 207, 209, 211, 214, 217, 218, 220, 221, 224, 225, 226, 228, 230, 232, 233, 236, 237, 238, 239, 242, 243, 244, 248, 251, 254, 255, 256, 257, 260, 261, 262, 264, 269, 272, 273, 275, 276, 279, 280, 281, 350, 353, 358, 359, 362, 364, 366, 367, 379, 380, 381, 383, 384, 385, 391, 392, 393, 395, 396, 397, 405, 408, 409, 410, 411, 414, 415, 416, 425, 428, 429, 430, 432, 433, 434, 443, 446, 448, 449, 451, 452, 453, 466, 467, 468, 469, 470, 471, 479, 480, 481, 482, 485, 486, 487, 492, 493, 499, 500, 501, 502, 503, 508, 509, 514, 515, 517, 518, 519, 521, 524, 525, 527, 528, 530, 531, 532, 538, 539, 542, 543, 545, 546, 547, 552, 553, 554, 555, 558, 559, 560, 565, 566, 568, 569, 571, 572, 573, 579, 580, 583, 584, 585, 586, 587, 594, 595, 596, 597, 599, 600, 601, 607, 608, 609, 610, 613, 615, 616, 618, 622, 623, 624, 625, 629, 630, 631, 636, 637, 639, 640, 642, 643, 644, 657, 658, 660, 661, 664, 667, 671, 672, 689, 690, 691, 704, 705, 706, 707, 708, 709, 716, 717, 718, 719, 720, 721, 726, 727, 728, 729, 730, 731, 736, 737, 738, 739, 740, 741, 747, 748, 749, 750, 751, 752, 757, 758, 759, 760, 761, 762, 765, 766, 775, 776, 780, 781], "In": [13, 283, 521, 769, 770], "It": [70, 371, 438, 618, 769, 772, 774, 775, 780, 781, 783], "NO": 771, "NOT": 771, "OF": 771, "OR": 771, "Of": [20, 21, 40, 41, 59, 60, 77, 78, 95, 96, 114, 115, 132, 133, 150, 151, 167, 168, 184, 185, 202, 203, 220, 221, 238, 239, 256, 257, 275, 276], "One": [48, 700, 745], "THE": 771, "TO": 771, "The": [1, 9, 10, 15, 16, 18, 19, 20, 21, 24, 25, 26, 30, 35, 36, 38, 39, 40, 41, 44, 45, 46, 49, 54, 55, 57, 58, 59, 60, 63, 64, 66, 67, 72, 73, 75, 76, 77, 78, 81, 82, 83, 84, 89, 90, 92, 93, 95, 96, 100, 101, 102, 108, 109, 111, 112, 114, 115, 118, 119, 120, 121, 126, 127, 129, 130, 132, 133, 137, 138, 139, 145, 146, 148, 149, 150, 151, 154, 155, 156, 162, 163, 165, 166, 167, 168, 171, 172, 173, 174, 179, 180, 182, 183, 184, 185, 188, 189, 190, 191, 196, 197, 198, 200, 201, 202, 203, 206, 207, 208, 209, 214, 215, 217, 218, 220, 221, 225, 226, 227, 233, 234, 236, 237, 238, 239, 243, 244, 245, 246, 251, 252, 254, 255, 256, 257, 261, 262, 263, 264, 269, 270, 272, 273, 275, 276, 280, 281, 282, 283, 290, 291, 303, 315, 316, 334, 340, 343, 345, 347, 348, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 365, 366, 367, 368, 369, 370, 371, 374, 375, 377, 379, 380, 381, 384, 385, 386, 387, 388, 389, 391, 392, 393, 396, 397, 398, 399, 402, 403, 404, 406, 408, 409, 410, 411, 415, 416, 417, 418, 419, 423, 424, 426, 428, 429, 430, 433, 434, 435, 436, 437, 441, 442, 444, 446, 448, 449, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 508, 509, 510, 512, 513, 514, 515, 516, 518, 519, 520, 521, 524, 525, 526, 527, 528, 529, 531, 532, 533, 535, 538, 539, 540, 541, 542, 543, 544, 546, 547, 548, 549, 552, 553, 554, 555, 556, 557, 559, 560, 561, 562, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 579, 580, 581, 582, 583, 584, 586, 587, 588, 589, 590, 594, 595, 596, 597, 598, 600, 601, 602, 603, 606, 607, 608, 609, 610, 611, 612, 614, 615, 616, 617, 618, 620, 622, 623, 624, 625, 626, 627, 628, 630, 631, 632, 633, 636, 637, 638, 639, 640, 641, 643, 644, 645, 646, 648, 649, 653, 654, 655, 657, 658, 659, 660, 661, 664, 667, 668, 670, 671, 672, 673, 674, 675, 676, 680, 681, 683, 684, 685, 686, 687, 690, 691, 692, 693, 694, 695, 696, 697, 698, 704, 705, 706, 708, 709, 710, 716, 717, 718, 720, 721, 723, 726, 727, 728, 730, 731, 733, 736, 737, 738, 740, 741, 743, 747, 748, 749, 751, 752, 754, 757, 758, 759, 761, 762, 764, 765, 771, 772, 774, 775, 779, 780, 781, 783, 784], "Then": 772, "There": [767, 774, 780, 784], "These": [389, 774, 780], "To": [22, 42, 770, 772, 773, 781, 784], "WITH": 771, "_": [443, 774], "__from_data__": [26, 46, 66, 83, 102, 120, 139, 156, 173, 190, 208, 227, 245, 263, 282, 370, 388, 398, 419, 437, 456, 472, 488, 504, 520, 533, 548, 561, 574, 588, 602, 617, 632, 645, 698, 710, 723, 733, 743, 754, 764], "__init__": 773, "aabb": [283, 343, 348, 374, 399, 403, 423, 441], "abl": [12, 32, 33, 87, 123, 124, 142, 212, 266, 267], "about": [457, 769], "abov": [771, 780], "abstract": [121, 371, 420], "accord": [291, 343, 774], "accross": 598, "acknowledg": 766, "act": 460, "action": 771, "activ": [769, 770, 775, 781, 783], "actor": [745, 769], "actual": [304, 306, 354], "ad": [16, 30, 36, 55, 69, 70, 73, 90, 109, 127, 146, 163, 180, 197, 215, 234, 246, 252, 270, 343, 347, 399, 402, 657, 658, 659, 660, 765, 776], "adapt": 13, "add": [12, 13, 32, 33, 51, 52, 69, 70, 86, 87, 105, 106, 123, 124, 142, 143, 159, 160, 176, 177, 193, 194, 211, 212, 230, 231, 248, 249, 266, 267, 345, 346, 347, 373, 394, 401, 402, 422, 440, 465, 478, 491, 507, 523, 537, 551, 564, 578, 593, 605, 606, 620, 621, 635, 648, 657, 658, 659, 660, 661, 662, 663, 680, 772, 773, 781, 783, 784], "add_beam": 768, "add_el": 660, "add_extens": 70, "add_gh_param": 769, "addit": [28, 30, 659, 772, 774, 775, 779], "adjac": [16, 36, 55, 73, 90, 109, 127, 146, 163, 180, 197, 215, 234, 252, 270], "adjust": 783, "affect": [12, 32, 33, 87, 123, 124, 142, 212, 266, 267], "after": [61, 69, 70, 79, 98, 116, 135, 152, 169, 186, 204, 223, 240, 258, 278, 479, 492, 508, 524, 538, 552, 565, 579, 594, 607, 622, 636], "against": [26, 46, 66, 83, 102, 120, 139, 156, 173, 190, 208, 227, 245, 263, 282, 370, 388, 398, 419, 437, 456, 472, 488, 504, 520, 533, 548, 561, 574, 588, 602, 617, 632, 645, 698, 710, 723, 733, 743, 754, 764], "aka": 316, "aleksandra": 766, "algorithm": [23, 43, 62, 80, 99, 117, 136, 153, 170, 187, 205, 224, 242, 260, 279, 283, 364, 383, 395, 414, 432, 451, 469, 485, 501, 517, 530, 545, 558, 571, 585, 599, 613, 629, 642, 689, 707, 719, 729, 739, 750, 760], "align": [67, 283, 343, 348, 374, 399, 403, 423, 441, 665, 772, 783], "all": [20, 21, 40, 41, 59, 60, 77, 78, 95, 96, 114, 115, 132, 133, 150, 151, 167, 168, 184, 185, 202, 203, 220, 221, 238, 239, 256, 257, 275, 276, 355, 362, 363, 382, 389, 411, 412, 420, 431, 450, 649, 653, 655, 669, 673, 678, 679, 680, 692, 765, 771, 774, 776, 780, 782], "allow": [16, 36, 55, 73, 84, 90, 109, 121, 127, 146, 163, 180, 197, 209, 215, 234, 252, 264, 270, 291, 292, 304, 306, 355, 655, 745, 776], "along": [157, 174, 191, 209, 228, 246, 264, 343, 489, 498, 516, 576, 582, 641, 780], "alreadi": [657, 660], "also": [343, 766, 769, 772, 774, 775, 780], "alt": 529, "amount": [283, 345, 355, 765], "an": [10, 15, 16, 18, 19, 24, 25, 26, 28, 35, 36, 38, 39, 44, 45, 46, 49, 54, 55, 57, 58, 63, 64, 66, 67, 72, 73, 75, 76, 81, 82, 83, 84, 89, 90, 92, 93, 100, 101, 102, 103, 108, 109, 111, 112, 118, 119, 120, 121, 126, 127, 129, 130, 137, 138, 139, 140, 145, 146, 148, 149, 154, 155, 156, 157, 162, 163, 165, 166, 171, 172, 173, 174, 179, 180, 182, 183, 188, 189, 190, 191, 196, 197, 200, 201, 206, 207, 208, 209, 214, 215, 217, 218, 225, 226, 227, 228, 233, 234, 236, 237, 243, 244, 245, 246, 251, 252, 254, 255, 261, 262, 263, 264, 269, 270, 272, 273, 280, 281, 282, 343, 353, 358, 359, 366, 367, 370, 371, 379, 380, 381, 384, 385, 388, 389, 391, 392, 393, 396, 397, 398, 399, 408, 409, 410, 415, 416, 419, 420, 428, 429, 430, 433, 434, 437, 438, 446, 448, 449, 452, 453, 456, 457, 459, 466, 467, 468, 470, 471, 472, 474, 480, 481, 482, 486, 487, 488, 493, 499, 500, 502, 503, 504, 509, 514, 515, 516, 518, 519, 520, 525, 527, 528, 531, 532, 533, 539, 542, 543, 546, 547, 548, 553, 554, 555, 559, 560, 561, 566, 568, 569, 572, 573, 574, 580, 583, 584, 586, 587, 588, 595, 596, 597, 600, 601, 602, 608, 609, 610, 615, 616, 617, 623, 624, 625, 630, 631, 632, 637, 639, 640, 641, 643, 644, 645, 657, 660, 661, 662, 664, 667, 671, 672, 676, 681, 690, 691, 698, 699, 704, 705, 706, 708, 709, 710, 716, 717, 718, 720, 721, 723, 726, 727, 728, 730, 731, 733, 736, 737, 738, 740, 741, 743, 747, 748, 749, 751, 752, 754, 757, 758, 759, 761, 762, 764, 766, 767, 769, 770, 771, 772, 774, 775, 780], "analysi": 769, "angl": [103, 191, 198, 476, 489, 494, 498, 505, 510, 516, 521, 535, 549, 562, 576, 582, 633, 641, 684, 685, 780], "angle_1": 476, "angle_2": 476, "ani": [24, 25, 26, 44, 45, 46, 63, 64, 66, 81, 82, 83, 100, 101, 102, 118, 119, 120, 137, 138, 139, 140, 143, 154, 155, 156, 171, 172, 173, 188, 189, 190, 206, 207, 208, 225, 226, 227, 243, 244, 245, 261, 262, 263, 280, 281, 282, 366, 367, 370, 384, 385, 388, 396, 397, 398, 415, 416, 419, 433, 434, 437, 452, 453, 456, 470, 471, 472, 486, 487, 488, 492, 502, 503, 504, 508, 518, 519, 520, 531, 532, 533, 546, 547, 548, 559, 560, 561, 572, 573, 574, 579, 586, 587, 588, 600, 601, 602, 607, 615, 616, 617, 622, 630, 631, 632, 636, 643, 644, 645, 690, 691, 698, 708, 709, 710, 720, 721, 723, 730, 731, 733, 740, 741, 743, 751, 752, 754, 761, 762, 764, 767, 771, 779, 780, 784], "anna": 766, "anoth": [174, 209, 264], "apart": 28, "api": [769, 772], "apolinarska": 766, "append": 773, "appli": [12, 32, 33, 87, 123, 124, 142, 191, 212, 246, 266, 267, 290, 303, 304, 315, 334, 340, 368, 369, 386, 387, 389, 417, 418, 435, 436, 454, 455, 457, 458, 459, 460, 570, 673, 692, 773, 780, 784], "applic": [191, 246, 292, 782], "appropri": 371, "ar": [11, 14, 16, 20, 21, 22, 28, 29, 31, 34, 36, 40, 41, 42, 50, 53, 55, 59, 60, 67, 68, 71, 73, 77, 78, 85, 88, 90, 95, 96, 104, 107, 109, 114, 115, 122, 125, 127, 132, 133, 141, 144, 146, 150, 151, 158, 161, 163, 167, 168, 175, 178, 180, 184, 185, 192, 195, 197, 202, 203, 210, 213, 215, 220, 221, 228, 229, 232, 234, 238, 239, 241, 247, 250, 252, 256, 257, 259, 265, 268, 270, 275, 276, 283, 291, 309, 344, 372, 389, 390, 400, 421, 439, 464, 477, 490, 506, 522, 536, 550, 563, 577, 592, 604, 619, 633, 634, 641, 656, 661, 664, 702, 715, 725, 735, 745, 746, 756, 767, 773, 774, 775, 778, 779, 780, 781, 783, 784], "argument": [16, 334, 659], "aris": 771, "around": [191, 246, 521, 775], "as_str": [23, 43, 62, 80, 99, 117, 136, 153, 170, 187, 205, 224, 242, 260, 279, 364, 383, 395, 414, 432, 451, 469, 485, 501, 517, 530, 545, 558, 571, 585, 599, 613, 629, 642, 689, 707, 719, 729, 739, 750, 760], "assembl": 745, "assembli": [316, 768, 769, 776, 782], "assign": [284, 334, 655, 657, 664, 780, 783], "associ": [10, 22, 42, 49, 67, 84, 103, 121, 140, 157, 174, 191, 209, 228, 246, 264, 745, 771], "assum": 389, "attach": [20, 21, 40, 41, 59, 60, 77, 78, 95, 96, 114, 115, 132, 133, 150, 151, 167, 168, 184, 185, 202, 203, 220, 221, 238, 239, 256, 257, 275, 276, 284], "attempt": [389, 782], "attr": [460, 659], "attr1nam": 774, "attr1value_attr2nam": 774, "attr2valu": 774, "attribut": [10, 30, 47, 49, 67, 84, 103, 121, 140, 157, 174, 191, 228, 246, 259, 284, 291, 292, 316, 343, 371, 389, 399, 420, 457, 458, 459, 460, 463, 534, 590, 647, 655, 659, 744, 745, 769, 772, 773, 775], "author": [766, 771], "autom": 772, "automat": [51, 52, 86, 105, 106, 159, 160, 176, 177, 191, 193, 194, 211, 230, 231, 246, 248, 249, 489, 498, 505, 516, 576, 582, 633, 641, 647, 783], "avail": 283, "avoid": [22, 42, 348, 351, 374, 377, 403, 406, 423, 426, 441, 444], "awai": 590, "axi": [191, 246, 283, 343, 348, 356, 357, 374, 399, 403, 423, 441, 489, 498, 505, 521, 562, 576, 582, 633, 665, 684, 685, 775, 779, 783], "b": [661, 676, 682], "backend": 769, "bake": 772, "bakewithboxmap": 783, "ball": 10, "ball_diamet": 10, "ballnodejoint": [389, 769], "base": [10, 27, 30, 47, 49, 65, 67, 84, 103, 121, 140, 157, 174, 191, 198, 209, 228, 241, 246, 264, 284, 292, 297, 304, 306, 310, 316, 334, 343, 350, 352, 371, 378, 389, 399, 405, 407, 420, 425, 427, 438, 443, 445, 457, 458, 459, 460, 462, 463, 473, 476, 489, 494, 505, 510, 521, 534, 535, 549, 562, 576, 590, 591, 603, 618, 633, 647, 655, 680, 684, 685, 699, 701, 711, 714, 724, 734, 744, 745, 755, 781, 782, 784], "base_interfac": 10, "basic": 769, "beam": [10, 12, 13, 14, 16, 20, 21, 22, 27, 28, 29, 30, 32, 33, 34, 36, 40, 41, 42, 49, 51, 52, 53, 55, 59, 60, 61, 65, 67, 69, 70, 73, 77, 78, 79, 84, 86, 87, 88, 90, 95, 96, 98, 103, 105, 106, 107, 109, 114, 115, 116, 121, 123, 124, 125, 127, 132, 133, 135, 140, 142, 143, 144, 146, 150, 151, 152, 157, 159, 160, 161, 163, 167, 168, 169, 174, 176, 177, 178, 180, 184, 185, 186, 191, 193, 194, 195, 197, 202, 203, 204, 209, 211, 212, 213, 215, 220, 221, 223, 228, 230, 231, 234, 238, 239, 240, 246, 248, 249, 250, 252, 256, 257, 258, 264, 266, 267, 268, 270, 275, 276, 278, 283, 292, 316, 420, 438, 457, 460, 462, 463, 476, 479, 483, 484, 489, 492, 495, 496, 497, 498, 505, 508, 511, 512, 513, 516, 524, 526, 529, 535, 538, 540, 541, 544, 549, 552, 556, 557, 562, 565, 567, 570, 575, 576, 579, 581, 582, 589, 590, 594, 598, 603, 607, 611, 612, 614, 618, 620, 622, 626, 627, 628, 633, 636, 638, 641, 646, 655, 660, 668, 680, 734, 765, 768, 769, 772, 774, 779, 780, 781, 783, 784], "beam_a": [20, 21, 29, 40, 41, 59, 60, 67, 77, 78, 95, 96, 103, 114, 115, 132, 133, 140, 150, 151, 167, 168, 184, 185, 202, 203, 220, 221, 238, 239, 256, 257, 275, 276, 660], "beam_a_kei": 655, "beam_b": [20, 21, 29, 40, 41, 59, 60, 67, 77, 78, 95, 96, 103, 114, 115, 132, 133, 140, 150, 151, 167, 168, 184, 185, 202, 203, 220, 221, 238, 239, 256, 257, 275, 276], "beam_b_kei": 655, "beam_def": 327, "beam_fac": 462, "beam_width": [316, 776], "beama": 341, "beamb": 341, "beamdefinit": 316, "beamjoiningerror": 292, "beamjoinningerror": [1, 12, 14, 32, 33, 34, 51, 53, 69, 71, 86, 87, 88, 105, 107, 123, 124, 125, 142, 144, 159, 161, 176, 178, 193, 195, 211, 212, 213, 230, 232, 248, 250, 266, 267, 268, 769], "becaus": 780, "been": [16, 36, 55, 69, 70, 73, 90, 109, 127, 146, 163, 180, 197, 215, 234, 252, 270, 657, 745], "befor": [16, 36, 55, 73, 90, 109, 127, 146, 163, 180, 197, 215, 234, 252, 270, 657], "being": 769, "belong": [16, 36, 55, 73, 90, 109, 127, 146, 163, 180, 197, 215, 234, 252, 270], "between": [10, 67, 84, 103, 121, 209, 264, 316, 389, 462, 489, 505, 576, 633, 655, 661, 676, 678, 682, 774, 776, 780, 784], "birdsmouth": [157, 780], "bisector": [103, 780], "bit": 776, "bitmap": 783, "blank": [343, 345, 361, 460, 540, 680, 775], "blank_fram": 460, "blank_length": 460, "blender": 767, "bodi": 438, "bool": [15, 20, 21, 23, 24, 25, 28, 35, 40, 41, 43, 44, 45, 49, 54, 59, 60, 62, 63, 64, 67, 72, 77, 78, 80, 81, 82, 84, 89, 95, 96, 99, 100, 101, 108, 114, 115, 117, 118, 119, 121, 126, 132, 133, 136, 137, 138, 145, 150, 151, 153, 154, 155, 162, 167, 168, 170, 171, 172, 179, 184, 185, 187, 188, 189, 196, 202, 203, 205, 206, 207, 209, 214, 220, 221, 224, 225, 226, 228, 233, 238, 239, 242, 243, 244, 251, 256, 257, 260, 261, 262, 264, 269, 275, 276, 279, 280, 281, 286, 299, 311, 336, 350, 353, 364, 366, 367, 379, 383, 384, 385, 389, 391, 395, 396, 397, 405, 408, 414, 415, 416, 420, 425, 428, 432, 433, 434, 443, 446, 451, 452, 453, 466, 469, 470, 471, 480, 485, 486, 487, 489, 493, 501, 502, 503, 505, 509, 517, 518, 519, 521, 525, 530, 531, 532, 535, 539, 545, 546, 547, 553, 558, 559, 560, 562, 566, 571, 572, 573, 576, 580, 585, 586, 587, 595, 599, 600, 601, 608, 613, 615, 616, 618, 623, 629, 630, 631, 633, 637, 641, 642, 643, 644, 667, 674, 675, 676, 677, 689, 690, 691, 704, 707, 708, 709, 716, 719, 720, 721, 726, 729, 730, 731, 736, 739, 740, 741, 745, 747, 750, 751, 752, 757, 760, 761, 762], "boolean": [389, 772, 776, 779, 781], "both": [52, 106, 160, 177, 194, 231, 246, 249, 661, 664], "bottom": [489, 505, 516, 576, 633, 641, 780], "bound": [283, 343, 348, 351, 374, 377, 399, 403, 406, 423, 426, 441, 444, 665, 666, 765], "box": [283, 343, 348, 351, 374, 377, 399, 403, 406, 423, 426, 441, 444, 447, 460, 575, 627, 665, 666, 745, 765, 772, 775], "boxvolum": 575, "bracket": 371, "brep": [350, 399, 405, 425, 443, 479, 492, 496, 508, 512, 524, 538, 544, 552, 565, 579, 589, 594, 607, 614, 622, 636, 646, 769, 783], "brepdrillholefeatur": 779, "brepsubtractionfeatur": 779, "btlx": [343, 460, 462, 463, 473, 475, 769, 772], "btlx_2_1_0": 773, "btlx_process": 773, "btlxjoint": 773, "btlxpart": [769, 773], "btlxprocess": [476, 489, 498, 505, 521, 535, 549, 562, 576, 582, 591, 603, 618, 633, 769, 773], "btlxwriter": 769, "build": [701, 711, 712, 713, 744, 745, 770, 784], "building_plan": 713, "buildingplan": [712, 713, 744, 769], "buildingplanpars": 769, "built": [769, 772], "butt": [49, 174, 342, 776], "byte": [23, 43, 62, 80, 99, 117, 136, 153, 170, 187, 205, 224, 242, 260, 279, 364, 383, 395, 414, 432, 451, 469, 485, 501, 517, 530, 545, 558, 571, 585, 599, 613, 629, 642, 689, 707, 719, 729, 739, 750, 760], "c": [770, 771], "cad": [745, 767], "calcul": [12, 20, 21, 32, 33, 40, 41, 51, 59, 60, 69, 77, 78, 86, 87, 95, 96, 105, 114, 115, 123, 124, 132, 133, 142, 150, 151, 159, 167, 168, 176, 184, 185, 193, 202, 203, 211, 212, 220, 221, 230, 238, 239, 248, 256, 257, 266, 267, 275, 276, 457, 484, 495, 496, 497, 511, 512, 513, 540, 544, 557, 575, 581, 589, 612, 614, 627, 628, 638, 646, 655, 680, 688], "call": [16, 22, 36, 42, 51, 52, 55, 69, 70, 73, 86, 90, 105, 106, 109, 127, 146, 159, 160, 163, 176, 177, 180, 193, 194, 197, 211, 215, 230, 231, 234, 248, 249, 252, 270, 773, 775], "callabl": 673, "can": [26, 46, 66, 67, 83, 102, 120, 139, 140, 156, 173, 190, 191, 208, 227, 245, 263, 282, 290, 303, 315, 340, 370, 388, 389, 398, 419, 420, 437, 456, 457, 472, 488, 504, 516, 520, 529, 533, 548, 561, 574, 588, 602, 617, 632, 641, 645, 657, 698, 701, 710, 723, 733, 743, 745, 754, 764, 767, 772, 773, 775, 780, 784], "cannot": [458, 459, 775], "canva": 780, "care": 784, "casa": 766, "case": [498, 582, 776, 781], "categori": [284, 291, 774, 775, 784], "category_b": 291, "categoryrul": [316, 769], "catergory_a": 291, "caus": 529, "caviti": 316, "cd": 770, "center": [20, 21, 40, 41, 59, 60, 77, 78, 95, 96, 114, 115, 132, 133, 150, 151, 167, 168, 184, 185, 202, 203, 220, 221, 238, 239, 256, 257, 275, 276, 655, 766], "center_of_mass": 655, "centerlin": [20, 21, 40, 41, 59, 60, 77, 78, 95, 96, 103, 114, 115, 132, 133, 150, 151, 157, 167, 168, 184, 185, 191, 202, 203, 220, 221, 228, 238, 239, 246, 256, 257, 275, 276, 316, 343, 354, 356, 357, 772, 774, 775, 783], "centerline_end": 343, "centerline_start": 343, "centr": 780, "centrelin": 775, "chamfer": [633, 641], "chang": [529, 780], "charg": 771, "check": [14, 34, 53, 71, 88, 107, 125, 144, 161, 178, 195, 213, 232, 250, 268, 674, 675, 680, 765, 769], "checkstandardattribut": 774, "chen": 766, "chosen": [20, 21, 40, 41, 59, 60, 77, 78, 95, 96, 114, 115, 132, 133, 150, 151, 167, 168, 184, 185, 202, 203, 220, 221, 238, 239, 256, 257, 275, 276], "circular": [22, 42], "cite": 769, "cl": [15, 35, 54, 72, 89, 108, 126, 145, 162, 179, 196, 214, 233, 251, 269, 334, 353, 379, 391, 408, 428, 446, 466, 480, 493, 509, 525, 539, 553, 566, 580, 595, 608, 623, 637, 650, 667, 704, 716, 726, 736, 747, 757], "claim": 771, "class": [10, 11, 27, 30, 31, 47, 49, 50, 67, 68, 84, 85, 103, 104, 121, 122, 140, 141, 157, 158, 174, 175, 191, 192, 209, 210, 228, 229, 246, 247, 264, 265, 284, 292, 297, 304, 306, 310, 316, 334, 343, 344, 371, 372, 389, 390, 399, 400, 420, 421, 438, 439, 458, 460, 463, 464, 473, 476, 477, 489, 490, 505, 506, 521, 522, 534, 535, 536, 549, 550, 562, 563, 576, 577, 590, 591, 592, 603, 604, 618, 619, 626, 633, 634, 647, 655, 656, 662, 692, 699, 701, 702, 711, 714, 715, 724, 725, 734, 735, 744, 745, 746, 755, 756, 769, 773], "classmethod": [16, 17, 18, 19, 26, 28, 36, 37, 38, 39, 46, 48, 55, 56, 57, 58, 66, 73, 74, 75, 76, 83, 90, 91, 92, 93, 102, 109, 110, 111, 112, 120, 127, 128, 129, 130, 139, 146, 147, 148, 149, 156, 163, 164, 165, 166, 173, 180, 181, 182, 183, 190, 197, 199, 200, 201, 208, 215, 216, 217, 218, 227, 234, 235, 236, 237, 245, 252, 253, 254, 255, 263, 270, 271, 272, 273, 282, 317, 356, 357, 358, 359, 370, 380, 381, 388, 392, 393, 398, 409, 410, 419, 429, 430, 437, 447, 448, 449, 456, 467, 468, 472, 474, 475, 481, 482, 483, 488, 494, 498, 499, 500, 504, 510, 514, 515, 516, 520, 527, 528, 529, 533, 541, 542, 543, 548, 554, 555, 556, 561, 567, 568, 569, 570, 574, 582, 583, 584, 588, 596, 597, 598, 602, 609, 610, 611, 617, 624, 625, 626, 632, 639, 640, 641, 645, 671, 672, 698, 700, 705, 706, 710, 712, 713, 717, 718, 723, 727, 728, 733, 737, 738, 743, 748, 749, 754, 758, 759, 764], "clean": 780, "clear": [371, 649, 653], "clear_gh_param": 769, "clearli": 389, "click": 780, "clone": 770, "closer": 354, "closest": [20, 21, 40, 41, 59, 60, 77, 78, 95, 96, 114, 115, 132, 133, 150, 151, 167, 168, 184, 185, 202, 203, 220, 221, 238, 239, 256, 257, 275, 276, 776], "clt": 399, "code": [16, 36, 55, 73, 90, 109, 127, 146, 163, 180, 197, 215, 234, 252, 270, 767, 769], "collect": [701, 765, 781], "collis": [349, 375, 404, 424, 442], "colon": 774, "com": [766, 770, 773], "combin": 228, "common": 121, "compa": [15, 18, 19, 23, 35, 38, 39, 43, 54, 57, 58, 62, 72, 75, 76, 80, 89, 92, 93, 99, 108, 111, 112, 117, 126, 129, 130, 136, 145, 148, 149, 153, 162, 165, 166, 170, 179, 182, 183, 187, 196, 200, 201, 205, 214, 217, 218, 224, 233, 236, 237, 242, 251, 254, 255, 260, 269, 272, 273, 279, 316, 343, 349, 350, 351, 352, 353, 358, 359, 364, 368, 369, 374, 375, 377, 378, 379, 380, 381, 383, 386, 387, 389, 391, 392, 393, 395, 404, 405, 406, 407, 408, 409, 410, 414, 417, 418, 423, 424, 425, 426, 427, 428, 429, 430, 432, 435, 436, 441, 442, 443, 444, 445, 446, 448, 449, 451, 454, 455, 466, 467, 468, 469, 480, 481, 482, 485, 492, 493, 495, 496, 497, 499, 500, 501, 508, 509, 512, 513, 514, 515, 517, 524, 525, 526, 527, 528, 529, 530, 539, 540, 542, 543, 544, 545, 553, 554, 555, 557, 558, 566, 568, 569, 571, 575, 579, 580, 581, 583, 584, 585, 589, 595, 596, 597, 599, 607, 608, 609, 610, 612, 613, 614, 623, 624, 625, 626, 627, 628, 629, 636, 637, 638, 639, 640, 642, 646, 665, 666, 667, 671, 672, 684, 685, 689, 692, 696, 697, 704, 705, 706, 707, 711, 716, 717, 718, 719, 726, 727, 728, 729, 736, 737, 738, 739, 745, 747, 748, 749, 750, 757, 758, 759, 760, 766, 772, 776, 778, 782], "compact": [24, 25, 44, 45, 63, 64, 81, 82, 100, 101, 118, 119, 137, 138, 154, 155, 171, 172, 188, 189, 206, 207, 225, 226, 243, 244, 261, 262, 280, 281, 366, 367, 384, 385, 396, 397, 415, 416, 433, 434, 452, 453, 470, 471, 486, 487, 502, 503, 518, 519, 531, 532, 546, 547, 559, 560, 572, 573, 586, 587, 600, 601, 615, 616, 630, 631, 643, 644, 690, 691, 708, 709, 720, 721, 730, 731, 740, 741, 751, 752, 761, 762], "comparison": [23, 43, 62, 80, 99, 117, 136, 153, 170, 187, 205, 224, 242, 260, 279, 364, 383, 395, 414, 432, 451, 469, 485, 501, 517, 530, 545, 558, 571, 585, 599, 613, 629, 642, 689, 707, 719, 729, 739, 750, 760], "compas_model": [369, 387, 418, 436, 455, 660, 670, 673, 675, 744], "compas_rhino": 770, "compas_timb": [0, 10, 16, 22, 27, 30, 36, 42, 47, 49, 55, 67, 73, 84, 90, 103, 109, 121, 127, 140, 146, 157, 163, 174, 180, 191, 197, 209, 215, 228, 234, 246, 252, 264, 270, 283, 284, 292, 297, 304, 306, 310, 316, 334, 341, 342, 343, 371, 389, 399, 420, 438, 457, 458, 459, 460, 463, 473, 476, 479, 484, 489, 492, 495, 496, 497, 505, 508, 512, 513, 521, 524, 526, 529, 534, 535, 538, 540, 544, 549, 552, 557, 562, 565, 575, 576, 579, 581, 589, 590, 591, 594, 603, 607, 612, 614, 618, 622, 627, 628, 633, 636, 638, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 660, 699, 701, 711, 714, 724, 734, 744, 745, 755, 765, 766, 769, 770], "compat": [11, 14, 31, 34, 49, 50, 53, 67, 68, 71, 84, 85, 88, 103, 104, 107, 122, 125, 141, 144, 157, 158, 161, 174, 175, 178, 191, 192, 195, 209, 210, 213, 228, 229, 232, 246, 247, 250, 264, 265, 268, 283, 344, 372, 390, 400, 421, 439, 464, 477, 490, 506, 522, 536, 550, 563, 577, 592, 604, 619, 634, 656, 702, 715, 725, 735, 746, 756], "compet": 766, "compil": 770, "complet": [84, 121, 209, 264, 438], "complex": 769, "compli": [14, 34, 53, 88, 107, 125, 144, 161, 178, 195, 213, 250, 268], "compon": [304, 306, 648, 649, 651, 652, 653, 654, 770, 774, 775, 776, 778, 779, 781, 784], "componen": 772, "compos": 781, "comput": [23, 29, 43, 62, 80, 99, 117, 136, 153, 170, 187, 205, 224, 242, 260, 279, 348, 349, 350, 351, 352, 364, 374, 375, 377, 378, 383, 395, 403, 404, 405, 406, 407, 414, 423, 424, 425, 426, 427, 432, 441, 442, 443, 444, 445, 451, 469, 485, 501, 517, 530, 545, 558, 571, 585, 599, 613, 629, 642, 665, 666, 689, 707, 719, 729, 739, 750, 760], "computation": 781, "concaten": 774, "concept": [767, 772], "concret": [22, 42], "condit": 771, "cone": [489, 498, 505, 516], "cone_angl": [191, 489, 498, 505, 516], "connect": [0, 10, 11, 16, 22, 27, 30, 31, 36, 42, 47, 49, 50, 55, 67, 68, 73, 84, 85, 90, 103, 104, 109, 121, 122, 127, 140, 141, 146, 157, 158, 163, 174, 175, 180, 191, 192, 197, 209, 210, 215, 228, 229, 234, 246, 247, 252, 264, 265, 270, 283, 334, 344, 372, 390, 400, 421, 439, 464, 477, 490, 506, 522, 536, 550, 563, 577, 592, 604, 619, 634, 656, 670, 702, 715, 725, 735, 746, 756, 769, 771, 780, 781], "connectionsolv": [688, 769], "consid": [28, 29, 290, 303, 315, 340, 780], "consist": 29, "constant": 334, "construct": [18, 19, 26, 38, 39, 46, 57, 58, 66, 75, 76, 83, 92, 93, 102, 111, 112, 120, 129, 130, 139, 148, 149, 156, 165, 166, 173, 182, 183, 190, 200, 201, 208, 217, 218, 227, 236, 237, 245, 254, 255, 263, 272, 273, 282, 358, 359, 370, 380, 381, 388, 392, 393, 398, 409, 410, 419, 429, 430, 437, 448, 449, 456, 467, 468, 472, 481, 482, 488, 499, 500, 504, 514, 515, 520, 526, 527, 528, 529, 533, 542, 543, 548, 554, 555, 561, 568, 569, 574, 583, 584, 588, 596, 597, 598, 602, 609, 610, 617, 624, 625, 632, 639, 640, 645, 671, 672, 698, 705, 706, 710, 717, 718, 723, 727, 728, 733, 737, 738, 743, 748, 749, 754, 758, 759, 764, 769, 776], "constructor": [16, 529], "contain": [9, 16, 18, 19, 20, 21, 28, 36, 38, 39, 40, 41, 55, 57, 58, 59, 60, 73, 75, 76, 77, 78, 90, 92, 93, 95, 96, 109, 111, 112, 114, 115, 127, 129, 130, 132, 133, 146, 148, 149, 150, 151, 163, 165, 166, 167, 168, 180, 182, 183, 184, 185, 197, 200, 201, 202, 203, 215, 217, 218, 220, 221, 234, 236, 237, 238, 239, 252, 254, 255, 256, 257, 270, 272, 273, 275, 276, 283, 291, 292, 304, 306, 343, 358, 359, 380, 381, 392, 393, 409, 410, 420, 429, 430, 438, 448, 449, 457, 467, 468, 481, 482, 499, 500, 514, 515, 527, 528, 542, 543, 554, 555, 568, 569, 583, 584, 596, 597, 609, 610, 624, 625, 639, 640, 655, 657, 660, 669, 671, 672, 674, 677, 679, 692, 701, 705, 706, 717, 718, 727, 728, 737, 738, 745, 748, 749, 758, 759, 765], "content": 778, "context": 9, "continu": 769, "contract": 771, "contribut": [769, 772], "contributor": 766, "control": [23, 43, 62, 80, 99, 117, 136, 153, 170, 187, 205, 224, 242, 260, 279, 364, 383, 395, 414, 432, 451, 469, 485, 501, 517, 530, 545, 558, 571, 585, 599, 613, 629, 642, 689, 707, 719, 729, 739, 750, 760], "convent": 775, "convers": [11, 31, 50, 68, 85, 104, 122, 141, 158, 175, 192, 210, 229, 247, 265, 344, 372, 390, 400, 421, 439, 464, 477, 490, 506, 522, 536, 550, 563, 577, 592, 604, 619, 634, 656, 702, 715, 725, 735, 746, 756], "convert": [11, 24, 25, 31, 44, 45, 50, 63, 64, 68, 81, 82, 85, 100, 101, 104, 118, 119, 122, 137, 138, 141, 154, 155, 158, 171, 172, 175, 188, 189, 192, 206, 207, 210, 225, 226, 229, 243, 244, 247, 261, 262, 265, 280, 281, 344, 366, 367, 372, 384, 385, 390, 396, 397, 400, 415, 416, 421, 433, 434, 439, 452, 453, 461, 464, 470, 471, 474, 477, 486, 487, 490, 502, 503, 506, 518, 519, 522, 531, 532, 536, 546, 547, 550, 559, 560, 563, 572, 573, 577, 586, 587, 592, 600, 601, 604, 615, 616, 619, 630, 631, 634, 643, 644, 656, 690, 691, 702, 708, 709, 715, 720, 721, 725, 730, 731, 735, 740, 741, 746, 751, 752, 756, 761, 762], "coordin": [343, 352, 378, 389, 399, 407, 427, 445, 460, 476, 489, 505, 516, 521, 535, 549, 562, 576, 603, 618, 633, 641, 775], "copi": [369, 387, 418, 436, 455, 685, 687, 694, 695, 697, 771], "copy_guid": [15, 35, 54, 72, 89, 108, 126, 145, 162, 179, 196, 214, 233, 251, 269, 353, 379, 391, 408, 428, 446, 466, 480, 493, 509, 525, 539, 553, 566, 580, 595, 608, 623, 637, 667, 704, 716, 726, 736, 747, 757], "copyright": 771, "corner": [460, 780], "correct": [18, 19, 38, 39, 57, 58, 75, 76, 92, 93, 111, 112, 129, 130, 148, 149, 165, 166, 182, 183, 200, 201, 217, 218, 236, 237, 254, 255, 272, 273, 358, 359, 380, 381, 392, 393, 409, 410, 429, 430, 448, 449, 467, 468, 481, 482, 499, 500, 514, 515, 527, 528, 542, 543, 554, 555, 568, 569, 583, 584, 596, 597, 609, 610, 624, 625, 639, 640, 671, 672, 705, 706, 717, 718, 727, 728, 737, 738, 748, 749, 758, 759], "correctli": 774, "correspond": [191, 246, 343, 354, 463, 774, 775, 783], "could": [51, 69, 86, 105, 159, 176, 193, 211, 230, 248, 458, 459, 498, 516, 582, 611, 626, 641, 699], "coupl": 389, "cpython": [11, 31, 50, 68, 85, 104, 122, 141, 158, 175, 192, 210, 229, 247, 265, 344, 372, 390, 400, 421, 439, 464, 477, 490, 506, 522, 536, 550, 563, 577, 592, 604, 619, 634, 656, 702, 715, 725, 735, 746, 756], "crate": 780, "creat": [10, 13, 30, 49, 51, 52, 67, 84, 86, 103, 105, 106, 121, 140, 157, 159, 160, 174, 176, 177, 191, 193, 194, 209, 211, 228, 230, 231, 246, 248, 249, 264, 297, 316, 356, 357, 369, 387, 418, 436, 455, 483, 492, 498, 508, 516, 541, 556, 567, 570, 579, 582, 607, 611, 622, 626, 636, 641, 767, 769, 770, 772, 773, 774, 775, 776, 778, 780, 781, 784], "creategeometri": [776, 781], "creation": [14, 34, 53, 71, 88, 107, 125, 144, 161, 178, 195, 213, 232, 250, 268], "criteria": 774, "cross": [22, 29, 42, 49, 61, 65, 79, 84, 98, 116, 121, 135, 152, 157, 169, 174, 186, 191, 204, 209, 223, 228, 240, 246, 258, 264, 278, 343, 356, 357, 498, 516, 567, 582, 611, 618, 626, 641, 775, 776, 780], "cross_beam": [49, 84, 121, 157, 174, 191, 209, 228, 246, 264, 567, 768], "cross_beam_guid": 246, "cross_beam_kei": 84, "current": [15, 35, 54, 72, 89, 108, 126, 145, 162, 179, 196, 214, 233, 251, 269, 353, 379, 391, 408, 428, 446, 466, 480, 493, 509, 525, 539, 553, 566, 580, 595, 608, 623, 637, 667, 704, 716, 726, 736, 747, 757, 769], "curv": 775, "custom": 769, "custom_dimens": 776, "cut": [49, 84, 121, 191, 198, 209, 228, 264, 463, 476, 479, 483, 484, 489, 492, 494, 495, 496, 497, 498, 505, 508, 510, 511, 512, 513, 516, 524, 534, 535, 538, 540, 541, 544, 549, 552, 556, 557, 562, 565, 567, 570, 575, 576, 579, 581, 582, 589, 590, 594, 598, 603, 607, 611, 612, 614, 618, 622, 626, 627, 628, 633, 636, 638, 641, 646, 647, 772, 775, 779, 780, 781], "cut_plane_bia": [84, 121, 209, 264, 780], "cutoff": 780, "cutter": [198, 494, 510], "cylind": [526, 745], "damag": 771, "data": [15, 18, 19, 23, 24, 25, 26, 35, 38, 39, 43, 44, 45, 46, 54, 57, 58, 62, 63, 64, 66, 72, 75, 76, 80, 81, 82, 83, 89, 92, 93, 99, 100, 101, 102, 108, 111, 112, 117, 118, 119, 120, 126, 129, 130, 136, 137, 138, 139, 145, 148, 149, 153, 154, 155, 156, 162, 165, 166, 170, 171, 172, 173, 179, 182, 183, 187, 188, 189, 190, 196, 200, 201, 205, 206, 207, 208, 214, 217, 218, 224, 225, 226, 227, 233, 236, 237, 242, 243, 244, 245, 251, 254, 255, 260, 261, 262, 263, 269, 272, 273, 279, 280, 281, 282, 353, 358, 359, 364, 366, 367, 370, 379, 380, 381, 383, 384, 385, 388, 389, 391, 392, 393, 395, 396, 397, 398, 408, 409, 410, 414, 415, 416, 419, 428, 429, 430, 432, 433, 434, 437, 446, 448, 449, 451, 452, 453, 456, 463, 466, 467, 468, 469, 470, 471, 472, 473, 480, 481, 482, 485, 486, 487, 488, 493, 499, 500, 501, 502, 503, 504, 509, 514, 515, 517, 518, 519, 520, 525, 527, 528, 530, 531, 532, 533, 539, 542, 543, 545, 546, 547, 548, 553, 554, 555, 558, 559, 560, 561, 566, 568, 569, 571, 572, 573, 574, 580, 583, 584, 585, 586, 587, 588, 595, 596, 597, 599, 600, 601, 602, 608, 609, 610, 613, 615, 616, 617, 623, 624, 625, 629, 630, 631, 632, 637, 639, 640, 642, 643, 644, 645, 667, 671, 672, 689, 690, 691, 693, 694, 695, 698, 701, 704, 705, 706, 707, 708, 709, 710, 714, 716, 717, 718, 719, 720, 721, 723, 726, 727, 728, 729, 730, 731, 733, 736, 737, 738, 739, 740, 741, 743, 745, 747, 748, 749, 750, 751, 752, 754, 757, 758, 759, 760, 761, 762, 764, 778, 782], "datastructur": [23, 43, 62, 80, 99, 117, 136, 153, 170, 187, 205, 224, 242, 260, 279, 349, 364, 375, 383, 395, 404, 405, 414, 424, 425, 432, 442, 443, 451, 469, 485, 501, 517, 530, 545, 558, 571, 585, 599, 613, 629, 642, 665, 666, 684, 686, 689, 694, 695, 696, 697, 707, 719, 729, 739, 750, 760], "de": [22, 42, 61, 79, 98, 116, 135, 152, 169, 186, 204, 223, 240, 258, 278], "deal": 771, "debug": [292, 457, 776, 781, 782], "debug_geometri": 457, "debug_info": [363, 382, 412, 431, 450, 457], "debuginfo": [776, 781], "debuginfom": 769, "deeper": [84, 121, 209, 264], "default": [11, 15, 31, 35, 49, 50, 54, 67, 68, 72, 84, 85, 89, 104, 108, 121, 122, 126, 141, 145, 158, 162, 175, 179, 192, 196, 209, 210, 214, 229, 233, 241, 247, 251, 259, 264, 265, 269, 316, 344, 353, 356, 357, 372, 379, 390, 391, 399, 400, 408, 421, 428, 439, 446, 464, 466, 477, 480, 483, 490, 493, 498, 506, 509, 516, 521, 522, 525, 536, 539, 541, 550, 553, 556, 562, 563, 566, 570, 577, 580, 582, 592, 595, 604, 608, 611, 619, 623, 626, 634, 637, 641, 649, 653, 656, 667, 684, 685, 686, 687, 702, 704, 715, 716, 725, 726, 735, 736, 746, 747, 756, 757, 769, 775, 776, 781, 783], "defin": [12, 32, 33, 87, 123, 124, 142, 191, 198, 212, 246, 266, 267, 286, 299, 309, 311, 336, 356, 389, 483, 494, 510, 516, 570, 641, 774, 775, 776, 780, 783, 784], "define_dovetail_tool": [516, 641], "definit": [290, 303, 315, 340, 773, 781], "degre": 521, "delai": [304, 306], "delet": [649, 653], "deleteattribut": 774, "demo": 777, "depend": [354, 356, 357, 770, 773, 780], "depth": [49, 174, 191, 228, 241, 246, 489, 498, 505, 516, 521, 529, 549, 562, 567, 570, 576, 582, 598, 603, 618, 633, 641, 768, 780], "depth_limit": 521, "deriv": 773, "describ": [10, 773], "desigen": 29, "design": [0, 283, 284, 292, 297, 304, 306, 310, 316, 334, 341, 342, 766, 769, 772, 774, 775], "design2machin": 773, "desir": 783, "detail": [1, 772], "detect": [27, 781], "detected_topo": 655, "determin": [191, 291, 316, 780], "dev": 770, "develop": [766, 769], "deviat": 783, "dfab": 766, "diamet": [10, 67, 191, 198, 389, 494, 510, 521, 529, 535, 541, 779], "dict": [30, 334, 389, 460, 461, 562, 655, 659, 773], "dictionari": 30, "did": [14, 34, 53, 88, 107, 125, 144, 161, 178, 195, 213, 250, 268], "differ": [16, 655, 711, 767, 773, 776, 780], "differec": 389, "digest": [23, 43, 62, 80, 99, 117, 136, 153, 170, 187, 205, 224, 242, 260, 279, 364, 383, 395, 414, 432, 451, 469, 485, 501, 517, 530, 545, 558, 571, 585, 599, 613, 629, 642, 689, 707, 719, 729, 739, 750, 760], "digit": 766, "dimens": [67, 343, 724, 775], "direct": [343, 355, 356, 357, 648, 686, 687, 765, 775, 776, 784], "directli": [30, 121, 297, 420, 657, 658, 776, 780], "directrul": 769, "disabl": 781, "displai": [11, 31, 50, 68, 85, 104, 122, 141, 158, 175, 192, 210, 229, 247, 265, 344, 372, 390, 400, 421, 439, 464, 477, 490, 506, 522, 536, 550, 563, 577, 592, 604, 619, 634, 656, 702, 715, 725, 735, 746, 756, 774, 782], "distanc": [28, 29, 290, 303, 315, 340, 489, 505, 570, 576, 633, 776, 781], "distribut": 771, "do": [121, 492, 508, 579, 607, 622, 636, 771, 773], "docstr": 438, "document": [771, 773, 774, 775, 783], "doe": [16, 36, 55, 73, 90, 109, 127, 140, 143, 146, 163, 180, 197, 215, 234, 252, 270, 371, 479, 524, 538, 552, 565, 594, 711, 773, 775], "doesn": 780, "doi": 766, "done": [20, 21, 40, 41, 59, 60, 77, 78, 95, 96, 114, 115, 132, 133, 150, 151, 167, 168, 184, 185, 202, 203, 220, 221, 238, 239, 256, 257, 275, 276], "doubl": [228, 476, 483, 603, 618], "doublecut": 769, "dovetail": [191, 198, 489, 494, 495, 496, 498, 505, 510, 511, 512, 516, 641], "dovetail_shap": 191, "dovetailmortis": 769, "dovetailtenon": [498, 641, 769], "dowel": 371, "down": 780, "downstream": [304, 306], "drawn": 775, "drill": [67, 535, 769], "drillhol": [535, 541], "drillhole_diam": [67, 535, 541], "drop": 780, "dure": [22, 23, 42, 43, 62, 69, 70, 80, 99, 117, 136, 153, 170, 187, 191, 205, 224, 242, 260, 279, 292, 364, 383, 395, 414, 432, 451, 469, 485, 501, 517, 530, 545, 558, 571, 585, 599, 613, 629, 642, 689, 707, 719, 729, 739, 745, 750, 760], "dynam": [776, 780], "e": [22, 29, 42, 483, 498, 516, 541, 556, 570, 582, 611, 626, 641, 767, 774, 783], "each": [10, 20, 21, 30, 40, 41, 59, 60, 77, 78, 95, 96, 114, 115, 132, 133, 150, 151, 167, 168, 184, 185, 202, 203, 220, 221, 238, 239, 256, 257, 275, 276, 355, 701, 773, 774, 780, 782], "easi": 772, "eclips": 767, "ecosystem": 769, "edg": [316, 343, 489, 498, 505, 516, 534, 576, 582, 598, 633, 641, 661, 776, 780], "edge_stud": [316, 776, 780], "edge_stud_offset": 776, "edgepositiontyp": [535, 769], "edit": 770, "editor": 767, "either": [84, 121, 209, 264, 354, 476, 489, 505, 535, 549, 562, 576, 603, 618, 633, 648, 776], "element": [0, 10, 13, 14, 16, 17, 34, 36, 37, 53, 55, 56, 71, 73, 74, 88, 90, 91, 107, 109, 110, 125, 127, 128, 144, 146, 147, 161, 163, 164, 178, 180, 181, 195, 197, 199, 213, 215, 216, 232, 234, 235, 246, 250, 252, 253, 268, 270, 271, 283, 284, 286, 290, 291, 297, 299, 303, 304, 306, 309, 311, 315, 316, 336, 340, 343, 348, 349, 350, 351, 352, 354, 363, 368, 369, 371, 374, 375, 377, 378, 382, 386, 387, 389, 394, 399, 403, 404, 405, 406, 407, 412, 417, 418, 420, 423, 424, 425, 426, 427, 431, 435, 436, 438, 441, 442, 443, 444, 445, 450, 454, 455, 458, 459, 460, 461, 474, 479, 484, 492, 495, 496, 497, 508, 512, 513, 521, 526, 529, 538, 540, 544, 552, 557, 565, 575, 579, 581, 589, 594, 607, 612, 614, 622, 627, 628, 636, 638, 646, 655, 657, 658, 660, 661, 664, 668, 670, 673, 674, 676, 678, 681, 682, 744, 745, 769, 781], "element_geometri": 459, "element_id": 745, "element_lists_to_intersect": 327, "element_loop": 329, "element_on": 320, "element_two": 320, "elementnod": [657, 658], "elements_held": 745, "encod": 774, "encompass": 769, "end": [10, 20, 21, 30, 40, 41, 49, 59, 60, 67, 77, 78, 84, 95, 96, 103, 114, 115, 132, 133, 150, 151, 157, 167, 168, 174, 184, 185, 191, 202, 203, 209, 220, 221, 228, 238, 239, 246, 256, 257, 264, 275, 276, 343, 345, 354, 355, 357, 476, 505, 535, 549, 562, 590, 598, 603, 618, 633, 780], "end_point": 357, "endpoint": [354, 357], "enlarg": 283, "entail": [769, 774], "entir": 371, "entiti": 769, "entri": 774, "enum": [534, 590, 647, 699], "enumer": 47, "envelop": 438, "environ": [648, 649, 653, 654, 767, 769, 770, 775], "equal": [343, 598], "equival": [498, 582], "error": [0, 1, 292, 294, 295, 296, 348, 351, 374, 377, 403, 406, 423, 426, 441, 444, 457, 458, 459, 524, 769, 774, 776, 781], "essenti": 462, "et": [460, 461], "et_el": 460, "etc": [343, 399, 734, 767, 769, 775], "eth": [766, 769], "event": 771, "everi": 780, "exactli": 598, "exampl": [22, 23, 42, 43, 62, 80, 99, 117, 136, 153, 170, 187, 205, 224, 242, 260, 279, 283, 364, 383, 395, 414, 432, 451, 469, 485, 501, 517, 530, 545, 558, 571, 585, 599, 613, 629, 642, 660, 689, 707, 719, 729, 739, 750, 760, 769, 772, 774, 775, 784], "exceed": [540, 541], "except": [457, 458, 459, 661], "exclud": [24, 25, 44, 45, 63, 64, 81, 82, 100, 101, 118, 119, 137, 138, 154, 155, 171, 172, 188, 189, 206, 207, 225, 226, 243, 244, 261, 262, 280, 281, 366, 367, 384, 385, 396, 397, 415, 416, 433, 434, 452, 453, 470, 471, 486, 487, 502, 503, 518, 519, 531, 532, 546, 547, 559, 560, 572, 573, 586, 587, 600, 601, 615, 616, 630, 631, 643, 644, 690, 691, 708, 709, 720, 721, 730, 731, 740, 741, 751, 752, 761, 762], "execut": [70, 699, 745, 767], "exist": [11, 31, 50, 68, 85, 104, 122, 141, 158, 175, 192, 210, 229, 247, 265, 344, 372, 390, 400, 421, 439, 464, 477, 490, 506, 522, 536, 550, 563, 577, 592, 604, 606, 619, 620, 634, 656, 660, 675, 702, 715, 725, 735, 746, 756, 773], "expand": 769, "expect": [16, 36, 55, 73, 90, 109, 127, 146, 163, 180, 197, 215, 234, 252, 270], "expens": 781, "explain": 772, "express": [655, 771], "extend": [49, 345, 355, 680, 780], "extens": [12, 32, 51, 52, 69, 70, 86, 105, 106, 123, 142, 159, 176, 177, 193, 211, 230, 248, 266, 345, 355, 361, 363, 382, 412, 431, 450, 680], "extra": 389, "extract": [775, 782], "extrus": 399, "fabric": [0, 460, 463, 473, 476, 489, 505, 521, 529, 534, 535, 549, 562, 576, 590, 591, 603, 618, 633, 647, 766, 769, 772], "face": [20, 21, 23, 40, 41, 43, 49, 59, 60, 62, 77, 78, 80, 95, 96, 99, 114, 115, 117, 132, 133, 136, 150, 151, 153, 167, 168, 170, 184, 185, 187, 202, 203, 205, 220, 221, 224, 238, 239, 242, 256, 257, 260, 275, 276, 279, 343, 355, 364, 383, 395, 414, 432, 451, 462, 469, 485, 501, 505, 517, 530, 545, 558, 571, 585, 598, 599, 613, 629, 633, 642, 689, 707, 719, 729, 739, 750, 760, 780], "face_index": [20, 21, 40, 41, 59, 60, 77, 78, 95, 96, 114, 115, 132, 133, 150, 151, 167, 168, 184, 185, 202, 203, 220, 221, 238, 239, 256, 257, 275, 276], "factor": [686, 687], "factori": 773, "fail": [492, 508, 579, 607, 622, 636], "fals": [15, 23, 24, 25, 28, 35, 43, 44, 45, 49, 54, 62, 63, 64, 67, 72, 80, 81, 82, 89, 99, 100, 101, 108, 117, 118, 119, 126, 136, 137, 138, 145, 153, 154, 155, 162, 170, 171, 172, 179, 187, 188, 189, 196, 205, 206, 207, 214, 224, 225, 226, 233, 242, 243, 244, 251, 260, 261, 262, 269, 279, 280, 281, 286, 289, 299, 302, 311, 314, 336, 339, 350, 353, 364, 366, 367, 379, 383, 384, 385, 391, 395, 396, 397, 405, 408, 414, 415, 416, 425, 428, 432, 433, 434, 443, 446, 451, 452, 453, 466, 469, 470, 471, 480, 485, 486, 487, 489, 493, 501, 502, 503, 505, 509, 517, 518, 519, 525, 530, 531, 532, 539, 545, 546, 547, 553, 558, 559, 560, 566, 571, 572, 573, 576, 580, 585, 586, 587, 595, 599, 600, 601, 608, 611, 613, 615, 616, 623, 626, 629, 630, 631, 633, 637, 641, 642, 643, 644, 667, 689, 690, 691, 704, 707, 708, 709, 716, 719, 720, 721, 726, 729, 730, 731, 736, 739, 740, 741, 747, 750, 751, 752, 757, 760, 761, 762, 776, 781], "fast": 769, "fasten": [10, 13, 389, 458, 769], "fastenerapplicationerror": [1, 769], "fastenertimberinterfac": [10, 13, 769], "feasibl": 680, "featru": 228, "featur": [13, 30, 33, 52, 70, 84, 87, 106, 124, 140, 143, 160, 177, 191, 194, 198, 212, 228, 231, 246, 249, 267, 292, 304, 343, 346, 347, 350, 362, 363, 373, 382, 389, 394, 401, 402, 405, 411, 412, 422, 425, 431, 440, 443, 450, 457, 459, 476, 479, 489, 492, 494, 505, 508, 510, 524, 535, 538, 549, 552, 562, 565, 576, 579, 594, 598, 603, 607, 618, 622, 633, 636, 680, 769, 772, 775, 776, 781, 784], "feature_error": 292, "feature_geometri": 459, "featureapplicationerror": [1, 292, 479, 492, 508, 524, 538, 552, 565, 579, 594, 607, 622, 636, 769], "featuredefinit": 769, "fibr": [343, 772], "file": [18, 24, 38, 44, 57, 63, 75, 81, 92, 100, 111, 118, 129, 137, 148, 154, 165, 171, 182, 188, 200, 206, 217, 225, 236, 243, 254, 261, 272, 280, 358, 366, 380, 384, 392, 396, 409, 415, 429, 433, 448, 452, 467, 470, 475, 481, 486, 499, 502, 514, 518, 527, 531, 542, 546, 554, 559, 568, 572, 583, 586, 596, 600, 609, 615, 624, 630, 639, 643, 671, 690, 705, 708, 711, 712, 713, 717, 720, 727, 730, 737, 740, 748, 751, 758, 761, 771, 773, 777, 778], "file_path": 475, "filepath": [18, 24, 38, 44, 57, 63, 75, 81, 92, 100, 111, 118, 129, 137, 148, 154, 165, 171, 182, 188, 200, 206, 217, 225, 236, 243, 254, 261, 272, 280, 358, 366, 380, 384, 392, 396, 409, 415, 429, 433, 448, 452, 467, 470, 481, 486, 499, 502, 514, 518, 527, 531, 542, 546, 554, 559, 568, 572, 583, 586, 596, 600, 609, 615, 624, 630, 639, 643, 671, 690, 705, 708, 712, 713, 717, 720, 727, 730, 737, 740, 748, 751, 758, 761], "filter": [673, 774], "filter_": 673, "final": 784, "find": [28, 283, 462, 670, 765, 775, 780], "find_neighboring_beam": 769, "first": [29, 67, 103, 140, 157, 191, 228, 246, 291, 354, 476, 661, 676, 680, 780, 784], "fit": [191, 228, 246, 771], "fix": [11, 31, 50, 68, 85, 104, 122, 141, 158, 175, 192, 210, 229, 247, 265, 344, 372, 390, 400, 421, 439, 464, 477, 490, 506, 522, 536, 550, 563, 577, 592, 604, 619, 634, 656, 702, 715, 725, 735, 746, 756], "flag": 535, "flank": [191, 489, 498, 505, 516], "flank_angl": [191, 489, 498, 505, 516], "flip": [65, 67, 84, 121, 209, 264, 529, 780], "flip_beam": 67, "flip_lap_sid": [84, 121, 209, 264, 780], "float": [10, 28, 29, 49, 67, 84, 121, 174, 191, 198, 209, 228, 246, 264, 283, 290, 303, 315, 316, 340, 343, 345, 348, 351, 355, 356, 357, 374, 377, 389, 399, 403, 406, 423, 426, 441, 444, 460, 476, 489, 494, 498, 505, 510, 516, 521, 529, 535, 541, 549, 562, 567, 570, 576, 582, 603, 606, 618, 620, 633, 641, 655, 684, 685, 686, 687, 765], "flush": [776, 780], "follow": [1, 389, 771, 772, 773, 775, 780], "fom": 16, "forg": 770, "fork": 770, "form": 438, "format": [23, 24, 25, 43, 44, 45, 62, 63, 64, 80, 81, 82, 99, 100, 101, 117, 118, 119, 136, 137, 138, 153, 154, 155, 170, 171, 172, 187, 188, 189, 205, 206, 207, 224, 225, 226, 242, 243, 244, 260, 261, 262, 279, 280, 281, 364, 366, 367, 383, 384, 385, 395, 396, 397, 414, 415, 416, 432, 433, 434, 451, 452, 453, 461, 469, 470, 471, 473, 485, 486, 487, 501, 502, 503, 517, 518, 519, 530, 531, 532, 545, 546, 547, 558, 559, 560, 571, 572, 573, 585, 586, 587, 599, 600, 601, 613, 615, 616, 629, 630, 631, 642, 643, 644, 689, 690, 691, 707, 708, 709, 711, 719, 720, 721, 729, 730, 731, 739, 740, 741, 750, 751, 752, 760, 761, 762, 774], "found": 773, "foundat": 766, "four": [774, 780], "fragil": 529, "frame": [20, 21, 30, 40, 41, 59, 60, 77, 78, 95, 96, 114, 115, 132, 133, 150, 151, 167, 168, 184, 185, 202, 203, 220, 221, 238, 239, 256, 257, 275, 276, 316, 343, 355, 371, 389, 399, 460, 462, 483, 495, 497, 498, 508, 511, 513, 516, 540, 556, 581, 582, 611, 626, 636, 638, 641, 660, 745, 768, 769, 772, 775, 776, 784], "frame_depth": [316, 776], "framework": 769, "free": 771, "french": [535, 544], "frenchridgelap": [67, 769], "from": [18, 19, 23, 24, 25, 29, 38, 39, 43, 44, 45, 57, 58, 62, 63, 64, 75, 76, 80, 81, 82, 92, 93, 99, 100, 101, 111, 112, 117, 118, 119, 129, 130, 136, 137, 138, 148, 149, 153, 154, 155, 165, 166, 170, 171, 172, 182, 183, 187, 188, 189, 191, 200, 201, 205, 206, 207, 217, 218, 224, 225, 226, 236, 237, 242, 243, 244, 246, 254, 255, 260, 261, 262, 272, 273, 279, 280, 281, 316, 356, 357, 358, 359, 361, 362, 364, 366, 367, 371, 380, 381, 383, 384, 385, 389, 392, 393, 395, 396, 397, 409, 410, 411, 414, 415, 416, 429, 430, 432, 433, 434, 448, 449, 451, 452, 453, 462, 467, 468, 469, 470, 471, 481, 482, 483, 484, 485, 486, 487, 489, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 511, 512, 513, 514, 515, 516, 517, 518, 519, 527, 528, 529, 530, 531, 532, 540, 541, 542, 543, 544, 545, 546, 547, 554, 555, 556, 557, 558, 559, 560, 567, 568, 569, 570, 571, 572, 573, 575, 576, 581, 582, 583, 584, 585, 586, 587, 589, 596, 597, 599, 600, 601, 609, 610, 611, 612, 613, 614, 615, 616, 624, 625, 626, 627, 628, 629, 630, 631, 633, 638, 639, 640, 641, 642, 643, 644, 646, 649, 653, 660, 671, 672, 681, 683, 689, 690, 691, 705, 706, 707, 708, 709, 711, 712, 717, 718, 719, 720, 721, 727, 728, 729, 730, 731, 737, 738, 739, 740, 741, 748, 749, 750, 751, 752, 758, 759, 760, 761, 762, 767, 769, 771, 772, 773, 774, 775, 776, 778, 779, 780, 782], "from_obj": [23, 43, 62, 80, 99, 117, 136, 153, 170, 187, 205, 224, 242, 260, 279, 364, 383, 395, 414, 432, 451, 469, 485, 501, 517, 530, 545, 558, 571, 585, 599, 613, 629, 642, 689, 707, 719, 729, 739, 750, 760], "full": 598, "fulli": 780, "fullnam": [11, 31, 50, 68, 85, 104, 122, 141, 158, 175, 192, 210, 229, 247, 265, 344, 372, 390, 400, 421, 439, 464, 477, 490, 506, 522, 536, 550, 563, 577, 592, 604, 619, 634, 656, 702, 715, 725, 735, 746, 756], "function": [9, 121, 283, 673, 772, 773], "furnish": 771, "furthest": [541, 776], "futur": 769, "g": [22, 29, 42, 767, 774], "gener": [10, 13, 16, 29, 228, 371, 389, 655, 673, 744, 773, 775, 776, 780, 784], "generated_el": 10, "geometr": [389, 769, 773, 779, 781], "geometri": [316, 343, 349, 350, 351, 352, 368, 369, 371, 374, 375, 376, 377, 378, 386, 387, 389, 399, 404, 405, 406, 407, 417, 418, 423, 424, 425, 426, 427, 435, 436, 441, 442, 443, 444, 445, 454, 455, 457, 459, 460, 479, 492, 495, 496, 497, 508, 512, 513, 524, 526, 529, 538, 540, 544, 552, 557, 565, 575, 579, 581, 589, 594, 607, 612, 614, 622, 626, 627, 628, 636, 638, 646, 665, 666, 684, 685, 687, 692, 696, 697, 745, 765, 769, 772, 775, 776, 779, 780, 781, 782, 783, 784], "geometry_typ": 768, "get": [23, 43, 62, 80, 99, 117, 136, 153, 170, 187, 205, 224, 242, 260, 279, 364, 383, 395, 414, 432, 451, 469, 485, 501, 517, 530, 545, 558, 571, 585, 599, 613, 629, 642, 668, 673, 689, 707, 719, 729, 739, 750, 760, 770, 772, 774], "get_leaf_subclass": 769, "getcustomattribut": 774, "getstandardattribut": 774, "gettyp": [11, 31, 50, 68, 85, 104, 122, 141, 158, 175, 192, 210, 229, 247, 265, 344, 372, 390, 400, 421, 439, 464, 477, 490, 506, 522, 536, 550, 563, 577, 592, 604, 619, 634, 656, 702, 715, 725, 735, 746, 756], "ghenv": [648, 649, 653, 654], "ghpython": [0, 648, 649, 650, 651, 652, 653, 654, 769, 772], "ghuser": 770, "git": 770, "github": [766, 770], "given": [16, 28, 29, 36, 48, 55, 73, 90, 109, 127, 146, 163, 180, 197, 215, 234, 252, 270, 283, 290, 291, 303, 315, 334, 340, 354, 355, 357, 360, 461, 462, 475, 484, 495, 496, 497, 511, 512, 513, 540, 544, 557, 570, 575, 581, 589, 612, 614, 627, 628, 638, 646, 674, 700, 774], "global": 782, "go": 521, "goe": 389, "gonzalo": 766, "gramazio": [766, 769, 771], "gramaziokohl": 766, "grant": 771, "graph": 661, "grasshopp": [11, 31, 50, 68, 85, 104, 122, 141, 158, 175, 192, 210, 229, 247, 265, 344, 372, 390, 400, 421, 439, 464, 477, 490, 506, 522, 536, 550, 563, 577, 592, 604, 619, 634, 648, 649, 653, 654, 656, 702, 715, 725, 735, 746, 756, 767, 769, 770, 775, 780, 784], "group": [438, 657, 658, 659, 660, 670, 673, 675, 774], "group_nam": [673, 675], "groupnod": [657, 658, 659, 660], "grssshopper": 780, "guess_joint_topology_2beam": 769, "guid": [15, 24, 25, 35, 44, 45, 54, 63, 64, 72, 81, 82, 89, 100, 101, 108, 118, 119, 126, 137, 138, 145, 154, 155, 162, 171, 172, 179, 188, 189, 196, 206, 207, 214, 225, 226, 233, 243, 244, 246, 251, 261, 262, 269, 280, 281, 353, 366, 367, 379, 384, 385, 391, 396, 397, 408, 415, 416, 428, 433, 434, 446, 452, 453, 466, 470, 471, 480, 486, 487, 493, 502, 503, 509, 518, 519, 525, 531, 532, 539, 546, 547, 553, 559, 560, 566, 572, 573, 580, 586, 587, 595, 600, 601, 608, 615, 616, 623, 630, 631, 637, 643, 644, 667, 668, 690, 691, 704, 708, 709, 716, 720, 721, 726, 730, 731, 736, 740, 741, 747, 751, 752, 757, 761, 762, 769, 772, 775, 780], "ha": [18, 19, 38, 39, 57, 58, 69, 70, 75, 76, 92, 93, 111, 112, 129, 130, 148, 149, 165, 166, 182, 183, 200, 201, 217, 218, 236, 237, 254, 255, 272, 273, 283, 358, 359, 380, 381, 392, 393, 409, 410, 429, 430, 448, 449, 457, 467, 468, 481, 482, 499, 500, 514, 515, 527, 528, 542, 543, 554, 555, 568, 569, 583, 584, 596, 597, 609, 610, 624, 625, 639, 640, 660, 671, 672, 705, 706, 717, 718, 727, 728, 737, 738, 745, 748, 749, 758, 759, 775, 780, 783], "half": 780, "handl": 769, "has_group": 660, "hash": [23, 43, 62, 80, 99, 117, 136, 153, 170, 187, 205, 224, 242, 260, 279, 364, 383, 395, 414, 432, 451, 469, 485, 501, 517, 530, 545, 558, 571, 585, 599, 613, 629, 642, 689, 707, 719, 729, 739, 750, 760], "have": [15, 16, 35, 36, 54, 55, 67, 70, 72, 73, 89, 90, 108, 109, 126, 127, 140, 145, 146, 162, 163, 179, 180, 196, 197, 214, 215, 233, 234, 251, 252, 269, 270, 343, 353, 379, 391, 399, 408, 428, 446, 466, 480, 493, 509, 525, 539, 553, 566, 580, 595, 608, 623, 637, 657, 667, 676, 704, 716, 726, 736, 747, 757, 775], "header": [316, 776, 780], "header_attribut": 773, "heel": [228, 241, 603, 618], "heel_depth": [228, 241, 603, 611, 618, 626], "height": [191, 198, 228, 246, 316, 343, 356, 357, 460, 494, 498, 505, 510, 516, 582, 603, 606, 618, 620, 633, 641, 768, 774, 775, 776], "held": 745, "help": 776, "here": [389, 680, 773, 776, 777, 783], "hereaft": 780, "herebi": 771, "hexadecim": [23, 43, 62, 80, 99, 117, 136, 153, 170, 187, 205, 224, 242, 260, 279, 364, 383, 395, 414, 432, 451, 469, 485, 501, 517, 530, 545, 558, 571, 585, 599, 613, 629, 642, 689, 707, 719, 729, 739, 750, 760], "hierarchi": [352, 378, 407, 427, 445, 655, 657, 784], "highest": 780, "highli": 780, "holder": 771, "hole": [67, 389, 535, 772], "horizont": [476, 535, 549, 562, 598], "hous": [498, 582], "how": [772, 780, 784], "http": [766, 770, 773], "human": [700, 745], "hybrid": 774, "i": [12, 14, 16, 18, 19, 20, 21, 22, 26, 28, 29, 30, 32, 34, 36, 38, 39, 40, 41, 42, 46, 49, 51, 52, 53, 55, 57, 58, 59, 60, 65, 66, 67, 69, 70, 73, 75, 76, 77, 78, 83, 84, 86, 88, 90, 92, 93, 95, 96, 102, 103, 105, 106, 107, 109, 111, 112, 114, 115, 120, 121, 123, 125, 127, 129, 130, 132, 133, 139, 140, 142, 144, 146, 148, 149, 150, 151, 156, 157, 159, 160, 161, 163, 165, 166, 167, 168, 173, 174, 176, 177, 178, 180, 182, 183, 184, 185, 190, 191, 193, 194, 195, 197, 200, 201, 202, 203, 208, 209, 211, 213, 215, 217, 218, 220, 221, 227, 228, 230, 231, 234, 236, 237, 238, 239, 245, 246, 248, 249, 250, 252, 254, 255, 256, 257, 263, 264, 266, 268, 270, 272, 273, 275, 276, 282, 283, 316, 334, 343, 345, 354, 355, 358, 359, 370, 371, 380, 381, 388, 389, 392, 393, 398, 399, 409, 410, 419, 420, 429, 430, 437, 438, 448, 449, 456, 467, 468, 472, 473, 479, 481, 482, 483, 484, 488, 489, 492, 495, 496, 497, 498, 499, 500, 504, 505, 508, 512, 513, 514, 515, 516, 520, 521, 527, 528, 529, 533, 538, 540, 541, 542, 543, 544, 548, 552, 554, 555, 556, 557, 561, 562, 565, 567, 568, 569, 570, 574, 575, 576, 579, 581, 582, 583, 584, 588, 589, 590, 594, 596, 597, 598, 602, 607, 609, 610, 611, 612, 614, 617, 618, 622, 624, 625, 626, 627, 628, 632, 633, 636, 638, 639, 640, 641, 645, 646, 649, 653, 655, 657, 660, 664, 671, 672, 680, 692, 698, 701, 705, 706, 710, 717, 718, 723, 727, 728, 733, 737, 738, 743, 744, 748, 749, 754, 758, 759, 764, 766, 769, 771, 772, 773, 774, 775, 776, 778, 779, 780, 781, 783, 784], "id": [463, 745, 767], "idea": 772, "identifi": [30, 283, 668], "ignor": [20, 21, 40, 41, 59, 60, 77, 78, 95, 96, 114, 115, 132, 133, 150, 151, 167, 168, 184, 185, 202, 203, 220, 221, 238, 239, 256, 257, 275, 276], "ignore_end": [20, 21, 40, 41, 59, 60, 77, 78, 95, 96, 114, 115, 132, 133, 150, 151, 167, 168, 184, 185, 202, 203, 220, 221, 238, 239, 256, 257, 275, 276], "imag": 783, "implement": [12, 14, 22, 30, 32, 34, 42, 53, 88, 107, 123, 125, 142, 144, 161, 178, 195, 213, 250, 266, 268, 371, 711, 765, 769, 780], "implemet": 711, "impli": [771, 781], "implicit": [11, 31, 50, 68, 85, 104, 122, 141, 158, 175, 192, 210, 229, 247, 265, 344, 372, 390, 400, 421, 439, 464, 477, 490, 506, 522, 536, 550, 563, 577, 592, 604, 619, 634, 656, 702, 715, 725, 735, 746, 756], "import": [23, 43, 62, 80, 99, 117, 136, 153, 170, 187, 205, 224, 242, 260, 279, 364, 383, 395, 414, 432, 451, 469, 485, 501, 517, 530, 545, 558, 571, 585, 599, 613, 629, 642, 660, 680, 689, 707, 719, 729, 739, 750, 760, 773, 784], "inclin": [489, 505, 521, 549, 562, 576, 603, 618, 633], "inclination_1": 476, "inclination_2": 476, "includ": [350, 405, 425, 443, 771, 773], "include_featur": [350, 405, 425, 443], "incorpor": 734, "increment": 745, "indent": [24, 25, 44, 45, 63, 64, 81, 82, 100, 101, 118, 119, 137, 138, 154, 155, 171, 172, 188, 189, 206, 207, 225, 226, 243, 244, 261, 262, 280, 281, 366, 367, 384, 385, 396, 397, 415, 416, 433, 434, 452, 453, 470, 471, 486, 487, 502, 503, 518, 519, 531, 532, 546, 547, 559, 560, 572, 573, 586, 587, 600, 601, 615, 616, 630, 631, 643, 644, 690, 691, 708, 709, 720, 721, 730, 731, 740, 741, 751, 752, 761, 762], "independ": [15, 35, 54, 72, 89, 108, 126, 145, 162, 179, 196, 214, 233, 251, 269, 353, 379, 391, 408, 428, 446, 466, 480, 493, 509, 525, 539, 553, 566, 580, 595, 608, 623, 637, 667, 704, 716, 726, 736, 747, 757], "index": [20, 21, 40, 41, 59, 60, 77, 78, 95, 96, 114, 115, 132, 133, 150, 151, 167, 168, 184, 185, 191, 202, 203, 220, 221, 238, 239, 246, 256, 257, 275, 276, 360, 365, 462, 463, 483, 498, 516, 541, 556, 570, 582, 611, 626, 641, 648, 654, 769], "indic": [356, 357, 457, 535, 774, 775], "inflat": [283, 348, 351, 374, 377, 403, 406, 423, 426, 441, 444, 765], "inflate_bi": [283, 441, 444, 765], "inform": [292, 457, 769, 776, 781, 782, 783], "inherit": [10, 30, 49, 67, 84, 103, 121, 140, 157, 174, 191, 209, 228, 246, 264, 284, 297, 334, 343, 371, 389, 399, 420, 438, 463, 476, 489, 505, 521, 535, 549, 562, 576, 591, 603, 618, 633, 655, 701, 714, 724, 734, 745, 755, 769, 773], "initi": [191, 363, 382, 412, 431, 450], "inner": [20, 21, 40, 41, 59, 60, 77, 78, 95, 96, 114, 115, 132, 133, 150, 151, 167, 168, 184, 185, 202, 203, 220, 221, 238, 239, 256, 257, 275, 276, 780], "input": [29, 283, 389, 648, 649, 653, 772, 773, 774, 775, 776, 778, 779, 780, 781], "input_nam": [653, 654], "insid": [316, 688, 767], "inspect": [292, 782], "instal": 769, "instanc": [10, 11, 16, 18, 19, 31, 36, 38, 39, 49, 50, 55, 57, 58, 67, 68, 73, 75, 76, 84, 85, 90, 92, 93, 103, 104, 109, 111, 112, 121, 122, 127, 129, 130, 140, 141, 146, 148, 149, 157, 158, 163, 165, 166, 174, 175, 180, 182, 183, 191, 192, 197, 200, 201, 209, 210, 215, 217, 218, 228, 229, 234, 236, 237, 246, 247, 252, 254, 255, 264, 265, 270, 272, 273, 286, 299, 311, 336, 344, 358, 359, 372, 380, 381, 389, 390, 392, 393, 400, 409, 410, 421, 429, 430, 439, 448, 449, 464, 467, 468, 477, 479, 481, 482, 483, 484, 490, 492, 495, 496, 497, 498, 499, 500, 506, 508, 511, 512, 513, 514, 515, 516, 522, 526, 527, 528, 536, 538, 540, 541, 542, 543, 544, 550, 552, 554, 555, 556, 557, 563, 565, 567, 568, 569, 570, 575, 577, 579, 581, 582, 583, 584, 589, 592, 594, 596, 597, 598, 604, 606, 607, 609, 610, 611, 612, 614, 619, 620, 622, 624, 625, 626, 627, 628, 634, 636, 638, 639, 640, 641, 646, 656, 662, 671, 672, 702, 705, 706, 715, 717, 718, 725, 727, 728, 735, 737, 738, 746, 748, 749, 756, 758, 759, 767, 773], "instanti": [30, 69, 70, 121, 420, 773], "instead": [16, 30, 529, 775], "instruct": [680, 699, 701, 724, 734, 745, 755, 769], "int": [48, 191, 228, 246, 343, 345, 360, 361, 365, 399, 463, 476, 483, 498, 505, 516, 535, 541, 549, 556, 562, 570, 582, 603, 611, 618, 626, 633, 641, 649, 653, 654, 661, 700, 745], "integ": [191, 246, 343, 399], "intend": [774, 775], "interact": [30, 655, 661, 670, 676, 682, 767, 784], "interaction_typ": 670, "interest": 354, "interfac": [10, 389, 394, 769], "intersect": [27, 28, 29, 290, 303, 315, 340, 479, 524, 538, 552, 565, 594, 598], "introduct": 769, "intuit": 769, "invok": 770, "io": 648, "ironpython": [11, 31, 50, 68, 85, 104, 122, 141, 158, 175, 192, 210, 229, 247, 265, 344, 372, 390, 400, 421, 439, 464, 477, 490, 506, 522, 536, 550, 563, 577, 592, 604, 619, 634, 656, 702, 715, 725, 735, 746, 756], "is_beam": 420, "is_built": 745, "is_group_el": 420, "is_plan": 745, "is_plat": 420, "is_wal": 420, "issu": 529, "item_input_valid": 769, "iter": 680, "itersect": [492, 508, 579, 607, 622, 636], "its": [11, 20, 21, 24, 25, 31, 40, 41, 44, 45, 50, 59, 60, 63, 64, 68, 77, 78, 81, 82, 85, 95, 96, 100, 101, 104, 114, 115, 118, 119, 122, 132, 133, 137, 138, 141, 150, 151, 154, 155, 158, 167, 168, 171, 172, 175, 184, 185, 188, 189, 191, 192, 202, 203, 206, 207, 210, 220, 221, 225, 226, 229, 238, 239, 243, 244, 246, 247, 256, 257, 261, 262, 265, 275, 276, 280, 281, 344, 352, 356, 363, 366, 367, 372, 378, 382, 384, 385, 390, 396, 397, 400, 407, 412, 415, 416, 421, 427, 431, 433, 434, 439, 445, 450, 452, 453, 464, 470, 471, 477, 486, 487, 490, 502, 503, 506, 518, 519, 522, 531, 532, 536, 546, 547, 550, 559, 560, 563, 572, 573, 577, 586, 587, 592, 598, 600, 601, 604, 615, 616, 619, 630, 631, 634, 643, 644, 656, 668, 690, 691, 702, 708, 709, 715, 720, 721, 725, 730, 731, 735, 740, 741, 746, 751, 752, 756, 761, 762, 770, 774, 780], "jack": [316, 549, 776], "jack_stud": [316, 776, 780], "jackraftercut": 769, "jo": [16, 36, 55, 73, 90, 109, 127, 146, 163, 180, 197, 215, 234, 252, 270], "join": [10, 16, 30, 36, 49, 55, 67, 73, 84, 90, 103, 109, 121, 127, 140, 146, 157, 163, 174, 180, 191, 197, 209, 215, 228, 234, 246, 252, 264, 270, 290, 292, 297, 303, 306, 315, 340, 457, 776, 781], "joineri": 680, "joint": [10, 12, 13, 14, 16, 22, 27, 47, 49, 51, 52, 53, 55, 65, 67, 69, 70, 71, 73, 84, 86, 87, 88, 90, 103, 105, 106, 107, 109, 121, 123, 124, 125, 127, 140, 142, 143, 144, 146, 157, 159, 160, 161, 163, 174, 176, 177, 178, 180, 191, 193, 194, 195, 197, 209, 211, 212, 213, 215, 228, 230, 231, 232, 234, 241, 246, 248, 249, 250, 252, 264, 266, 267, 268, 270, 290, 292, 297, 303, 306, 315, 334, 340, 345, 361, 389, 438, 457, 458, 498, 516, 582, 603, 611, 618, 626, 641, 655, 662, 680, 683, 767, 769, 772, 773, 775, 776, 781, 784], "joint_error": 292, "joint_factori": 773, "joint_kei": [345, 361], "joint_overrid": 776, "joint_typ": [84, 334], "jointdefinit": [290, 303, 315, 340, 769], "jointrul": [284, 290, 297, 303, 334, 340, 769, 781], "jointtopologi": [29, 334, 655, 769], "joist": 775, "json": [18, 19, 24, 25, 38, 39, 44, 45, 57, 58, 63, 64, 75, 76, 81, 82, 92, 93, 100, 101, 111, 112, 118, 119, 129, 130, 137, 138, 148, 149, 154, 155, 165, 166, 171, 172, 182, 183, 188, 189, 200, 201, 206, 207, 217, 218, 225, 226, 236, 237, 243, 244, 254, 255, 261, 262, 272, 273, 280, 281, 358, 359, 366, 367, 380, 381, 384, 385, 392, 393, 396, 397, 409, 410, 415, 416, 429, 430, 433, 434, 448, 449, 452, 453, 467, 468, 470, 471, 481, 482, 486, 487, 499, 500, 502, 503, 514, 515, 518, 519, 527, 528, 531, 532, 542, 543, 546, 547, 554, 555, 559, 560, 568, 569, 572, 573, 583, 584, 586, 587, 596, 597, 600, 601, 609, 610, 615, 616, 624, 625, 630, 631, 639, 640, 643, 644, 671, 672, 690, 691, 705, 706, 708, 709, 711, 712, 713, 717, 718, 720, 721, 727, 728, 730, 731, 737, 738, 740, 741, 748, 749, 751, 752, 758, 759, 761, 762], "just": 389, "k": 334, "kasir": 766, "keep": 780, "keep_connect": 653, "kei": [22, 30, 42, 84, 343, 345, 361, 399, 460, 462, 774], "keyword": [334, 659], "kick": [11, 31, 50, 68, 85, 104, 122, 141, 158, 175, 192, 210, 229, 247, 265, 344, 372, 390, 400, 421, 439, 464, 477, 490, 506, 522, 536, 550, 563, 577, 592, 604, 619, 634, 656, 702, 715, 725, 735, 746, 756], "kind": [771, 780], "king": [316, 776], "king_stud": [316, 776, 780], "kohler": [766, 769, 771], "kwarg": [16, 36, 55, 73, 90, 109, 127, 146, 163, 180, 197, 215, 234, 252, 270, 334, 659], "l": [49, 67, 84, 103, 121, 246, 334, 342, 782], "l_default": 342, "lap": [67, 84, 121, 209, 264, 342, 535, 544, 769], "lapjoint": [84, 209, 264, 769], "larger": [343, 775, 780], "later": [191, 774, 775], "latest": 770, "latter": 775, "layer": 783, "lbuttjoint": 769, "lead": 562, "lead_angl": 562, "lead_angle_parallel": 562, "lead_inclin": 562, "lead_inclination_parallel": 562, "lement": [346, 373, 401, 422, 440], "length": [174, 191, 209, 246, 264, 316, 343, 356, 460, 489, 498, 505, 516, 529, 562, 576, 582, 598, 633, 641], "length_limited_bottom": [489, 505, 576, 633, 641], "length_limited_top": [505, 576, 633, 641], "less": [16, 36, 55, 73, 90, 109, 127, 146, 163, 180, 197, 215, 234, 252, 270, 343], "level": 780, "lfrenchridgelapjoint": 769, "lhalflapjoint": 769, "li": [775, 783], "liabil": 771, "liabl": 771, "librari": [766, 767, 769, 772], "licens": 769, "lie": [16, 36, 55, 73, 90, 109, 127, 146, 163, 180, 197, 215, 234, 252, 270], "like": [769, 772, 781], "limit": [489, 505, 521, 562, 576, 618, 633, 641, 771], "limitation_top": 489, "line": [316, 343, 356, 399, 529, 769, 774, 775, 776, 779], "linear": [724, 775], "lineardimens": 769, "linecurv": 775, "link": 304, "lintel_post": 776, "list": [10, 16, 28, 30, 36, 55, 73, 84, 90, 109, 127, 146, 163, 180, 191, 197, 215, 234, 246, 252, 270, 283, 286, 290, 292, 299, 303, 311, 315, 316, 336, 340, 343, 346, 347, 354, 362, 373, 389, 401, 402, 411, 422, 440, 457, 458, 460, 483, 484, 495, 653, 655, 658, 664, 670, 745, 765, 773, 780, 782], "list_input_valid": 769, "liter": [534, 590, 647], "lmiterjoint": 769, "local": [343, 521, 775], "locat": [343, 745, 775], "log": [48, 700], "long": [343, 355], "long_edg": 343, "lower": 780, "lowest": 780, "ly": 779, "m": 770, "machin": [191, 246, 343, 484, 495, 496, 497, 511, 512, 513, 540, 544, 557, 562, 575, 581, 589, 612, 614, 627, 628, 638, 646, 773, 778], "machining_limit": 562, "made": [67, 191, 228, 246, 476, 489, 505, 529, 535, 549, 562, 576, 603, 618, 633, 780], "mai": [1, 774, 781], "main": [10, 22, 29, 42, 49, 61, 65, 79, 84, 98, 116, 121, 135, 152, 157, 169, 174, 186, 191, 204, 209, 223, 228, 240, 246, 258, 264, 278, 516, 567, 582, 611, 626, 641, 780], "main_beam": [49, 84, 121, 157, 174, 191, 209, 228, 246, 264, 567, 570, 768], "main_beam_guid": 246, "main_beam_kei": 84, "maintain": 769, "major": [343, 775], "make": [11, 15, 31, 35, 50, 54, 68, 72, 85, 89, 104, 108, 122, 126, 141, 145, 158, 162, 175, 179, 192, 196, 210, 214, 229, 233, 247, 251, 265, 269, 344, 353, 372, 379, 389, 390, 391, 400, 408, 421, 428, 439, 446, 464, 466, 477, 480, 490, 493, 506, 509, 522, 525, 529, 536, 539, 550, 553, 563, 566, 577, 580, 592, 595, 598, 604, 608, 619, 623, 634, 637, 656, 667, 702, 704, 715, 716, 725, 726, 735, 736, 746, 747, 756, 757], "manage_dynamic_param": 769, "mani": [766, 767, 769], "map": [30, 772, 783], "mapsiz": 783, "margin": [489, 505, 576, 633], "mass": 655, "match": [462, 773, 780], "materi": [343, 399, 657, 663, 664, 677, 775, 783], "mathemat": 29, "max": 781, "max_dist": [28, 29, 286, 290, 303, 315, 336, 340, 341], "maxdist": 781, "maximum": [29, 290, 303, 315, 340], "mayb": 660, "meant": 9, "meet": 780, "merchant": 771, "merg": 771, "mesh": [23, 43, 62, 80, 99, 117, 136, 153, 170, 187, 205, 224, 242, 260, 279, 349, 364, 375, 383, 395, 404, 405, 414, 424, 425, 432, 442, 443, 451, 469, 485, 501, 517, 530, 545, 558, 571, 585, 599, 613, 629, 642, 689, 707, 719, 729, 739, 750, 760, 768], "messag": [458, 459], "method": [10, 11, 16, 22, 27, 29, 30, 31, 36, 42, 47, 49, 50, 51, 52, 55, 67, 68, 69, 70, 73, 84, 85, 86, 90, 103, 104, 105, 106, 109, 121, 122, 127, 140, 141, 146, 157, 158, 159, 160, 163, 174, 175, 176, 177, 180, 191, 192, 193, 194, 197, 209, 210, 211, 215, 228, 229, 230, 231, 234, 246, 247, 248, 249, 252, 264, 265, 270, 284, 292, 297, 304, 306, 310, 316, 334, 343, 344, 371, 372, 389, 390, 399, 400, 420, 421, 438, 439, 460, 463, 464, 473, 476, 477, 489, 490, 505, 506, 516, 521, 522, 535, 536, 549, 550, 562, 563, 576, 577, 591, 592, 603, 604, 618, 619, 633, 634, 641, 655, 656, 680, 699, 701, 702, 711, 714, 715, 724, 725, 734, 735, 745, 746, 755, 756, 769, 773], "metric": 355, "middl": [343, 780], "midpoint": 343, "might": [772, 780], "mill": [49, 174, 492, 508, 579, 607, 622, 636], "mill_depth": [49, 174, 780], "mind": 773, "minim": [24, 25, 44, 45, 63, 64, 81, 82, 100, 101, 118, 119, 137, 138, 154, 155, 171, 172, 188, 189, 206, 207, 225, 226, 243, 244, 261, 262, 280, 281, 366, 367, 384, 385, 389, 396, 397, 415, 416, 433, 434, 452, 453, 470, 471, 486, 487, 502, 503, 518, 519, 531, 532, 546, 547, 559, 560, 572, 573, 586, 587, 600, 601, 615, 616, 630, 631, 643, 644, 690, 691, 708, 709, 720, 721, 730, 731, 740, 741, 751, 752, 761, 762], "minimum": 355, "misc": 766, "miss": 774, "mit": 771, "miter": [103, 342], "mm": 521, "mode": 770, "model": [0, 10, 16, 22, 36, 42, 49, 55, 61, 67, 69, 70, 73, 79, 84, 90, 98, 103, 109, 116, 121, 127, 135, 140, 146, 152, 157, 163, 169, 174, 180, 186, 191, 197, 204, 209, 215, 223, 228, 234, 240, 246, 252, 258, 264, 270, 278, 316, 342, 343, 352, 376, 378, 389, 399, 407, 427, 445, 473, 474, 475, 655, 657, 658, 659, 660, 661, 662, 663, 664, 669, 674, 675, 677, 678, 679, 680, 681, 683, 688, 692, 699, 734, 744, 769, 772, 775, 778, 779, 784], "model3d": 769, "modifi": [459, 692, 771], "modify_cross": [49, 780], "modul": [1, 9, 769, 773], "more": [228, 347, 389, 402, 457, 769, 772, 773, 775, 780], "mortis": [228, 246, 489, 495, 496, 498, 618, 620, 627, 769], "mortise_height": [618, 620], "mortise_width": [618, 620], "most": [20, 21, 40, 41, 59, 60, 77, 78, 95, 96, 114, 115, 132, 133, 150, 151, 167, 168, 184, 185, 202, 203, 220, 221, 238, 239, 256, 257, 275, 276], "move": 389, "multipl": [10, 297, 658, 767, 773], "must": [316, 476, 489, 505, 535, 549, 562, 576, 598, 603, 618, 633, 680, 776], "myenvnam": 770, "n": 770, "name": [463, 648, 651, 652, 653, 654, 659, 660, 673, 675, 773, 774, 782], "nation": 766, "nativ": [24, 25, 44, 45, 63, 64, 81, 82, 100, 101, 118, 119, 137, 138, 154, 155, 171, 172, 188, 189, 206, 207, 225, 226, 243, 244, 261, 262, 280, 281, 366, 367, 384, 385, 396, 397, 415, 416, 433, 434, 452, 453, 470, 471, 486, 487, 502, 503, 518, 519, 531, 532, 546, 547, 559, 560, 572, 573, 586, 587, 600, 601, 615, 616, 630, 631, 643, 644, 690, 691, 708, 709, 720, 721, 730, 731, 740, 741, 751, 752, 761, 762], "nccr": 766, "necessari": [51, 69, 70, 86, 105, 159, 176, 193, 211, 230, 248, 770, 773], "need": [389, 773, 774, 784], "neighbor": [28, 283, 765], "neightbor": [28, 765], "neither": 664, "nest": [465, 478, 491, 507, 523, 537, 551, 564, 578, 593, 605, 621, 635], "net": [11, 31, 50, 68, 85, 104, 122, 141, 158, 175, 192, 210, 229, 247, 265, 344, 372, 390, 400, 421, 439, 464, 477, 490, 506, 522, 536, 550, 563, 577, 592, 604, 619, 634, 656, 702, 715, 725, 735, 746, 756], "new": [16, 36, 55, 73, 90, 109, 127, 146, 163, 180, 197, 215, 234, 252, 270, 654, 770, 773, 775], "newlin": [24, 25, 44, 45, 63, 64, 81, 82, 100, 101, 118, 119, 137, 138, 154, 155, 171, 172, 188, 189, 206, 207, 225, 226, 243, 244, 261, 262, 280, 281, 366, 367, 384, 385, 396, 397, 415, 416, 433, 434, 452, 453, 470, 471, 486, 487, 502, 503, 518, 519, 531, 532, 546, 547, 559, 560, 572, 573, 586, 587, 600, 601, 615, 616, 630, 631, 643, 644, 690, 691, 708, 709, 720, 721, 730, 731, 740, 741, 751, 752, 761, 762], "node": [10, 657, 658, 659, 660], "non": 28, "none": [15, 29, 35, 54, 72, 89, 108, 126, 145, 162, 179, 196, 214, 228, 233, 241, 251, 269, 345, 346, 353, 356, 357, 361, 362, 368, 373, 379, 386, 389, 391, 399, 401, 408, 411, 413, 417, 422, 428, 435, 440, 446, 454, 466, 475, 480, 493, 509, 525, 539, 553, 562, 566, 580, 595, 608, 623, 637, 648, 649, 653, 654, 657, 658, 659, 660, 661, 663, 664, 667, 673, 681, 682, 684, 685, 686, 687, 692, 693, 696, 704, 716, 726, 736, 747, 757, 775], "noninfring": 771, "normal": [20, 21, 40, 41, 59, 60, 77, 78, 95, 96, 114, 115, 132, 133, 150, 151, 167, 168, 184, 185, 202, 203, 220, 221, 238, 239, 256, 257, 275, 276, 316, 343, 462, 516, 641], "notch": [191, 228, 618], "notch_limit": [618, 626], "notch_width": [618, 626], "note": [283, 657, 766], "notic": 771, "now": 780, "null": 140, "nulljoint": 769, "number": [649, 653, 776, 784], "obb": [351, 377, 406, 426, 444], "obj": [23, 43, 62, 80, 99, 117, 136, 153, 170, 187, 205, 224, 242, 260, 279, 364, 383, 395, 414, 432, 451, 469, 485, 501, 517, 530, 545, 558, 571, 585, 599, 613, 629, 642, 689, 707, 719, 729, 739, 745, 750, 760], "object": [11, 15, 16, 18, 19, 22, 24, 25, 26, 27, 28, 31, 35, 36, 38, 39, 42, 44, 45, 46, 47, 50, 54, 55, 57, 58, 63, 64, 66, 68, 72, 73, 75, 76, 81, 82, 83, 85, 89, 90, 92, 93, 100, 101, 102, 104, 108, 109, 111, 112, 118, 119, 120, 122, 126, 127, 129, 130, 137, 138, 139, 141, 145, 146, 148, 149, 154, 155, 156, 158, 162, 163, 165, 166, 171, 172, 173, 175, 179, 180, 182, 183, 188, 189, 190, 192, 196, 197, 200, 201, 206, 207, 208, 210, 214, 215, 217, 218, 225, 226, 227, 229, 233, 234, 236, 237, 243, 244, 245, 247, 251, 252, 254, 255, 261, 262, 263, 265, 269, 270, 272, 273, 280, 281, 282, 283, 292, 304, 306, 310, 316, 344, 353, 358, 359, 366, 367, 370, 372, 379, 380, 381, 384, 385, 388, 390, 391, 392, 393, 396, 397, 398, 400, 408, 409, 410, 415, 416, 419, 421, 428, 429, 430, 433, 434, 437, 439, 446, 448, 449, 452, 453, 456, 460, 464, 466, 467, 468, 470, 471, 472, 473, 474, 475, 477, 480, 481, 482, 486, 487, 488, 490, 493, 499, 500, 502, 503, 504, 506, 509, 514, 515, 518, 519, 520, 522, 525, 526, 527, 528, 531, 532, 533, 534, 536, 539, 542, 543, 546, 547, 548, 550, 553, 554, 555, 559, 560, 561, 563, 566, 568, 569, 572, 573, 574, 577, 580, 583, 584, 586, 587, 588, 590, 592, 595, 596, 597, 600, 601, 602, 604, 608, 609, 610, 615, 616, 617, 619, 623, 624, 625, 630, 631, 632, 634, 637, 639, 640, 643, 644, 645, 647, 648, 649, 653, 654, 655, 656, 661, 662, 667, 671, 672, 683, 690, 691, 698, 699, 702, 704, 705, 706, 708, 709, 710, 711, 715, 716, 717, 718, 720, 721, 723, 725, 726, 727, 728, 730, 731, 733, 735, 736, 737, 738, 740, 741, 743, 744, 746, 747, 748, 749, 751, 752, 754, 756, 757, 758, 759, 761, 762, 764, 769, 774, 775, 776, 781, 783], "obtain": 771, "occ": 769, "occur": [292, 457, 782], "offset": [348, 351, 374, 377, 403, 406, 423, 426, 441, 444, 498, 516, 582, 641, 776], "often": 438, "onc": [343, 399, 775], "one": [20, 21, 40, 41, 59, 60, 77, 78, 84, 95, 96, 114, 115, 121, 132, 133, 150, 151, 157, 167, 168, 184, 185, 191, 202, 203, 209, 220, 221, 228, 238, 239, 246, 256, 257, 264, 275, 276, 291, 347, 402, 462, 598, 661, 664, 744, 745, 773, 775, 780, 782], "onli": [12, 14, 22, 32, 34, 42, 53, 67, 88, 107, 123, 125, 142, 144, 161, 178, 195, 213, 250, 266, 268, 350, 405, 425, 443, 680, 774], "onto": 776, "open": [766, 769], "opencascad": 769, "oper": [779, 781], "oppedg": [534, 535], "oppos": 360, "opposit": [49, 534, 780], "option": [12, 14, 15, 20, 21, 23, 24, 25, 28, 29, 32, 34, 35, 40, 41, 43, 44, 45, 53, 54, 59, 60, 62, 63, 64, 72, 77, 78, 80, 81, 82, 88, 89, 95, 96, 99, 100, 101, 107, 108, 114, 115, 117, 118, 119, 123, 125, 126, 132, 133, 136, 137, 138, 142, 144, 145, 150, 151, 153, 154, 155, 161, 162, 167, 168, 170, 171, 172, 178, 179, 184, 185, 187, 188, 189, 191, 195, 196, 202, 203, 205, 206, 207, 213, 214, 220, 221, 224, 225, 226, 233, 238, 239, 242, 243, 244, 250, 251, 256, 257, 260, 261, 262, 266, 268, 269, 275, 276, 279, 280, 281, 283, 290, 303, 315, 316, 340, 343, 348, 350, 353, 364, 366, 367, 374, 379, 383, 384, 385, 389, 391, 395, 396, 397, 399, 403, 405, 408, 414, 415, 416, 423, 425, 428, 432, 433, 434, 441, 443, 446, 451, 452, 453, 466, 469, 470, 471, 480, 483, 485, 486, 487, 493, 498, 501, 502, 503, 509, 516, 517, 518, 519, 525, 530, 531, 532, 539, 541, 545, 546, 547, 553, 556, 558, 559, 560, 562, 566, 570, 571, 572, 573, 580, 582, 585, 586, 587, 595, 599, 600, 601, 608, 611, 613, 615, 616, 623, 626, 629, 630, 631, 637, 641, 642, 643, 644, 649, 653, 657, 658, 659, 660, 661, 664, 667, 673, 682, 684, 685, 686, 687, 689, 690, 691, 704, 707, 708, 709, 716, 719, 720, 721, 726, 729, 730, 731, 736, 739, 740, 741, 747, 750, 751, 752, 757, 760, 761, 762, 775, 784], "order": [29, 283, 291, 744], "orient": [316, 351, 356, 357, 377, 406, 426, 444, 476, 505, 535, 549, 562, 590, 598, 603, 618, 633, 666, 783], "orientationtyp": [476, 505, 535, 549, 562, 603, 618, 633, 769], "origin": [15, 35, 54, 72, 89, 108, 126, 145, 162, 179, 196, 214, 233, 251, 269, 343, 353, 379, 391, 408, 428, 446, 466, 480, 493, 509, 525, 539, 553, 566, 580, 595, 608, 623, 637, 667, 684, 685, 704, 716, 726, 736, 747, 757, 775, 783], "orthogon": [20, 40, 59, 77, 95, 114, 132, 150, 167, 184, 202, 220, 238, 256, 275], "other": [11, 20, 21, 31, 40, 41, 50, 59, 60, 68, 77, 78, 84, 85, 95, 96, 104, 114, 115, 121, 122, 132, 133, 141, 150, 151, 157, 158, 167, 168, 175, 184, 185, 191, 192, 202, 203, 209, 210, 220, 221, 228, 229, 238, 239, 246, 247, 256, 257, 264, 265, 275, 276, 308, 344, 372, 390, 400, 420, 421, 438, 439, 464, 477, 490, 506, 522, 536, 541, 550, 563, 577, 592, 604, 619, 634, 656, 660, 702, 715, 725, 735, 746, 756, 766, 771, 780, 784], "other_beam": 541, "otherwis": [29, 49, 286, 299, 311, 336, 521, 771, 775], "out": 771, "outer": 780, "outlin": [389, 399, 413], "outline_point": 389, "output": [11, 24, 25, 29, 31, 44, 45, 50, 63, 64, 68, 81, 82, 85, 100, 101, 104, 118, 119, 122, 137, 138, 141, 154, 155, 158, 171, 172, 175, 188, 189, 192, 206, 207, 210, 225, 226, 229, 243, 244, 247, 261, 262, 265, 280, 281, 344, 366, 367, 372, 384, 385, 390, 396, 397, 400, 415, 416, 421, 433, 434, 439, 452, 453, 464, 470, 471, 477, 486, 487, 490, 502, 503, 506, 518, 519, 522, 531, 532, 536, 546, 547, 550, 559, 560, 563, 572, 573, 577, 586, 587, 592, 600, 601, 604, 615, 616, 619, 630, 631, 634, 643, 644, 648, 656, 690, 691, 702, 708, 709, 715, 720, 721, 725, 730, 731, 735, 740, 741, 746, 751, 752, 756, 761, 762, 775, 776, 778, 779, 781], "over": 389, "overal": 772, "overlai": 755, "overlap": 780, "overrid": [11, 31, 50, 68, 85, 104, 122, 141, 158, 175, 192, 210, 229, 247, 265, 344, 372, 390, 400, 421, 439, 464, 477, 490, 506, 522, 536, 550, 563, 577, 592, 604, 619, 634, 656, 702, 715, 725, 735, 746, 756, 776], "overwrit": [780, 784], "own": [711, 780], "packag": [769, 770, 773], "pair": [28, 29, 283, 765, 774], "panel": [11, 31, 50, 68, 85, 104, 122, 141, 158, 175, 192, 210, 229, 247, 265, 316, 344, 372, 390, 400, 421, 439, 464, 477, 490, 506, 522, 536, 550, 563, 577, 592, 604, 619, 634, 656, 702, 715, 725, 735, 746, 756], "panel_height": 316, "panel_length": 316, "parallel": [562, 570, 598, 745, 775, 780], "param": [651, 652], "paramet": [10, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 28, 29, 35, 36, 38, 39, 40, 41, 43, 44, 45, 46, 48, 49, 54, 55, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 72, 73, 75, 76, 77, 78, 80, 81, 82, 83, 84, 89, 90, 92, 93, 95, 96, 99, 100, 101, 102, 103, 108, 109, 111, 112, 114, 115, 117, 118, 119, 120, 121, 126, 127, 129, 130, 132, 133, 136, 137, 138, 139, 140, 145, 146, 148, 149, 150, 151, 153, 154, 155, 156, 157, 162, 163, 165, 166, 167, 168, 170, 171, 172, 173, 174, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 191, 196, 197, 198, 200, 201, 202, 203, 205, 206, 207, 208, 209, 214, 215, 217, 218, 220, 221, 224, 225, 226, 227, 228, 233, 234, 236, 237, 238, 239, 242, 243, 244, 245, 246, 251, 252, 254, 255, 256, 257, 260, 261, 262, 263, 264, 269, 270, 272, 273, 275, 276, 279, 280, 281, 282, 283, 286, 290, 291, 299, 303, 311, 315, 316, 334, 336, 340, 343, 346, 347, 348, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 377, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 395, 396, 397, 398, 399, 401, 402, 403, 405, 406, 408, 409, 410, 411, 414, 415, 416, 417, 418, 419, 422, 423, 425, 426, 428, 429, 430, 432, 433, 434, 435, 436, 437, 440, 441, 443, 444, 446, 448, 449, 451, 452, 453, 454, 455, 456, 460, 461, 462, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 648, 649, 653, 654, 657, 658, 659, 660, 661, 662, 663, 664, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 680, 681, 682, 683, 684, 685, 686, 687, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 700, 704, 705, 706, 707, 708, 709, 710, 712, 713, 716, 717, 718, 719, 720, 721, 723, 726, 727, 728, 729, 730, 731, 733, 736, 737, 738, 739, 740, 741, 743, 744, 747, 748, 749, 750, 751, 752, 754, 757, 758, 759, 760, 761, 762, 764, 765, 773, 774, 783], "parametr": [343, 365, 476, 489, 505, 516, 535, 549, 562, 576, 603, 618, 633, 641, 769], "parent": [657, 658, 659, 660], "pars": 711, "part": [22, 42, 460, 540, 541, 657, 664, 765, 769, 773, 775, 779], "particular": 771, "pass": [16, 334, 355], "path": [18, 24, 38, 44, 57, 63, 75, 81, 92, 100, 111, 118, 129, 137, 148, 154, 165, 171, 182, 188, 200, 206, 217, 225, 236, 243, 254, 261, 272, 280, 358, 366, 380, 384, 392, 396, 409, 415, 429, 433, 448, 452, 467, 470, 475, 481, 486, 499, 502, 514, 518, 527, 531, 542, 546, 554, 559, 568, 572, 583, 586, 596, 600, 609, 615, 624, 630, 639, 643, 671, 690, 705, 708, 712, 713, 717, 720, 727, 730, 737, 740, 748, 751, 758, 761, 778], "pdf": 773, "per": 744, "perhap": 389, "permanent_param_count": [649, 653], "permiss": 771, "permit": 771, "perpendicular": [389, 775], "person": 771, "pip": 770, "place": [11, 31, 50, 68, 85, 104, 122, 141, 158, 175, 192, 210, 229, 247, 265, 344, 372, 390, 400, 421, 439, 464, 477, 490, 506, 522, 536, 550, 563, 577, 592, 604, 619, 634, 656, 692, 702, 715, 725, 735, 746, 756, 780], "plan": [0, 699, 701, 711, 712, 713, 714, 724, 734, 744, 745, 755, 769], "plana": 626, "planar": [316, 365, 772, 776, 780], "plane": [49, 103, 355, 479, 483, 484, 492, 498, 516, 524, 538, 541, 552, 556, 557, 565, 570, 579, 582, 594, 598, 607, 611, 612, 622, 626, 628, 638, 641, 775, 779, 780, 783], "plate": [316, 389, 420, 655, 769, 776, 781], "pleas": [10, 49, 67, 84, 103, 121, 140, 157, 174, 191, 209, 228, 246, 264, 766], "pln": 355, "plug": 769, "pluggabl": 283, "plugin": [283, 769], "plywood": 399, "pocket": [49, 174, 489], "point": [343, 348, 351, 354, 357, 374, 377, 389, 403, 406, 423, 426, 441, 444, 461, 489, 505, 521, 529, 576, 633, 655, 684, 685, 769, 780, 783], "point_end": 357, "point_start": 357, "polylin": [328, 389, 399], "portion": 771, "posit": [191, 246, 343, 352, 378, 407, 427, 445, 460, 534, 535, 779], "possibl": [47, 774], "post": 316, "prefabr": 438, "prehap": 389, "presenc": [603, 618], "present": [767, 780], "pretti": [24, 25, 44, 45, 63, 64, 81, 82, 100, 101, 118, 119, 137, 138, 154, 155, 171, 172, 188, 189, 206, 207, 225, 226, 243, 244, 261, 262, 280, 281, 366, 367, 384, 385, 396, 397, 415, 416, 433, 434, 452, 453, 470, 471, 486, 487, 502, 503, 518, 519, 531, 532, 546, 547, 559, 560, 572, 573, 586, 587, 600, 601, 615, 616, 630, 631, 643, 644, 690, 691, 708, 709, 720, 721, 730, 731, 740, 741, 751, 752, 761, 762], "prevent": 780, "preview": 782, "princip": 541, "print": [11, 31, 50, 68, 85, 104, 122, 141, 158, 175, 192, 210, 229, 247, 265, 344, 372, 390, 400, 421, 439, 464, 477, 490, 506, 522, 536, 550, 563, 577, 592, 604, 619, 634, 656, 702, 715, 725, 735, 746, 756], "prior": 765, "priorit": 65, "prioriti": [463, 745, 780], "process": [69, 70, 191, 246, 290, 303, 315, 340, 343, 460, 463, 479, 492, 508, 521, 524, 529, 538, 552, 565, 579, 594, 607, 622, 636, 680, 769, 772, 773, 784], "process_id": 463, "process_joineri": [69, 70], "process_param": 773, "process_typ": 773, "processing_nam": 463, "produc": 343, "product": [20, 21, 40, 41, 59, 60, 77, 78, 95, 96, 114, 115, 132, 133, 150, 151, 167, 168, 184, 185, 202, 203, 220, 221, 238, 239, 256, 257, 275, 276], "programm": 766, "project": [766, 769], "proper": [11, 31, 50, 68, 85, 104, 122, 141, 158, 175, 192, 210, 229, 247, 265, 344, 372, 390, 400, 421, 439, 464, 477, 490, 506, 522, 536, 550, 563, 577, 592, 604, 619, 634, 656, 702, 715, 725, 735, 746, 756], "properli": [10, 49, 67, 84, 103, 121, 140, 157, 174, 191, 209, 228, 246, 264], "provid": [27, 241, 259, 286, 299, 311, 336, 598, 657, 660, 664, 711, 771, 772, 775, 781], "publish": 771, "purpos": 771, "put": [389, 460], "py": 773, "python": [767, 769, 770, 772], "queri": [673, 675], "r": [28, 283, 770], "radian": [684, 685], "radiu": [191, 246, 489, 498, 505, 516, 576, 582, 633, 641, 647], "rafter": [549, 775], "rais": [1, 12, 14, 16, 18, 19, 32, 33, 34, 36, 38, 39, 51, 53, 55, 57, 58, 69, 71, 73, 75, 76, 86, 87, 88, 90, 92, 93, 105, 107, 109, 111, 112, 123, 124, 125, 127, 129, 130, 142, 144, 146, 148, 149, 159, 161, 163, 165, 166, 176, 178, 180, 182, 183, 193, 195, 197, 200, 201, 211, 212, 213, 215, 217, 218, 230, 232, 234, 236, 237, 248, 250, 252, 254, 255, 266, 267, 268, 270, 272, 273, 358, 359, 380, 381, 392, 393, 409, 410, 429, 430, 448, 449, 458, 459, 467, 468, 479, 481, 482, 492, 499, 500, 508, 514, 515, 524, 527, 528, 538, 542, 543, 552, 554, 555, 565, 568, 569, 579, 583, 584, 594, 596, 597, 607, 609, 610, 622, 624, 625, 636, 639, 640, 657, 660, 661, 664, 671, 672, 705, 706, 717, 718, 727, 728, 737, 738, 748, 749, 758, 759], "random": 783, "rather": [23, 43, 62, 80, 99, 117, 136, 153, 170, 187, 205, 224, 242, 260, 279, 364, 383, 395, 414, 432, 451, 469, 485, 501, 517, 530, 545, 558, 571, 585, 599, 613, 629, 642, 689, 707, 719, 729, 739, 750, 760], "ratio": 783, "raw": [26, 46, 66, 83, 102, 120, 139, 156, 173, 190, 208, 227, 245, 263, 282, 370, 388, 398, 419, 437, 456, 472, 488, 504, 520, 533, 548, 561, 574, 588, 602, 617, 632, 645, 698, 710, 723, 733, 743, 754, 764, 775], "reason": 680, "recogn": 782, "rectangular": [343, 775], "reder": [489, 505, 576, 633], "ref_edg": 343, "ref_fram": 343, "ref_posit": 535, "ref_sid": [343, 498, 516, 582, 611, 626, 641], "ref_side_index": [463, 483, 498, 516, 541, 556, 570, 582, 611, 626, 641], "refedg": [534, 535], "refer": [22, 42, 61, 79, 98, 116, 135, 152, 169, 186, 204, 223, 240, 258, 278, 343, 360, 365, 438, 462, 463, 476, 483, 489, 498, 505, 516, 521, 529, 534, 535, 541, 549, 556, 562, 570, 576, 582, 603, 611, 618, 626, 633, 641, 769, 772, 773, 774], "referenc": [775, 776], "regard": [283, 498, 582], "register_joint": 773, "reject": 49, "reject_i": [49, 780], "relat": [292, 438, 516, 641, 773], "remain": 780, "remov": [345, 361, 362, 363, 382, 411, 412, 431, 450, 681, 682, 683, 774, 779, 780], "renam": [653, 654], "rename_count": 653, "rename_gh_input": 769, "render": [772, 783], "repositori": 770, "repres": [10, 49, 67, 84, 103, 157, 174, 191, 209, 228, 246, 264, 343, 371, 389, 399, 438, 460, 473, 476, 489, 505, 521, 535, 549, 562, 576, 603, 618, 633, 655, 661, 699, 775], "represent": [11, 24, 25, 31, 44, 45, 48, 50, 63, 64, 68, 81, 82, 84, 85, 100, 101, 104, 118, 119, 122, 137, 138, 141, 154, 155, 158, 171, 172, 175, 188, 189, 192, 206, 207, 210, 225, 226, 229, 243, 244, 247, 261, 262, 265, 280, 281, 344, 366, 367, 372, 384, 385, 389, 390, 396, 397, 400, 415, 416, 421, 433, 434, 439, 452, 453, 464, 470, 471, 477, 486, 487, 490, 502, 503, 506, 518, 519, 522, 531, 532, 536, 546, 547, 550, 559, 560, 563, 572, 573, 577, 586, 587, 592, 600, 601, 604, 615, 616, 619, 630, 631, 634, 643, 644, 656, 690, 691, 700, 702, 708, 709, 715, 720, 721, 725, 730, 731, 735, 740, 741, 746, 751, 752, 756, 761, 762, 773], "request": 365, "requir": [12, 14, 32, 34, 52, 53, 88, 106, 107, 123, 125, 142, 144, 160, 161, 177, 178, 194, 195, 213, 231, 249, 250, 266, 268, 345, 361, 770], "requr": 773, "research": [766, 769, 771], "resolv": 769, "respect": [22, 30, 42], "respons": [16, 36, 55, 73, 90, 109, 127, 146, 163, 180, 197, 215, 234, 252, 270, 389], "restor": [22, 42, 61, 79, 98, 116, 135, 152, 169, 186, 204, 223, 240, 258, 278], "restrict": 771, "result": [20, 21, 40, 41, 59, 60, 77, 78, 95, 96, 114, 115, 132, 133, 150, 151, 167, 168, 184, 185, 202, 203, 220, 221, 238, 239, 256, 257, 275, 276, 354, 389, 479, 492, 508, 524, 538, 552, 565, 579, 594, 607, 622, 636, 744, 775, 776], "rethink": 371, "retriev": [668, 774], "return": [15, 16, 18, 19, 20, 21, 23, 25, 26, 28, 29, 30, 35, 36, 38, 39, 40, 41, 43, 45, 46, 48, 54, 55, 57, 58, 59, 60, 62, 64, 66, 72, 73, 75, 76, 77, 78, 80, 82, 83, 89, 90, 92, 93, 95, 96, 99, 101, 102, 108, 109, 111, 112, 114, 115, 117, 119, 120, 126, 127, 129, 130, 132, 133, 136, 138, 139, 145, 146, 148, 149, 150, 151, 153, 155, 156, 162, 163, 165, 166, 167, 168, 170, 172, 173, 179, 180, 182, 183, 184, 185, 187, 189, 190, 196, 197, 200, 201, 202, 203, 205, 207, 208, 214, 215, 217, 218, 220, 221, 224, 226, 227, 233, 234, 236, 237, 238, 239, 242, 244, 245, 251, 252, 254, 255, 256, 257, 260, 262, 263, 269, 270, 272, 273, 275, 276, 279, 281, 282, 283, 286, 290, 291, 299, 303, 309, 311, 315, 336, 340, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 364, 365, 367, 368, 369, 370, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 385, 386, 387, 388, 389, 391, 392, 393, 395, 397, 398, 401, 403, 404, 405, 406, 407, 408, 409, 410, 414, 416, 417, 418, 419, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 434, 435, 436, 437, 440, 441, 442, 443, 444, 445, 446, 448, 449, 451, 453, 454, 455, 456, 461, 462, 466, 467, 468, 469, 471, 472, 474, 475, 479, 480, 481, 482, 483, 484, 485, 487, 488, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 508, 509, 512, 513, 514, 515, 516, 517, 519, 520, 524, 525, 526, 527, 528, 529, 530, 532, 533, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 552, 553, 554, 555, 556, 557, 558, 560, 561, 565, 566, 567, 568, 569, 570, 571, 573, 574, 575, 579, 580, 581, 582, 583, 584, 585, 587, 588, 589, 594, 595, 596, 597, 598, 599, 601, 602, 607, 608, 609, 610, 611, 612, 613, 614, 616, 617, 622, 623, 624, 625, 626, 627, 628, 629, 631, 632, 636, 637, 638, 639, 640, 641, 642, 644, 645, 646, 648, 649, 653, 654, 657, 658, 659, 660, 661, 663, 664, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 681, 682, 684, 685, 686, 687, 689, 691, 692, 693, 694, 695, 696, 697, 698, 700, 704, 705, 706, 707, 709, 710, 712, 716, 717, 718, 719, 721, 723, 726, 727, 728, 729, 731, 733, 736, 737, 738, 739, 741, 743, 747, 748, 749, 750, 752, 754, 757, 758, 759, 760, 762, 764, 765], "rhino": [0, 11, 31, 50, 68, 85, 104, 122, 141, 158, 175, 192, 210, 229, 247, 265, 283, 344, 372, 390, 400, 421, 439, 464, 477, 490, 506, 522, 536, 550, 563, 577, 592, 604, 619, 634, 656, 702, 715, 725, 735, 746, 756, 765, 767, 769, 770, 774, 775, 780, 783], "rhinocero": 769, "rhinocommon": 769, "rhinocurv": 399, "ridg": [67, 535, 544], "right": [771, 780], "robot": [700, 745], "role": [22, 29, 42, 291], "root": [657, 658], "rotat": [191, 246, 505, 516, 521, 633, 641, 686, 687, 696, 697, 775], "round": [191, 246, 489, 505, 576, 633, 647], "rs1": [463, 483, 498, 516, 541, 556, 570, 582, 611, 626, 641], "rs6": 463, "rtree": [28, 765], "rule": [284, 286, 287, 288, 289, 290, 297, 299, 300, 301, 302, 303, 311, 312, 313, 314, 315, 316, 334, 336, 337, 338, 339, 340, 769, 772, 775, 776, 781, 784], "run": [767, 769], "sai": 775, "same": [15, 29, 35, 49, 54, 67, 72, 89, 108, 126, 145, 162, 179, 196, 214, 233, 251, 269, 353, 379, 391, 408, 428, 446, 466, 480, 493, 509, 525, 539, 553, 566, 580, 595, 608, 623, 637, 660, 667, 704, 716, 726, 736, 744, 745, 747, 757], "save": [24, 25, 44, 45, 61, 63, 64, 79, 81, 82, 98, 100, 101, 116, 118, 119, 135, 137, 138, 152, 154, 155, 169, 171, 172, 186, 188, 189, 204, 206, 207, 223, 225, 226, 240, 243, 244, 258, 261, 262, 278, 280, 281, 366, 367, 384, 385, 396, 397, 415, 416, 433, 434, 452, 453, 470, 471, 486, 487, 502, 503, 518, 519, 531, 532, 546, 547, 559, 560, 572, 573, 586, 587, 600, 601, 615, 616, 630, 631, 643, 644, 690, 691, 708, 709, 720, 721, 730, 731, 740, 741, 751, 752, 761, 762, 778], "scale": [684, 685, 696, 697, 783], "schema": [18, 19, 26, 38, 39, 46, 57, 58, 66, 75, 76, 83, 92, 93, 102, 111, 112, 120, 129, 130, 139, 148, 149, 156, 165, 166, 173, 182, 183, 190, 200, 201, 208, 217, 218, 227, 236, 237, 245, 254, 255, 263, 272, 273, 282, 358, 359, 370, 380, 381, 388, 392, 393, 398, 409, 410, 419, 429, 430, 437, 448, 449, 456, 467, 468, 472, 481, 482, 488, 499, 500, 504, 514, 515, 520, 527, 528, 533, 542, 543, 548, 554, 555, 561, 568, 569, 574, 583, 584, 588, 596, 597, 602, 609, 610, 617, 624, 625, 632, 639, 640, 645, 671, 672, 698, 705, 706, 710, 717, 718, 723, 727, 728, 733, 737, 738, 743, 748, 749, 754, 758, 759, 764], "scienc": 766, "screw": [371, 734], "sdk": 769, "search": [28, 283], "second": [29, 67, 103, 140, 157, 191, 228, 246, 291, 354, 476, 661, 676, 680], "section": [49, 65, 343, 356, 357, 767, 772, 775, 776, 780], "secur": 780, "see": [1, 22, 42, 655, 772, 775, 777, 779, 780, 783], "seem": 389, "select": [776, 780, 782], "self": [11, 31, 50, 68, 85, 104, 122, 141, 158, 175, 192, 210, 229, 247, 265, 344, 372, 390, 400, 421, 439, 464, 477, 490, 506, 522, 536, 550, 563, 577, 592, 604, 619, 634, 656, 702, 715, 725, 735, 746, 756, 773], "sell": 771, "semant": 769, "sens": 389, "sensit": 29, "separ": [16, 774], "sequenc": [680, 744, 769], "sequenti": 780, "serial": [22, 42, 61, 79, 98, 116, 135, 152, 169, 186, 204, 223, 240, 258, 278, 711], "serv": [438, 783], "session": 767, "set": [28, 191, 241, 259, 283, 676, 765, 774, 775, 776, 780, 781], "set_default_joint": 769, "setcustomattribut": 774, "setstandardattribut": 774, "shall": [306, 660, 771], "shape": [191, 228, 246, 343, 389, 399, 489, 498, 505, 516, 576, 582, 603, 618, 633, 641, 647], "shape_radiu": [191, 246, 489, 498, 505, 516, 576, 582, 633, 641], "sheet": 776, "sheeting_insid": 776, "sheeting_outsid": 776, "shift": [84, 121, 209, 264, 780], "shorten": 780, "should": [12, 14, 22, 30, 32, 33, 34, 42, 53, 84, 87, 88, 107, 121, 123, 124, 125, 142, 144, 161, 178, 195, 209, 212, 213, 250, 264, 266, 267, 268, 283, 304, 345, 355, 371, 389, 420, 457, 483, 489, 498, 516, 535, 556, 582, 611, 626, 641, 649, 653, 657, 773, 780], "shouldn": 140, "show": [769, 772], "side": [84, 121, 209, 264, 343, 360, 365, 462, 463, 476, 483, 489, 498, 505, 516, 521, 529, 535, 541, 549, 556, 562, 570, 576, 582, 598, 603, 611, 618, 626, 633, 641, 776, 779, 780], "side_index": [360, 365], "sill": [316, 776, 780], "similar": [11, 31, 50, 68, 85, 104, 122, 141, 158, 175, 192, 210, 229, 247, 265, 344, 372, 390, 400, 421, 439, 464, 477, 490, 506, 522, 536, 550, 563, 577, 592, 604, 619, 634, 656, 702, 715, 725, 735, 746, 756, 780], "simpl": [744, 769, 772], "simplesequencegener": 769, "sinc": [22, 42, 680], "singl": [438, 745, 773], "size": [775, 783], "slat": 343, "slope": [489, 562, 576], "slot": 769, "small": 598, "small_beam_butt": [49, 65, 780], "smaller": [49, 65, 343, 775], "so": [771, 773], "softwar": [769, 771], "solid": [343, 389, 781], "some": [389, 772, 783], "sort": 291, "sourc": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 769, 774, 775], "space": [316, 476, 489, 505, 516, 535, 549, 562, 576, 603, 618, 633, 641, 776], "spatial": [352, 378, 407, 427, 445], "specialist": 769, "specif": [22, 29, 42, 670, 677, 769, 773, 775, 776, 780], "specifi": [598, 668, 776], "squar": [191, 246, 489, 505, 576, 633, 647], "stage": 769, "standard": [343, 776], "start": [191, 246, 343, 345, 354, 355, 357, 476, 489, 498, 505, 516, 521, 535, 549, 562, 576, 582, 590, 603, 618, 633, 641, 772, 775], "start_depth": [191, 246, 489, 498, 505, 516, 549, 576, 582, 633, 641], "start_i": [191, 246, 476, 489, 505, 516, 521, 549, 562, 576, 618, 626, 633, 641], "start_x": [476, 489, 505, 521, 535, 549, 562, 576, 603, 618, 633], "state": [363, 382, 412, 431, 450], "static": [20, 21, 40, 41, 59, 60, 77, 78, 95, 96, 114, 115, 132, 133, 150, 151, 167, 168, 184, 185, 202, 203, 220, 221, 238, 239, 256, 257, 275, 276, 287, 288, 289, 290, 300, 301, 302, 303, 312, 313, 314, 315, 337, 338, 339, 340], "step": [228, 241, 492, 508, 579, 603, 607, 618, 622, 636, 701, 703, 744, 769, 773], "step_depth": [228, 241, 603, 611, 618, 626], "step_shap": [228, 603, 618], "stepjoint": 769, "stepjointnotch": [606, 769], "stepshapetyp": 618, "still": 28, "stock": [343, 775], "store": [22, 42, 774, 775], "str": [18, 19, 23, 24, 25, 30, 38, 39, 43, 44, 45, 48, 57, 58, 62, 63, 64, 75, 76, 80, 81, 82, 84, 92, 93, 99, 100, 101, 111, 112, 117, 118, 119, 129, 130, 136, 137, 138, 148, 149, 153, 154, 155, 165, 166, 170, 171, 172, 182, 183, 187, 188, 189, 200, 201, 205, 206, 207, 217, 218, 224, 225, 226, 236, 237, 242, 243, 244, 246, 254, 255, 260, 261, 262, 272, 273, 279, 280, 281, 354, 358, 359, 364, 366, 367, 380, 381, 383, 384, 385, 392, 393, 395, 396, 397, 409, 410, 414, 415, 416, 429, 430, 432, 433, 434, 448, 449, 451, 452, 453, 457, 458, 459, 460, 462, 463, 467, 468, 469, 470, 471, 475, 481, 482, 485, 486, 487, 489, 498, 499, 500, 501, 502, 503, 505, 514, 515, 516, 517, 518, 519, 527, 528, 530, 531, 532, 542, 543, 545, 546, 547, 554, 555, 558, 559, 560, 568, 569, 571, 572, 573, 576, 582, 583, 584, 585, 586, 587, 596, 597, 599, 600, 601, 603, 609, 610, 613, 615, 616, 618, 624, 625, 629, 630, 631, 633, 639, 640, 641, 642, 643, 644, 648, 653, 654, 659, 660, 668, 671, 672, 673, 675, 689, 690, 691, 700, 705, 706, 707, 708, 709, 712, 713, 717, 718, 719, 720, 721, 727, 728, 729, 730, 731, 737, 738, 739, 740, 741, 745, 748, 749, 750, 751, 752, 758, 759, 760, 761, 762], "straight": [529, 775], "string": [11, 19, 25, 31, 39, 45, 48, 50, 58, 64, 68, 76, 82, 84, 85, 93, 101, 104, 112, 119, 122, 130, 138, 141, 149, 155, 158, 166, 172, 175, 183, 189, 192, 201, 207, 210, 218, 226, 229, 237, 244, 247, 255, 262, 265, 273, 281, 344, 359, 367, 372, 381, 385, 390, 393, 397, 400, 410, 416, 421, 430, 434, 439, 449, 453, 457, 464, 468, 471, 474, 477, 482, 487, 490, 500, 503, 506, 515, 519, 522, 528, 532, 536, 543, 547, 550, 555, 560, 563, 569, 573, 577, 584, 587, 592, 597, 601, 604, 610, 616, 619, 625, 631, 634, 640, 644, 656, 672, 691, 700, 702, 706, 709, 715, 718, 721, 725, 728, 731, 735, 738, 741, 746, 749, 752, 756, 759, 762, 774, 775, 780], "structur": [389, 693, 694, 695, 766, 769, 772, 776, 781, 784], "strut": [603, 618], "strut_height": [618, 626], "strut_inclin": [603, 618], "stud": [316, 343, 775, 776, 780], "stud_direct": 776, "stud_spac": [316, 776], "studio": 767, "stuff": 389, "style": 772, "sub": 121, "subject": 771, "sublicens": 771, "sublim": 767, "subprocess": [465, 478, 491, 507, 523, 537, 551, 564, 578, 593, 605, 621, 635], "substanti": 771, "subtract": 781, "summaris": 780, "support": [745, 766, 767], "suppos": 457, "surfac": [191, 246, 316, 365, 462, 498, 516, 611, 626, 773, 779], "surfaceassembli": 316, "surfacemodel": 769, "swiss": 766, "system": [343, 399, 462, 521, 775], "t": [121, 140, 157, 174, 191, 209, 228, 246, 264, 334, 342, 782], "t_default": 342, "take": [11, 31, 50, 68, 85, 104, 122, 141, 158, 175, 192, 210, 229, 247, 265, 344, 372, 390, 400, 421, 439, 464, 477, 490, 506, 522, 529, 536, 550, 563, 577, 592, 604, 619, 634, 656, 702, 715, 725, 735, 746, 756, 773, 784], "taper": [191, 228], "tapered_heel": [228, 611, 618, 626], "taperedheel": 603, "tbirdsmouth": 157, "tbirdsmouthjoint": 769, "tbuttjoint": [22, 42, 768, 769], "tdovetailjoint": 769, "tenon": [228, 246, 505, 511, 512, 516, 582, 603, 606, 614, 647, 769], "tenon_height": [603, 606], "tenon_mortise_height": 228, "tenon_width": [603, 606], "tenonmortis": 246, "tenonmortisejoint": 769, "tenonshapetyp": 769, "text": [755, 767, 778], "text3d": 769, "textur": [772, 783], "thalflapjoint": 769, "than": [16, 23, 36, 43, 55, 62, 73, 80, 90, 99, 109, 117, 127, 136, 146, 153, 163, 170, 180, 187, 197, 205, 215, 224, 234, 242, 252, 260, 270, 279, 364, 383, 395, 414, 432, 451, 469, 485, 501, 517, 530, 545, 558, 571, 585, 599, 613, 629, 642, 689, 707, 719, 729, 739, 750, 760], "thei": [29, 241, 259, 389, 483, 780, 784], "them": [16, 36, 55, 67, 73, 90, 103, 109, 127, 146, 157, 163, 180, 191, 197, 215, 228, 234, 246, 252, 270, 438, 676, 767, 773, 774, 780], "therefor": [13, 598], "thi": [1, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 26, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 46, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 66, 67, 68, 69, 70, 72, 73, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 114, 115, 120, 122, 123, 124, 125, 126, 127, 129, 130, 132, 133, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 202, 203, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 220, 221, 227, 228, 229, 230, 231, 233, 234, 236, 237, 238, 239, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 275, 276, 282, 283, 284, 286, 291, 299, 304, 306, 309, 311, 334, 336, 343, 344, 345, 352, 353, 355, 358, 359, 361, 370, 371, 372, 378, 379, 380, 381, 388, 389, 390, 391, 392, 393, 398, 399, 400, 407, 408, 409, 410, 419, 420, 421, 427, 428, 429, 430, 437, 438, 439, 445, 446, 448, 449, 456, 457, 460, 462, 464, 466, 467, 468, 472, 477, 479, 480, 481, 482, 483, 484, 488, 490, 492, 493, 495, 496, 497, 498, 499, 500, 504, 506, 508, 509, 511, 512, 513, 514, 515, 516, 520, 522, 525, 526, 527, 528, 529, 533, 536, 538, 539, 540, 541, 542, 543, 544, 548, 550, 552, 553, 554, 555, 556, 557, 561, 563, 565, 566, 568, 569, 574, 575, 577, 579, 580, 581, 582, 583, 584, 588, 589, 592, 594, 595, 596, 597, 598, 602, 604, 607, 608, 609, 610, 611, 612, 614, 617, 619, 622, 623, 624, 625, 626, 627, 628, 632, 634, 636, 637, 638, 639, 640, 641, 645, 646, 655, 656, 660, 667, 671, 672, 673, 675, 680, 683, 685, 687, 694, 695, 697, 698, 702, 704, 705, 706, 710, 711, 715, 716, 717, 718, 723, 725, 726, 727, 728, 733, 735, 736, 737, 738, 743, 745, 746, 747, 748, 749, 754, 756, 757, 758, 759, 764, 765, 767, 771, 773, 774, 776, 780, 784], "thick": [316, 389, 399, 598, 776], "third": 780, "thought": 389, "three": [780, 784], "through": [84, 121, 209, 264, 355, 389, 521, 529, 766, 780], "tightli": 389, "tilt": 780, "timber": [10, 13, 316, 343, 371, 389, 399, 420, 438, 473, 655, 766, 772, 775, 776, 778, 782, 784], "timberassembli": 768, "timberel": [286, 290, 291, 299, 303, 311, 315, 336, 340, 343, 371, 399, 438, 458, 660, 769], "timbermodel": [16, 36, 55, 73, 90, 109, 127, 146, 163, 180, 197, 215, 234, 252, 270, 474, 475, 769], "titl": 766, "todo": [355, 371, 389, 438, 529, 660, 673, 675, 688, 780], "togeth": [16, 36, 55, 73, 90, 109, 127, 146, 163, 180, 197, 215, 234, 252, 270, 438, 775], "tol": [29, 341], "toler": [29, 781], "too": 529, "tool": [27, 191, 198, 489, 494, 505, 510, 516, 641, 769, 772, 782, 783], "tool_angl": [191, 198, 494, 510], "tool_diamet": [191, 198, 494, 510], "tool_height": [191, 198, 494, 510], "top": [489, 505, 576, 633, 641, 772, 780], "topo_i": 47, "topo_l": [47, 48], "topo_t": [47, 48], "topo_unknown": [47, 48], "topo_x": [47, 48], "topologi": [16, 27, 29, 36, 47, 48, 49, 55, 67, 73, 84, 90, 103, 109, 127, 146, 157, 163, 174, 180, 191, 197, 209, 215, 228, 234, 246, 252, 264, 270, 334, 655, 688, 780, 781, 784], "topology_typ": 334, "topologyrul": 769, "tort": 771, "total": 655, "touch": 28, "tranform": [722, 732, 742, 763], "transform": [352, 378, 407, 427, 445, 684, 685, 686, 687, 693, 695, 696, 697], "translat": [462, 684, 685, 686, 687], "tree": [28, 283, 657], "trim": [10, 49, 52, 84, 103, 106, 160, 174, 177, 194, 209, 231, 249, 264, 544, 781], "trimfeatur": 779, "true": [15, 20, 21, 23, 24, 25, 28, 35, 40, 41, 43, 44, 45, 49, 54, 59, 60, 62, 63, 64, 65, 67, 72, 77, 78, 80, 81, 82, 84, 89, 95, 96, 99, 100, 101, 108, 114, 115, 117, 118, 119, 121, 126, 132, 133, 136, 137, 138, 145, 150, 151, 153, 154, 155, 162, 167, 168, 170, 171, 172, 179, 184, 185, 187, 188, 189, 196, 202, 203, 205, 206, 207, 209, 214, 220, 221, 224, 225, 226, 228, 233, 238, 239, 242, 243, 244, 251, 256, 257, 260, 261, 262, 264, 269, 275, 276, 279, 280, 281, 286, 299, 309, 311, 336, 350, 353, 355, 364, 366, 367, 379, 383, 384, 385, 389, 391, 395, 396, 397, 405, 408, 414, 415, 416, 420, 425, 428, 432, 433, 434, 443, 446, 451, 452, 453, 466, 469, 470, 471, 480, 485, 486, 487, 489, 493, 501, 502, 503, 505, 509, 517, 518, 519, 521, 525, 530, 531, 532, 539, 545, 546, 547, 553, 558, 559, 560, 566, 571, 572, 573, 576, 580, 585, 586, 587, 595, 599, 600, 601, 608, 613, 615, 616, 618, 623, 629, 630, 631, 633, 637, 641, 642, 643, 644, 653, 660, 667, 674, 675, 676, 689, 690, 691, 704, 707, 708, 709, 716, 719, 720, 721, 726, 729, 730, 731, 736, 739, 740, 741, 747, 750, 751, 752, 757, 760, 761, 762, 775, 776, 778, 780, 781], "try": 457, "tstepjoint": 769, "tupl": [20, 21, 29, 30, 40, 41, 59, 60, 77, 78, 95, 96, 114, 115, 132, 133, 150, 151, 167, 168, 184, 185, 202, 203, 220, 221, 238, 239, 256, 257, 275, 276, 291, 343, 355, 399, 661], "two": [16, 29, 30, 36, 49, 55, 67, 73, 84, 90, 103, 109, 127, 146, 157, 163, 180, 191, 197, 215, 228, 234, 246, 252, 270, 290, 291, 303, 315, 340, 354, 457, 483, 541, 598, 661, 676, 682, 780], "txt": 770, "type": [9, 10, 11, 15, 18, 19, 26, 29, 31, 35, 38, 39, 46, 49, 50, 54, 57, 58, 66, 67, 68, 72, 75, 76, 83, 84, 85, 89, 92, 93, 102, 103, 104, 108, 111, 112, 120, 121, 122, 126, 129, 130, 139, 141, 145, 148, 149, 156, 157, 158, 162, 165, 166, 173, 174, 175, 179, 182, 183, 190, 191, 192, 196, 200, 201, 208, 209, 210, 214, 217, 218, 227, 228, 229, 233, 236, 237, 241, 245, 246, 247, 251, 254, 255, 263, 264, 265, 269, 272, 273, 282, 306, 334, 344, 353, 358, 359, 370, 372, 379, 380, 381, 388, 390, 391, 392, 393, 398, 400, 408, 409, 410, 419, 421, 428, 429, 430, 437, 439, 446, 448, 449, 456, 464, 466, 467, 468, 472, 477, 480, 481, 482, 488, 489, 490, 493, 499, 500, 504, 506, 509, 514, 515, 520, 522, 525, 527, 528, 533, 536, 539, 542, 543, 548, 550, 553, 554, 555, 561, 563, 566, 568, 569, 574, 577, 580, 583, 584, 588, 592, 595, 596, 597, 602, 604, 608, 609, 610, 617, 619, 623, 624, 625, 632, 634, 637, 639, 640, 645, 656, 667, 670, 671, 672, 698, 699, 702, 704, 705, 706, 710, 715, 716, 717, 718, 723, 725, 726, 727, 728, 733, 735, 736, 737, 738, 743, 745, 746, 747, 748, 749, 754, 756, 757, 758, 759, 764, 769, 773, 776, 784], "typeerror": [18, 19, 38, 39, 57, 58, 75, 76, 92, 93, 111, 112, 129, 130, 148, 149, 165, 166, 182, 183, 200, 201, 217, 218, 236, 237, 254, 255, 272, 273, 358, 359, 380, 381, 392, 393, 409, 410, 429, 430, 448, 449, 467, 468, 481, 482, 499, 500, 514, 515, 527, 528, 542, 543, 554, 555, 568, 569, 583, 584, 596, 597, 609, 610, 624, 625, 639, 640, 671, 672, 705, 706, 717, 718, 727, 728, 737, 738, 748, 749, 758, 759], "typic": [745, 773], "unchang": 780, "under": [657, 658], "underscor": 774, "uniform": 399, "uniqu": [30, 343, 399, 668], "unit": [29, 283, 355, 438], "unlik": 780, "unlimit": 489, "updaterefobj": 775, "upon": 769, "upper": 780, "upstream": [660, 673, 675], "url": 766, "us": [9, 10, 11, 23, 26, 28, 29, 30, 31, 43, 46, 48, 49, 50, 62, 66, 67, 68, 80, 83, 84, 85, 99, 102, 103, 104, 117, 120, 121, 122, 136, 139, 140, 141, 153, 156, 157, 158, 170, 173, 174, 175, 187, 190, 191, 192, 205, 208, 209, 210, 224, 227, 228, 229, 242, 245, 246, 247, 260, 263, 264, 265, 279, 282, 283, 291, 344, 355, 364, 370, 372, 383, 388, 390, 395, 398, 400, 414, 419, 420, 421, 432, 437, 439, 451, 456, 457, 464, 469, 472, 473, 477, 485, 488, 489, 490, 498, 501, 504, 505, 506, 516, 517, 520, 522, 526, 530, 533, 536, 541, 545, 548, 550, 558, 561, 563, 571, 574, 577, 582, 585, 588, 592, 599, 602, 604, 613, 617, 619, 629, 632, 634, 641, 642, 645, 656, 660, 688, 689, 693, 694, 695, 696, 697, 698, 700, 702, 707, 710, 711, 715, 719, 723, 725, 729, 733, 735, 739, 743, 745, 746, 750, 754, 756, 760, 764, 765, 766, 769, 771, 772, 773, 774, 775, 776, 778, 779, 780, 782, 783], "use_default": [289, 302, 314, 339], "use_flank_angl": [489, 505], "user": [389, 774, 776], "usual": [11, 31, 50, 68, 85, 104, 122, 141, 158, 175, 192, 210, 229, 247, 265, 343, 344, 372, 390, 400, 421, 439, 464, 477, 490, 506, 522, 536, 550, 563, 577, 592, 604, 619, 634, 656, 702, 715, 725, 735, 746, 756], "util": [769, 772], "v": 389, "v1": [23, 43, 62, 80, 99, 117, 136, 153, 170, 187, 205, 224, 242, 260, 279, 364, 383, 395, 414, 432, 451, 469, 485, 501, 517, 530, 545, 558, 571, 585, 599, 613, 629, 642, 689, 707, 719, 729, 739, 750, 760], "v2": [23, 43, 62, 80, 99, 117, 136, 153, 170, 187, 205, 224, 242, 260, 279, 364, 383, 395, 414, 432, 451, 469, 485, 501, 517, 530, 545, 558, 571, 585, 599, 613, 629, 642, 689, 707, 719, 729, 739, 750, 760], "v3": [23, 43, 62, 80, 99, 117, 136, 153, 170, 187, 205, 224, 242, 260, 279, 364, 383, 395, 414, 432, 451, 469, 485, 501, 517, 530, 545, 558, 571, 585, 599, 613, 629, 642, 689, 707, 719, 729, 739, 750, 760], "v7": 770, "valid": [26, 46, 66, 83, 102, 120, 139, 156, 173, 190, 208, 227, 245, 263, 282, 370, 388, 398, 419, 437, 456, 472, 488, 504, 520, 533, 548, 561, 574, 588, 602, 617, 632, 645, 698, 710, 723, 733, 743, 754, 764], "valu": [48, 84, 121, 209, 259, 264, 283, 343, 399, 461, 498, 582, 618, 700, 774], "valueerror": [16, 36, 55, 73, 90, 109, 127, 146, 163, 180, 197, 215, 234, 252, 270, 657, 660, 664], "variabl": 780, "vector": [316, 356, 357, 389, 399, 413, 529, 684, 685, 696, 697, 769, 775, 776], "verifi": [16, 36, 55, 73, 90, 109, 127, 146, 163, 180, 197, 215, 234, 252, 270, 355, 677], "version": [23, 43, 62, 80, 99, 117, 136, 153, 170, 187, 205, 224, 242, 260, 279, 364, 383, 395, 414, 432, 451, 469, 485, 501, 517, 530, 545, 558, 571, 585, 599, 613, 629, 642, 689, 707, 719, 729, 739, 750, 760, 770], "vertex_attribut": [23, 43, 62, 80, 99, 117, 136, 153, 170, 187, 205, 224, 242, 260, 279, 364, 383, 395, 414, 432, 451, 469, 485, 501, 517, 530, 545, 558, 571, 585, 599, 613, 629, 642, 689, 707, 719, 729, 739, 750, 760], "vertex_sampl": [23, 43, 62, 80, 99, 117, 136, 153, 170, 187, 205, 224, 242, 260, 279, 364, 383, 395, 414, 432, 451, 469, 485, 501, 517, 530, 545, 558, 571, 585, 599, 613, 629, 642, 689, 707, 719, 729, 739, 750, 760], "vertic": [476, 549, 562, 598, 775, 780], "via": [70, 769], "visual": [292, 457, 701, 745, 767], "visualis": 781, "vocabulari": 776, "volum": [492, 496, 508, 512, 544, 575, 579, 589, 607, 614, 622, 627, 636, 646, 655], "wa": [12, 32, 33, 87, 123, 124, 142, 212, 266, 267, 457], "wai": [711, 767], "wall": [316, 420, 655, 660, 769, 776], "wall1": 660, "wall1_group": 660, "want": 711, "warranti": 771, "we": [371, 389], "well": [345, 660], "were": [29, 30, 457, 774], "what": 389, "when": [11, 28, 31, 50, 51, 52, 68, 85, 86, 104, 105, 106, 122, 141, 158, 159, 160, 175, 176, 177, 192, 193, 194, 210, 211, 229, 230, 231, 247, 248, 249, 265, 344, 345, 372, 390, 400, 421, 439, 458, 459, 464, 477, 490, 506, 522, 536, 550, 563, 577, 592, 604, 619, 634, 656, 702, 715, 725, 735, 746, 756, 774, 780], "whenev": [12, 14, 32, 33, 34, 53, 87, 88, 107, 123, 124, 125, 142, 144, 161, 178, 195, 212, 213, 250, 266, 267, 268], "where": [773, 775, 778, 780, 783], "whether": [489, 505, 576, 618, 633, 641, 745, 771], "which": [10, 16, 20, 21, 28, 29, 30, 36, 40, 41, 49, 55, 59, 60, 67, 73, 77, 78, 84, 90, 95, 96, 103, 109, 114, 115, 127, 132, 133, 140, 146, 150, 151, 157, 163, 167, 168, 174, 180, 184, 185, 191, 197, 202, 203, 209, 215, 220, 221, 228, 234, 238, 239, 246, 252, 256, 257, 264, 270, 275, 276, 283, 304, 334, 345, 354, 355, 361, 457, 458, 516, 529, 598, 641, 659, 660, 699, 701, 734, 745, 773, 775, 776, 781], "while": [389, 457, 780, 782], "whitespac": [24, 25, 44, 45, 63, 64, 81, 82, 100, 101, 118, 119, 137, 138, 154, 155, 171, 172, 188, 189, 206, 207, 225, 226, 243, 244, 261, 262, 280, 281, 366, 367, 384, 385, 396, 397, 415, 416, 433, 434, 452, 453, 470, 471, 486, 487, 502, 503, 518, 519, 531, 532, 546, 547, 559, 560, 572, 573, 586, 587, 600, 601, 615, 616, 630, 631, 643, 644, 690, 691, 708, 709, 720, 721, 730, 731, 740, 741, 751, 752, 761, 762], "whom": 771, "whose": [20, 21, 40, 41, 59, 60, 77, 78, 95, 96, 114, 115, 132, 133, 150, 151, 167, 168, 184, 185, 202, 203, 220, 221, 238, 239, 256, 257, 275, 276], "whould": [16, 36, 55, 73, 90, 109, 127, 146, 163, 180, 197, 215, 234, 252, 270], "wide": [343, 399], "width": [191, 246, 316, 343, 356, 357, 460, 489, 498, 505, 516, 562, 570, 576, 582, 603, 606, 618, 620, 633, 641, 768, 774, 775, 776], "within": [29, 309, 745, 775], "without": [24, 25, 44, 45, 63, 64, 81, 82, 84, 100, 101, 118, 119, 121, 137, 138, 154, 155, 171, 172, 188, 189, 206, 207, 209, 225, 226, 243, 244, 261, 262, 264, 280, 281, 366, 367, 384, 385, 396, 397, 415, 416, 433, 434, 452, 453, 470, 471, 486, 487, 502, 503, 518, 519, 531, 532, 546, 547, 559, 560, 572, 573, 586, 587, 600, 601, 615, 616, 630, 631, 643, 644, 690, 691, 708, 709, 720, 721, 730, 731, 740, 741, 751, 752, 761, 762, 771, 775], "wood": 343, "work": [766, 776], "workflow": [769, 772, 774, 775], "world": [352, 378, 389, 407, 427, 445, 775, 776], "worldx": [356, 357], "worldxi": [660, 768], "worldz": [356, 357], "would": 389, "wrapper": 460, "write": [713, 774, 775], "written": 769, "x": [121, 264, 334, 342, 343, 476, 489, 505, 521, 535, 549, 562, 576, 603, 618, 633, 686, 687, 775, 782, 783], "x_default": 342, "xhalflapjoint": 769, "xmax": [343, 399], "xmin": [343, 399], "xml": [474, 778], "y": [191, 246, 343, 476, 489, 498, 505, 516, 521, 549, 562, 576, 582, 618, 633, 641, 686, 687, 775, 783], "ye": [603, 618, 770], "year": 766, "yet": 780, "yield": [669, 678, 679], "ymax": [343, 399], "ymin": [343, 399], "you": [711, 766, 772, 776, 780, 784], "your": [711, 766], "yourgithub_usernam": 770, "z": [23, 43, 62, 80, 99, 117, 136, 153, 170, 187, 205, 224, 242, 260, 279, 343, 356, 357, 364, 383, 395, 414, 432, 451, 469, 485, 501, 517, 521, 530, 545, 558, 571, 585, 599, 613, 629, 642, 684, 685, 686, 687, 689, 707, 719, 729, 739, 750, 760, 775, 776, 779, 783], "z_axi": 316, "z_vector": [356, 357], "zaxi": 316, "zenodo": 766, "zero": [463, 776], "zmax": [343, 399], "zmin": [343, 399], "zurich": [766, 769], "zvector": [774, 775]}, "titles": ["API Reference", "compas_timber.connections", "compas_timber.design", "compas_timber.elements", "compas_timber.errors", "compas_timber.fabrication", "compas_timber.ghpython", "compas_timber.model", "compas_timber.planning", "compas_timber.rhino", "BallNodeJoint", "BallNodeJoint.ToString", "BallNodeJoint.add_extensions", "BallNodeJoint.add_features", "BallNodeJoint.check_elements_compatibility", "BallNodeJoint.copy", "BallNodeJoint.create", "BallNodeJoint.element_count_complies", "BallNodeJoint.from_json", "BallNodeJoint.from_jsonstring", "BallNodeJoint.get_face_most_ortho_to_beam", "BallNodeJoint.get_face_most_towards_beam", "BallNodeJoint.restore_beams_from_keys", "BallNodeJoint.sha256", "BallNodeJoint.to_json", "BallNodeJoint.to_jsonstring", "BallNodeJoint.validate_data", "ConnectionSolver", "ConnectionSolver.find_intersecting_pairs", "ConnectionSolver.find_topology", "Joint", "Joint.ToString", "Joint.add_extensions", "Joint.add_features", "Joint.check_elements_compatibility", "Joint.copy", "Joint.create", "Joint.element_count_complies", "Joint.from_json", "Joint.from_jsonstring", "Joint.get_face_most_ortho_to_beam", "Joint.get_face_most_towards_beam", "Joint.restore_beams_from_keys", "Joint.sha256", "Joint.to_json", "Joint.to_jsonstring", "Joint.validate_data", "JointTopology", "JointTopology.get_name", "LButtJoint", "LButtJoint.ToString", "LButtJoint.add_extensions", "LButtJoint.add_features", "LButtJoint.check_elements_compatibility", "LButtJoint.copy", "LButtJoint.create", "LButtJoint.element_count_complies", "LButtJoint.from_json", "LButtJoint.from_jsonstring", "LButtJoint.get_face_most_ortho_to_beam", "LButtJoint.get_face_most_towards_beam", "LButtJoint.restore_beams_from_keys", "LButtJoint.sha256", "LButtJoint.to_json", "LButtJoint.to_jsonstring", "LButtJoint.update_beam_roles", "LButtJoint.validate_data", "LFrenchRidgeLapJoint", "LFrenchRidgeLapJoint.ToString", "LFrenchRidgeLapJoint.add_extensions", "LFrenchRidgeLapJoint.add_features", "LFrenchRidgeLapJoint.check_elements_compatibility", "LFrenchRidgeLapJoint.copy", "LFrenchRidgeLapJoint.create", "LFrenchRidgeLapJoint.element_count_complies", "LFrenchRidgeLapJoint.from_json", "LFrenchRidgeLapJoint.from_jsonstring", "LFrenchRidgeLapJoint.get_face_most_ortho_to_beam", "LFrenchRidgeLapJoint.get_face_most_towards_beam", "LFrenchRidgeLapJoint.restore_beams_from_keys", "LFrenchRidgeLapJoint.sha256", "LFrenchRidgeLapJoint.to_json", "LFrenchRidgeLapJoint.to_jsonstring", "LFrenchRidgeLapJoint.validate_data", "LHalfLapJoint", "LHalfLapJoint.ToString", "LHalfLapJoint.add_extensions", "LHalfLapJoint.add_features", "LHalfLapJoint.check_elements_compatibility", "LHalfLapJoint.copy", "LHalfLapJoint.create", "LHalfLapJoint.element_count_complies", "LHalfLapJoint.from_json", "LHalfLapJoint.from_jsonstring", "LHalfLapJoint.get_cross_cutting_frame", "LHalfLapJoint.get_face_most_ortho_to_beam", "LHalfLapJoint.get_face_most_towards_beam", "LHalfLapJoint.get_main_cutting_frame", "LHalfLapJoint.restore_beams_from_keys", "LHalfLapJoint.sha256", "LHalfLapJoint.to_json", "LHalfLapJoint.to_jsonstring", "LHalfLapJoint.validate_data", "LMiterJoint", "LMiterJoint.ToString", "LMiterJoint.add_extensions", "LMiterJoint.add_features", "LMiterJoint.check_elements_compatibility", "LMiterJoint.copy", "LMiterJoint.create", "LMiterJoint.element_count_complies", "LMiterJoint.from_json", "LMiterJoint.from_jsonstring", "LMiterJoint.get_cutting_planes", "LMiterJoint.get_face_most_ortho_to_beam", "LMiterJoint.get_face_most_towards_beam", "LMiterJoint.restore_beams_from_keys", "LMiterJoint.sha256", "LMiterJoint.to_json", "LMiterJoint.to_jsonstring", "LMiterJoint.validate_data", "LapJoint", "LapJoint.ToString", "LapJoint.add_extensions", "LapJoint.add_features", "LapJoint.check_elements_compatibility", "LapJoint.copy", "LapJoint.create", "LapJoint.element_count_complies", "LapJoint.from_json", "LapJoint.from_jsonstring", "LapJoint.get_cross_cutting_frame", "LapJoint.get_face_most_ortho_to_beam", "LapJoint.get_face_most_towards_beam", "LapJoint.get_main_cutting_frame", "LapJoint.restore_beams_from_keys", "LapJoint.sha256", "LapJoint.to_json", "LapJoint.to_jsonstring", "LapJoint.validate_data", "NullJoint", "NullJoint.ToString", "NullJoint.add_extensions", "NullJoint.add_features", "NullJoint.check_elements_compatibility", "NullJoint.copy", "NullJoint.create", "NullJoint.element_count_complies", "NullJoint.from_json", "NullJoint.from_jsonstring", "NullJoint.get_face_most_ortho_to_beam", "NullJoint.get_face_most_towards_beam", "NullJoint.restore_beams_from_keys", "NullJoint.sha256", "NullJoint.to_json", "NullJoint.to_jsonstring", "NullJoint.validate_data", "TBirdsmouthJoint", "TBirdsmouthJoint.ToString", "TBirdsmouthJoint.add_extensions", "TBirdsmouthJoint.add_features", "TBirdsmouthJoint.check_elements_compatibility", "TBirdsmouthJoint.copy", "TBirdsmouthJoint.create", "TBirdsmouthJoint.element_count_complies", "TBirdsmouthJoint.from_json", "TBirdsmouthJoint.from_jsonstring", "TBirdsmouthJoint.get_face_most_ortho_to_beam", "TBirdsmouthJoint.get_face_most_towards_beam", "TBirdsmouthJoint.restore_beams_from_keys", "TBirdsmouthJoint.sha256", "TBirdsmouthJoint.to_json", "TBirdsmouthJoint.to_jsonstring", "TBirdsmouthJoint.validate_data", "TButtJoint", "TButtJoint.ToString", "TButtJoint.add_extensions", "TButtJoint.add_features", "TButtJoint.check_elements_compatibility", "TButtJoint.copy", "TButtJoint.create", "TButtJoint.element_count_complies", "TButtJoint.from_json", "TButtJoint.from_jsonstring", "TButtJoint.get_face_most_ortho_to_beam", "TButtJoint.get_face_most_towards_beam", "TButtJoint.restore_beams_from_keys", "TButtJoint.sha256", "TButtJoint.to_json", "TButtJoint.to_jsonstring", "TButtJoint.validate_data", "TDovetailJoint", "TDovetailJoint.ToString", "TDovetailJoint.add_extensions", "TDovetailJoint.add_features", "TDovetailJoint.check_elements_compatibility", "TDovetailJoint.copy", "TDovetailJoint.create", "TDovetailJoint.define_dovetail_tool", "TDovetailJoint.element_count_complies", "TDovetailJoint.from_json", "TDovetailJoint.from_jsonstring", "TDovetailJoint.get_face_most_ortho_to_beam", "TDovetailJoint.get_face_most_towards_beam", "TDovetailJoint.restore_beams_from_keys", "TDovetailJoint.sha256", "TDovetailJoint.to_json", "TDovetailJoint.to_jsonstring", "TDovetailJoint.validate_data", "THalfLapJoint", "THalfLapJoint.ToString", "THalfLapJoint.add_extensions", "THalfLapJoint.add_features", "THalfLapJoint.check_elements_compatibility", "THalfLapJoint.copy", "THalfLapJoint.create", "THalfLapJoint.element_count_complies", "THalfLapJoint.from_json", "THalfLapJoint.from_jsonstring", "THalfLapJoint.get_cross_cutting_frame", "THalfLapJoint.get_face_most_ortho_to_beam", "THalfLapJoint.get_face_most_towards_beam", "THalfLapJoint.get_main_cutting_frame", "THalfLapJoint.restore_beams_from_keys", "THalfLapJoint.sha256", "THalfLapJoint.to_json", "THalfLapJoint.to_jsonstring", "THalfLapJoint.validate_data", "TStepJoint", "TStepJoint.ToString", "TStepJoint.add_extensions", "TStepJoint.add_features", "TStepJoint.check_elements_compatibility", "TStepJoint.copy", "TStepJoint.create", "TStepJoint.element_count_complies", "TStepJoint.from_json", "TStepJoint.from_jsonstring", "TStepJoint.get_face_most_ortho_to_beam", "TStepJoint.get_face_most_towards_beam", "TStepJoint.restore_beams_from_keys", "TStepJoint.set_step_depths", "TStepJoint.sha256", "TStepJoint.to_json", "TStepJoint.to_jsonstring", "TStepJoint.validate_data", "TenonMortiseJoint", "TenonMortiseJoint.ToString", "TenonMortiseJoint.add_extensions", "TenonMortiseJoint.add_features", "TenonMortiseJoint.check_elements_compatibility", "TenonMortiseJoint.copy", "TenonMortiseJoint.create", "TenonMortiseJoint.element_count_complies", "TenonMortiseJoint.from_json", "TenonMortiseJoint.from_jsonstring", "TenonMortiseJoint.get_face_most_ortho_to_beam", "TenonMortiseJoint.get_face_most_towards_beam", "TenonMortiseJoint.restore_beams_from_keys", "TenonMortiseJoint.set_default_values", "TenonMortiseJoint.sha256", "TenonMortiseJoint.to_json", "TenonMortiseJoint.to_jsonstring", "TenonMortiseJoint.validate_data", "XHalfLapJoint", "XHalfLapJoint.ToString", "XHalfLapJoint.add_extensions", "XHalfLapJoint.add_features", "XHalfLapJoint.check_elements_compatibility", "XHalfLapJoint.copy", "XHalfLapJoint.create", "XHalfLapJoint.element_count_complies", "XHalfLapJoint.from_json", "XHalfLapJoint.from_jsonstring", "XHalfLapJoint.get_cross_cutting_frame", "XHalfLapJoint.get_face_most_ortho_to_beam", "XHalfLapJoint.get_face_most_towards_beam", "XHalfLapJoint.get_main_cutting_frame", "XHalfLapJoint.restore_beams_from_keys", "XHalfLapJoint.sha256", "XHalfLapJoint.to_json", "XHalfLapJoint.to_jsonstring", "XHalfLapJoint.validate_data", "find_neighboring_beams", "CategoryRule", "CategoryRule.ToString", "CategoryRule.comply", "CategoryRule.get_category_rules", "CategoryRule.get_direct_rules", "CategoryRule.get_topology_rules", "CategoryRule.joints_from_beams_and_rules", "CategoryRule.reorder", "DebugInfomation", "DebugInfomation.ToString", "DebugInfomation.add_fastener_error", "DebugInfomation.add_feature_error", "DebugInfomation.add_joint_error", "DirectRule", "DirectRule.ToString", "DirectRule.comply", "DirectRule.get_category_rules", "DirectRule.get_direct_rules", "DirectRule.get_topology_rules", "DirectRule.joints_from_beams_and_rules", "FeatureDefinition", "FeatureDefinition.ToString", "JointDefinition", "JointDefinition.ToString", "JointDefinition.is_identical", "JointDefinition.match", "JointRule", "JointRule.comply", "JointRule.get_category_rules", "JointRule.get_direct_rules", "JointRule.get_topology_rules", "JointRule.joints_from_beams_and_rules", "SurfaceModel", "SurfaceModel.beam_category_names", "SurfaceModel.create_model", "SurfaceModel.cull_overlaps", "SurfaceModel.distance_between_elements", "SurfaceModel.generate_frame", "SurfaceModel.generate_perimeter_beams", "SurfaceModel.generate_plates", "SurfaceModel.generate_stud_lines", "SurfaceModel.generate_studs", "SurfaceModel.generate_windows", "SurfaceModel.get_beam_intersections", "SurfaceModel.get_interior_segment_indices", "SurfaceModel.offset_elements", "SurfaceModel.parse_loops", "SurfaceModel.trim_jack_studs", "SurfaceModel.trim_king_studs", "SurfaceModel.trim_studs", "TopologyRule", "TopologyRule.ToString", "TopologyRule.comply", "TopologyRule.get_category_rules", "TopologyRule.get_direct_rules", "TopologyRule.get_topology_rules", "TopologyRule.joints_from_beams_and_rules", "guess_joint_topology_2beams", "set_default_joints", "Beam", "Beam.ToString", "Beam.add_blank_extension", "Beam.add_feature", "Beam.add_features", "Beam.compute_aabb", "Beam.compute_collision_mesh", "Beam.compute_geometry", "Beam.compute_obb", "Beam.compute_worldtransformation", "Beam.copy", "Beam.endpoint_closest_to_point", "Beam.extension_to_plane", "Beam.from_centerline", "Beam.from_endpoints", "Beam.from_json", "Beam.from_jsonstring", "Beam.opposing_side_index", "Beam.remove_blank_extension", "Beam.remove_features", "Beam.reset", "Beam.sha256", "Beam.side_as_surface", "Beam.to_json", "Beam.to_jsonstring", "Beam.transform", "Beam.transformed", "Beam.validate_data", "Fastener", "Fastener.ToString", "Fastener.add_feature", "Fastener.compute_aabb", "Fastener.compute_collision_mesh", "Fastener.compute_geometry", "Fastener.compute_obb", "Fastener.compute_worldtransformation", "Fastener.copy", "Fastener.from_json", "Fastener.from_jsonstring", "Fastener.reset", "Fastener.sha256", "Fastener.to_json", "Fastener.to_jsonstring", "Fastener.transform", "Fastener.transformed", "Fastener.validate_data", "FastenerTimberInterface", "FastenerTimberInterface.ToString", "FastenerTimberInterface.copy", "FastenerTimberInterface.from_json", "FastenerTimberInterface.from_jsonstring", "FastenerTimberInterface.get_features", "FastenerTimberInterface.sha256", "FastenerTimberInterface.to_json", "FastenerTimberInterface.to_jsonstring", "FastenerTimberInterface.validate_data", "Plate", "Plate.ToString", "Plate.add_feature", "Plate.add_features", "Plate.compute_aabb", "Plate.compute_collision_mesh", "Plate.compute_geometry", "Plate.compute_obb", "Plate.compute_worldtransformation", "Plate.copy", "Plate.from_json", "Plate.from_jsonstring", "Plate.remove_features", "Plate.reset", "Plate.set_frame_and_outline", "Plate.sha256", "Plate.to_json", "Plate.to_jsonstring", "Plate.transform", "Plate.transformed", "Plate.validate_data", "TimberElement", "TimberElement.ToString", "TimberElement.add_feature", "TimberElement.compute_aabb", "TimberElement.compute_collision_mesh", "TimberElement.compute_geometry", "TimberElement.compute_obb", "TimberElement.compute_worldtransformation", "TimberElement.copy", "TimberElement.from_json", "TimberElement.from_jsonstring", "TimberElement.reset", "TimberElement.sha256", "TimberElement.to_json", "TimberElement.to_jsonstring", "TimberElement.transform", "TimberElement.transformed", "TimberElement.validate_data", "Wall", "Wall.ToString", "Wall.add_feature", "Wall.compute_aabb", "Wall.compute_collision_mesh", "Wall.compute_geometry", "Wall.compute_obb", "Wall.compute_worldtransformation", "Wall.copy", "Wall.from_box", "Wall.from_json", "Wall.from_jsonstring", "Wall.reset", "Wall.sha256", "Wall.to_json", "Wall.to_jsonstring", "Wall.transform", "Wall.transformed", "Wall.validate_data", "BeamJoinningError", "FastenerApplicationError", "FeatureApplicationError", "BTLxPart", "BTLxPart.et_point_vals", "BTLxPart.ref_side_from_face", "BTLxProcessing", "BTLxProcessing.ToString", "BTLxProcessing.add_subprocessing", "BTLxProcessing.copy", "BTLxProcessing.from_json", "BTLxProcessing.from_jsonstring", "BTLxProcessing.sha256", "BTLxProcessing.to_json", "BTLxProcessing.to_jsonstring", "BTLxProcessing.validate_data", "BTLxWriter", "BTLxWriter.model_to_xml", "BTLxWriter.write", "DoubleCut", "DoubleCut.ToString", "DoubleCut.add_subprocessing", "DoubleCut.apply", "DoubleCut.copy", "DoubleCut.from_json", "DoubleCut.from_jsonstring", "DoubleCut.from_planes_and_beam", "DoubleCut.planes_from_params_and_beam", "DoubleCut.sha256", "DoubleCut.to_json", "DoubleCut.to_jsonstring", "DoubleCut.validate_data", "DovetailMortise", "DovetailMortise.ToString", "DovetailMortise.add_subprocessing", "DovetailMortise.apply", "DovetailMortise.copy", "DovetailMortise.define_dovetail_tool", "DovetailMortise.dovetail_cutting_frames_from_params_and_beam", "DovetailMortise.dovetail_volume_from_params_and_beam", "DovetailMortise.frame_from_params_and_beam", "DovetailMortise.from_frame_and_beam", "DovetailMortise.from_json", "DovetailMortise.from_jsonstring", "DovetailMortise.sha256", "DovetailMortise.to_json", "DovetailMortise.to_jsonstring", "DovetailMortise.validate_data", "DovetailTenon", "DovetailTenon.ToString", "DovetailTenon.add_subprocessing", "DovetailTenon.apply", "DovetailTenon.copy", "DovetailTenon.define_dovetail_tool", "DovetailTenon.dovetail_cutting_frames_from_params_and_beam", "DovetailTenon.dovetail_volume_from_params_and_beam", "DovetailTenon.frame_from_params_and_beam", "DovetailTenon.from_json", "DovetailTenon.from_jsonstring", "DovetailTenon.from_plane_and_beam", "DovetailTenon.sha256", "DovetailTenon.to_json", "DovetailTenon.to_jsonstring", "DovetailTenon.validate_data", "Drilling", "Drilling.ToString", "Drilling.add_subprocessing", "Drilling.apply", "Drilling.copy", "Drilling.cylinder_from_params_and_beam", "Drilling.from_json", "Drilling.from_jsonstring", "Drilling.from_line_and_beam", "Drilling.sha256", "Drilling.to_json", "Drilling.to_jsonstring", "Drilling.validate_data", "EdgePositionType", "FrenchRidgeLap", "FrenchRidgeLap.ToString", "FrenchRidgeLap.add_subprocessing", "FrenchRidgeLap.apply", "FrenchRidgeLap.copy", "FrenchRidgeLap.frame_from_params_and_beam", "FrenchRidgeLap.from_beam_beam_and_plane", "FrenchRidgeLap.from_json", "FrenchRidgeLap.from_jsonstring", "FrenchRidgeLap.lap_volume_from_params_and_beam", "FrenchRidgeLap.sha256", "FrenchRidgeLap.to_json", "FrenchRidgeLap.to_jsonstring", "FrenchRidgeLap.validate_data", "JackRafterCut", "JackRafterCut.ToString", "JackRafterCut.add_subprocessing", "JackRafterCut.apply", "JackRafterCut.copy", "JackRafterCut.from_json", "JackRafterCut.from_jsonstring", "JackRafterCut.from_plane_and_beam", "JackRafterCut.plane_from_params_and_beam", "JackRafterCut.sha256", "JackRafterCut.to_json", "JackRafterCut.to_jsonstring", "JackRafterCut.validate_data", "Lap", "Lap.ToString", "Lap.add_subprocessing", "Lap.apply", "Lap.copy", "Lap.from_beam_and_beam", "Lap.from_json", "Lap.from_jsonstring", "Lap.from_plane_and_beam", "Lap.sha256", "Lap.to_json", "Lap.to_jsonstring", "Lap.validate_data", "Lap.volume_from_params_and_beam", "Mortise", "Mortise.ToString", "Mortise.add_subprocessing", "Mortise.apply", "Mortise.copy", "Mortise.frame_from_params_and_beam", "Mortise.from_frame_and_beam", "Mortise.from_json", "Mortise.from_jsonstring", "Mortise.sha256", "Mortise.to_json", "Mortise.to_jsonstring", "Mortise.validate_data", "Mortise.volume_from_params_and_beam", "OrientationType", "Slot", "Slot.ToString", "Slot.add_subprocessing", "Slot.apply", "Slot.copy", "Slot.from_json", "Slot.from_jsonstring", "Slot.from_plane_and_beam", "Slot.sha256", "Slot.to_json", "Slot.to_jsonstring", "Slot.validate_data", "StepJoint", "StepJoint.ToString", "StepJoint.add_subprocessing", "StepJoint.add_tenon", "StepJoint.apply", "StepJoint.copy", "StepJoint.from_json", "StepJoint.from_jsonstring", "StepJoint.from_plane_and_beam", "StepJoint.planes_from_params_and_beam", "StepJoint.sha256", "StepJoint.tenon_volume_from_params_and_beam", "StepJoint.to_json", "StepJoint.to_jsonstring", "StepJoint.validate_data", "StepJointNotch", "StepJointNotch.ToString", "StepJointNotch.add_mortise", "StepJointNotch.add_subprocessing", "StepJointNotch.apply", "StepJointNotch.copy", "StepJointNotch.from_json", "StepJointNotch.from_jsonstring", "StepJointNotch.from_plane_and_beam", "StepJointNotch.mortise_volume_from_params_and_beam", "StepJointNotch.planes_from_params_and_beam", "StepJointNotch.sha256", "StepJointNotch.to_json", "StepJointNotch.to_jsonstring", "StepJointNotch.validate_data", "Tenon", "Tenon.ToString", "Tenon.add_subprocessing", "Tenon.apply", "Tenon.copy", "Tenon.frame_from_params_and_beam", "Tenon.from_json", "Tenon.from_jsonstring", "Tenon.from_plane_and_beam", "Tenon.sha256", "Tenon.to_json", "Tenon.to_jsonstring", "Tenon.validate_data", "Tenon.volume_from_params_and_beam", "TenonShapeType", "add_gh_param", "clear_gh_params", "get_leaf_subclasses", "item_input_valid", "list_input_valid", "manage_dynamic_params", "rename_gh_input", "TimberModel", "TimberModel.ToString", "TimberModel.add_element", "TimberModel.add_elements", "TimberModel.add_group", "TimberModel.add_group_element", "TimberModel.add_interaction", "TimberModel.add_joint", "TimberModel.add_material", "TimberModel.assign_material", "TimberModel.compute_aabb", "TimberModel.compute_obb", "TimberModel.copy", "TimberModel.element_by_guid", "TimberModel.elements", "TimberModel.elements_connected_by", "TimberModel.from_json", "TimberModel.from_jsonstring", "TimberModel.get_elements_in_group", "TimberModel.has_element", "TimberModel.has_group", "TimberModel.has_interaction", "TimberModel.has_material", "TimberModel.interactions", "TimberModel.materials", "TimberModel.process_joinery", "TimberModel.remove_element", "TimberModel.remove_interaction", "TimberModel.remove_joint", "TimberModel.rotate", "TimberModel.rotated", "TimberModel.scale", "TimberModel.scaled", "TimberModel.set_topologies", "TimberModel.sha256", "TimberModel.to_json", "TimberModel.to_jsonstring", "TimberModel.transform", "TimberModel.transform_numpy", "TimberModel.transformed", "TimberModel.transformed_numpy", "TimberModel.translate", "TimberModel.translated", "TimberModel.validate_data", "Actor", "Actor.get_name", "BuildingPlan", "BuildingPlan.ToString", "BuildingPlan.add_step", "BuildingPlan.copy", "BuildingPlan.from_json", "BuildingPlan.from_jsonstring", "BuildingPlan.sha256", "BuildingPlan.to_json", "BuildingPlan.to_jsonstring", "BuildingPlan.validate_data", "BuildingPlanParser", "BuildingPlanParser.parse", "BuildingPlanParser.serialize", "Instruction", "Instruction.ToString", "Instruction.copy", "Instruction.from_json", "Instruction.from_jsonstring", "Instruction.sha256", "Instruction.to_json", "Instruction.to_jsonstring", "Instruction.transform", "Instruction.validate_data", "LinearDimension", "LinearDimension.ToString", "LinearDimension.copy", "LinearDimension.from_json", "LinearDimension.from_jsonstring", "LinearDimension.sha256", "LinearDimension.to_json", "LinearDimension.to_jsonstring", "LinearDimension.transform", "LinearDimension.validate_data", "Model3d", "Model3d.ToString", "Model3d.copy", "Model3d.from_json", "Model3d.from_jsonstring", "Model3d.sha256", "Model3d.to_json", "Model3d.to_jsonstring", "Model3d.transform", "Model3d.validate_data", "SimpleSequenceGenerator", "Step", "Step.ToString", "Step.copy", "Step.from_json", "Step.from_jsonstring", "Step.sha256", "Step.to_json", "Step.to_jsonstring", "Step.transform", "Step.validate_data", "Text3d", "Text3d.ToString", "Text3d.copy", "Text3d.from_json", "Text3d.from_jsonstring", "Text3d.sha256", "Text3d.to_json", "Text3d.to_jsonstring", "Text3d.transform", "Text3d.validate_data", "find_neighboring_beams", "Citing", "Examples", "Create Joint", "COMPAS Timber Documentation", "Installation", "License", "Grasshopper plugin", "BTLx Contribution Guide", "Attributes", "Beams", "Design", "Examples", "Fabrication", "Features", "Joint Rules", "Model", "Show", "Utils", "Workflow"], "titleterms": {"actor": [699, 700], "add_blank_extens": 345, "add_el": [657, 658], "add_extens": [12, 32, 51, 69, 86, 105, 123, 142, 159, 176, 193, 211, 230, 248, 266], "add_fastener_error": 294, "add_featur": [13, 33, 52, 70, 87, 106, 124, 143, 160, 177, 194, 212, 231, 249, 267, 346, 347, 373, 401, 402, 422, 440], "add_feature_error": 295, "add_gh_param": 648, "add_group": 659, "add_group_el": 660, "add_interact": 661, "add_joint": 662, "add_joint_error": 296, "add_materi": 663, "add_mortis": 620, "add_step": 703, "add_subprocess": [465, 478, 491, 507, 523, 537, 551, 564, 578, 593, 605, 621, 635], "add_tenon": 606, "api": 0, "appli": [479, 492, 508, 524, 538, 552, 565, 579, 594, 607, 622, 636], "assembli": 767, "assign_materi": 664, "attribut": 774, "bake": 783, "ballnodejoint": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26], "beam": [343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 775, 776, 782], "beam_category_nam": 317, "beamjoinningerror": 457, "boxmap": 783, "brep": 779, "btlx": [773, 778], "btlxpart": [460, 461, 462], "btlxprocess": [463, 464, 465, 466, 467, 468, 469, 470, 471, 472], "btlxwriter": [473, 474, 475], "buildingplan": [701, 702, 703, 704, 705, 706, 707, 708, 709, 710], "buildingplanpars": [711, 712, 713], "butt": 780, "categori": 780, "categoryrul": [284, 285, 286, 287, 288, 289, 290, 291], "check": 774, "check_elements_compat": [14, 34, 53, 71, 88, 107, 125, 144, 161, 178, 195, 213, 232, 250, 268], "cite": 766, "class": [1, 2, 3, 4, 5, 7, 8], "clear_gh_param": 649, "compa": 769, "compas_timb": [1, 2, 3, 4, 5, 6, 7, 8, 9], "compli": [286, 299, 311, 336], "compon": 780, "compute_aabb": [348, 374, 403, 423, 441, 665], "compute_collision_mesh": [349, 375, 404, 424, 442], "compute_geometri": [350, 376, 405, 425, 443], "compute_obb": [351, 377, 406, 426, 444, 666], "compute_worldtransform": [352, 378, 407, 427, 445], "conda": 770, "connect": 1, "connectionsolv": [27, 28, 29], "content": 769, "contribut": 773, "copi": [15, 35, 54, 72, 89, 108, 126, 145, 162, 179, 196, 214, 233, 251, 269, 353, 379, 391, 408, 428, 446, 466, 480, 493, 509, 525, 539, 553, 566, 580, 595, 608, 623, 637, 667, 704, 716, 726, 736, 747, 757], "creat": [16, 36, 55, 73, 90, 109, 127, 146, 163, 180, 197, 215, 234, 252, 270, 768], "create_model": 318, "cull_overlap": 319, "custom": [774, 776], "cylinder_from_params_and_beam": 526, "debuginfom": [292, 293, 294, 295, 296], "decomposebeam": 775, "default": 780, "define_dovetail_tool": [198, 494, 510], "delet": 774, "depend": 769, "design": [2, 776], "develop": 770, "dimens": 776, "direct": 780, "directrul": [297, 298, 299, 300, 301, 302, 303], "distance_between_el": 320, "document": 769, "doublecut": [476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488], "dovetail_cutting_frames_from_params_and_beam": [495, 511], "dovetail_volume_from_params_and_beam": [496, 512], "dovetailmortis": [489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504], "dovetailtenon": [505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520], "drill": [521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 779], "edgepositiontyp": 534, "element": [3, 669], "element_by_guid": 668, "element_count_compli": [17, 37, 56, 74, 91, 110, 128, 147, 164, 181, 199, 216, 235, 253, 271], "elements_connected_bi": 670, "endpoint_closest_to_point": 354, "error": [4, 782], "et_point_v": 461, "exampl": [767, 777], "except": 1, "extension_to_plan": 355, "fabric": [5, 778], "face": 782, "fasten": [371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388], "fastenerapplicationerror": 458, "fastenertimberinterfac": [389, 390, 391, 392, 393, 394, 395, 396, 397, 398], "featur": [779, 782], "featureapplicationerror": 459, "featuredefinit": [304, 305], "find_intersecting_pair": 28, "find_neighboring_beam": [283, 765], "find_topologi": 29, "findbeambyrhinoguid": 775, "frame_from_params_and_beam": [497, 513, 540, 581, 638], "french": 780, "frenchridgelap": [535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548], "from_beam_and_beam": 567, "from_beam_beam_and_plan": 541, "from_box": 447, "from_centerlin": 356, "from_endpoint": 357, "from_frame_and_beam": [498, 582], "from_json": [18, 38, 57, 75, 92, 111, 129, 148, 165, 182, 200, 217, 236, 254, 272, 358, 380, 392, 409, 429, 448, 467, 481, 499, 514, 527, 542, 554, 568, 583, 596, 609, 624, 639, 671, 705, 717, 727, 737, 748, 758], "from_jsonstr": [19, 39, 58, 76, 93, 112, 130, 149, 166, 183, 201, 218, 237, 255, 273, 359, 381, 393, 410, 430, 449, 468, 482, 500, 515, 528, 543, 555, 569, 584, 597, 610, 625, 640, 672, 706, 718, 728, 738, 749, 759], "from_line_and_beam": 529, "from_plane_and_beam": [516, 556, 570, 598, 611, 626, 641], "from_planes_and_beam": 483, "function": [1, 2, 6], "generate_fram": 321, "generate_perimeter_beam": 322, "generate_pl": 323, "generate_stud": 325, "generate_stud_lin": 324, "generate_window": 326, "get_beam_intersect": 327, "get_category_rul": [287, 300, 312, 337], "get_cross_cutting_fram": [94, 131, 219, 274], "get_cutting_plan": 113, "get_direct_rul": [288, 301, 313, 338], "get_elements_in_group": 673, "get_face_most_ortho_to_beam": [20, 40, 59, 77, 95, 114, 132, 150, 167, 184, 202, 220, 238, 256, 275], "get_face_most_towards_beam": [21, 41, 60, 78, 96, 115, 133, 151, 168, 185, 203, 221, 239, 257, 276], "get_featur": 394, "get_interior_segment_indic": 328, "get_leaf_subclass": 650, "get_main_cutting_fram": [97, 134, 222, 277], "get_nam": [48, 700], "get_topology_rul": [289, 302, 314, 339], "ghpython": 6, "grasshopp": 772, "guess_joint_topology_2beam": 341, "guid": 773, "halflap": 780, "has_el": 674, "has_group": 675, "has_interact": 676, "has_materi": 677, "hole": 779, "index": 782, "indic": 769, "instal": 770, "instruct": [714, 715, 716, 717, 718, 719, 720, 721, 722, 723], "interact": 678, "is_ident": 308, "item_input_valid": 651, "jackraftercut": [549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561], "join": 782, "joint": [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 768, 780, 782], "jointdefinit": [306, 307, 308, 309], "jointrul": [310, 311, 312, 313, 314, 315], "joints_from_beams_and_rul": [290, 303, 315, 340], "jointtopologi": [47, 48], "l": 780, "lap": [562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 780], "lap_volume_from_params_and_beam": 544, "lapjoint": [121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139], "lbuttjoint": [49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "lfrenchridgelapjoint": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83], "lhalflapjoint": [84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "licens": 771, "lineardimens": [724, 725, 726, 727, 728, 729, 730, 731, 732, 733], "list_input_valid": 652, "lmiterjoint": [103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120], "manage_dynamic_param": 653, "match": 309, "materi": 679, "miter": 780, "model": [7, 776, 780, 781, 782], "model3d": [734, 735, 736, 737, 738, 739, 740, 741, 742, 743], "model_to_xml": 474, "mortis": [576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589], "mortise_volume_from_params_and_beam": 627, "nulljoint": [140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156], "offset_el": 329, "opposing_side_index": 360, "option": 776, "orientationtyp": 590, "overrid": 780, "packag": 0, "pars": 712, "parse_loop": 330, "plan": 8, "plane_from_params_and_beam": 557, "planes_from_params_and_beam": [484, 612, 628], "plate": [399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419], "plugin": [9, 772], "process_joineri": 680, "ref_side_from_fac": 462, "refer": 0, "remove_blank_extens": 361, "remove_el": 681, "remove_featur": [362, 411], "remove_interact": 682, "remove_joint": 683, "rename_gh_input": 654, "reorder": 291, "reset": [363, 382, 412, 431, 450], "restore_beams_from_kei": [22, 42, 61, 79, 98, 116, 135, 152, 169, 186, 204, 223, 240, 258, 278], "rhino": 9, "ridg": 780, "rotat": [684, 685], "rule": 780, "scale": [686, 687], "serial": 713, "set_default_joint": 342, "set_default_valu": 259, "set_frame_and_outlin": 413, "set_step_depth": 241, "set_topologi": 688, "sha256": [23, 43, 62, 80, 99, 117, 136, 153, 170, 187, 205, 224, 242, 260, 279, 364, 383, 395, 414, 432, 451, 469, 485, 501, 517, 530, 545, 558, 571, 585, 599, 613, 629, 642, 689, 707, 719, 729, 739, 750, 760], "show": 782, "side_as_surfac": 365, "simplesequencegener": 744, "slot": [591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602], "stabl": 770, "standard": 774, "step": [745, 746, 747, 748, 749, 750, 751, 752, 753, 754], "stepjoint": [603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617], "stepjointnotch": [618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632], "subtract": 779, "summari": 780, "surfac": [776, 780, 782], "surfacemodel": [316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333], "t": 780, "tabl": [769, 780], "tbirdsmouthjoint": [157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "tbuttjoint": [174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190], "tdovetailjoint": [191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208], "tenon": [633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646], "tenon_volume_from_params_and_beam": 614, "tenonmortisejoint": [246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263], "tenonshapetyp": 647, "text3d": [755, 756, 757, 758, 759, 760, 761, 762, 763, 764], "thalflapjoint": [209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227], "timber": [767, 769], "timberel": [420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437], "timbermodel": [655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698], "to_json": [24, 44, 63, 81, 100, 118, 137, 154, 171, 188, 206, 225, 243, 261, 280, 366, 384, 396, 415, 433, 452, 470, 486, 502, 518, 531, 546, 559, 572, 586, 600, 615, 630, 643, 690, 708, 720, 730, 740, 751, 761], "to_jsonstr": [25, 45, 64, 82, 101, 119, 138, 155, 172, 189, 207, 226, 244, 262, 281, 367, 385, 397, 416, 434, 453, 471, 487, 503, 519, 532, 547, 560, 573, 587, 601, 616, 631, 644, 691, 709, 721, 731, 741, 752, 762], "topolog": 780, "topologi": 782, "topologyrul": [334, 335, 336, 337, 338, 339, 340], "tostr": [11, 31, 50, 68, 85, 104, 122, 141, 158, 175, 192, 210, 229, 247, 265, 285, 293, 298, 305, 307, 335, 344, 372, 390, 400, 421, 439, 464, 477, 490, 506, 522, 536, 550, 563, 577, 592, 604, 619, 634, 656, 702, 715, 725, 735, 746, 756], "transform": [368, 369, 386, 387, 417, 418, 435, 436, 454, 455, 692, 694, 722, 732, 742, 753, 763], "transform_numpi": 693, "transformed_numpi": 695, "translat": [696, 697], "trim": 779, "trim_jack_stud": 331, "trim_king_stud": 332, "trim_stud": 333, "tstepjoint": [228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245], "type": [780, 782], "update_beam_rol": 65, "util": 783, "validate_data": [26, 46, 66, 83, 102, 120, 139, 156, 173, 190, 208, 227, 245, 263, 282, 370, 388, 398, 419, 437, 456, 472, 488, 504, 520, 533, 548, 561, 574, 588, 602, 617, 632, 645, 698, 710, 723, 733, 743, 754, 764], "volume_from_params_and_beam": [575, 589, 646], "wall": [438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456], "workflow": 784, "write": [475, 778], "x": 780, "xhalflapjoint": [264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282]}})